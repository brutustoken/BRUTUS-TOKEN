{"version":3,"sources":["utils/index.jsx","components/Alert.jsx","pages/Home.jsx","components/BRUT.jsx","components/BRST-Proxy.jsx","components/BRGY.jsx","components/BRLT.jsx","components/EBOT.jsx","components/PRO.jsx","components/API.jsx","locales/langs.js","App.jsx","index.js"],"names":["abi_TOKEN","require","abi_SUNSWAP","BigNumber","env","process","CryptoJS","constantes","getRed","index","parseInt","tokenList","REACT_APP_LIST_TRONQL","split","length","proxy","BRUTUS_API","REACT_APP_API_URL","apiProviders","PRICE","market_brut","RED","SC","SC2","ProxySC2","ProxySC3","SC3","SC4","USDT","BRUT","BRST","APENFT","BRGY","BRLT","TOKEN_ABI","SUNSWAPV3","SUNSWAPV3_ABI","testnet","_objectSpread","keyQuery","async","fetch","then","response","json","data","API_KEY","ok","apikey","catch","err","console","log","getTronweb","wallet","red","arguments","undefined","tronWeb","TronWeb","fullHost","setAddress","delay","s","Promise","res","setTimeout","rentResource","wallet_orden","recurso","cantidad","periodo","temporalidad","precio","signedTransaction","time","REACT_APP_WALLET_API","toSun","Date","now","REACT_APP_USER_ID","REACT_APP_TOKEN","AES","encrypt","JSON","stringify","REACT_APP_SECRET","toString","consulta","method","headers","body","user","REACT_APP_USER_C","r","error","result","hash","txID","msg","normalizarNumero","n","shiftedBy","toNumber","numberToStringCero","dp","inter","Alert","_Component","props","_this","_classCallCheck","state","title","message","mostrarMensaje","bind","_inherits","_createClass","key","value","_this2","setInterval","clearInterval","this","setState","window","$","modal","verMensaje","React","createElement","Fragment","type","className","onClick","id","role","Component","nextUpdate","intervalId","Inicio","precioTRX","precioBrut","varBrut","precioBrst","varBrst","misBRUT","misBRST","misBRGY","misBRLT","precioBrstUSD","imagerobots","consultaPrecios","subeobaja","textoE","estado","document","getElementById","innerText","i18n","t","contrato","ready","valor","resultado","width","height","viewBox","fill","xmlns","filter","d","stroke","strokeWidth","strokeLinecap","x","y","filterUnits","colorInterpolationFilters","floodOpacity","in","values","dy","stdDeviation","mode","in2","_this3","Data","usd","v24h","trx","_this4","accountAddress","utils","BRST_TRX_Proxy","RATE","call","balanceOf","style","minWidth","hours","href","src","alt","toFixed","options","label","options2","Home","minCompra","minventa","deposito","valueBRUT","valueUSDT","tiempo","enBrutus","tokensEmitidos","totalCirculando","enPool","solicitado","cantidadDatos","cambio24h","msj","grafico","compra","venta","handleChange","handleChange2","handleChangeBRUT","handleChangeUSDT","consultarPrecio","e","evento","target","event","parseFloat","precioBRUT","toPrecision","proxyUrl","apiUrl","cambio","market","tokens","marketcap","usdt","circulatingSupply","aprovadoUSDT","allowance","BRUT_USDT","address","remaining","balanceUSDT","aprovadoBRUT","balanceBRUT","supplyBRUT","totalSupply","depositoUSDT","depositoBRUT","amount","replace","aprovado","inputs","funcion","trigger","transactionBuilder","triggerSmartContract","toHex","transaction","extendExpiration","tronLink","sign","sendRawTransaction","txid","alert","root","dispose","am5","new","setThemes","am5themes_Animated","chart","container","children","push","am5xy","panX","panY","wheelX","wheelY","pinchZoomX","set","behavior","lineY","color","previousColor","previousDataObj","previousValue","downColor","interfaceColors","get","upColor","generateData","date","dataObj","strokeSettings","xAxis","xAxes","baseInterval","timeUnit","count","renderer","tooltip","yAxis","yAxes","series","name","valueYField","valueXField","strokes","template","labelText","on","background","adapters","add","dataItem","dataContext","scrollbar","orientation","sbDateAxis","sbValueAxis","sbSeries","i","generateDatas","setAll","appear","_this5","tabIndex","defaultValue","backgroundColor","onChange","map","option","placeholder","min","max","step","htmlFor","cursor","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_HALF_DOWN","imgLoading","optionsHours","earnings","iniciado","Staking","_defineProperty","to","selectedCurrency","from","par","calcExchange","valueBRST","valueTRX","solicitudes","solicitudesV3","dias","days","APY","dataBRST","contractEnergy","userEnergy","ModalTitulo","ModalBody","tiempoPromediado","promE7to1day","resultCalc","diasCalc","brutCalc","balanceBRST","balanceTRX","globDepositos","eenergy","energyOn","total_required","isOwner","isAdmin","interesCompuesto","crecimientoPorcentual","precioUSDT","precioUSDD","retiroRapido","penalty","selector","rapida","consultaPrecio","retiro","preClaim","handleChangeDias","handleChangeCalc","llenarBRST","llenarTRX","rentEnergy","handleCurrencyChangeFrom","handleCurrencyChangeTo","exchangeTokens","suawpTokenFromTRX","calculoEnergy","preExchange","costEnergy","dato","oper","out","swap","element","salida","entrada","div","times","isNaN","TRON_BALANCE","TRON_PAY_BALANCE","TRON_SOLICITADO","balance","getUnconfirmedBalance","getBalance","cuenta","getAccountResources","BRST_TRX_Proxy_fast","descuentoRapido","precision","loteria","_premio","balance_token_1","minus","EnergyLimit","EnergyUsed","useTrx","reduce","acc","item","valorInicial","consultaData","diario","MIN_DEPOSIT","price_in_trx","todasSolicitudes","myids","deposits","solicitudesPendientesGlobales","TIEMPO","diasDeEspera","balance_Pool","espera","fromHex","owner","indexOf","pen","verSolicitudPendiente","inicio","pv","diasrestantes","boton","cantidadTrx","brst","plus","includes","disabled","extraData","rel","number","ownerPanel","TRON_RR","energi","available","av_energy","total_energy_pool","transaccion","triggerConstantContract","energy_used","requerido","price","textoModal","returnObjects","energyRequired","token","tokenSelector","sunswapRouter","accept","visible","energyFactor","consume_user_resource_percent","contract_base_token","contract","decimals_base","decimals","aprove","monto","distributeTokens","totalTokens","versions","Array","remainingTokens","poolVersions","poolFees","amountIn","amountOut","feeLimit","callValue","_this6","retorno","unSignedTransaction","sendTrx","consulta2","_this7","toLocaleString","sell","_this8","select","currentPrice","balance_usdt","_this9","_this10","AddressContract","scrollIntoView","concat","_this11","prompt","_logo","encontrado","valor_alt","find","obj","coin","lastPrice","lastData","_this12","opciones","retiradas","checked","readOnly","onInput","donacion","currency","send","paddingLeft","paddingRight","borderRadius","toUpperCase","justifyContent","e1","objeto","daysProm","marginTop","border","unshift","nfts","robots","MBOX","entregaNFT","conteo","estonuevo","ownerOf","URI","tokenURI","metadata","numero","recBotton","claimNFT_especifico","image","mc","mb","totalNFT","premio","LastWiner","proximoSorteo","modalTitulo","modalBody","contarSegundos","restanteSegundos","porcentaje","comprarBRLT","precioUnidad","total","moneda","tikets","minutes","seconds","deadline","onSale","preCompra","sunSwap","sorteo","handleChangeSelect","updateCountdown","getTime","timeToLive","Math","floor","lastWiner","onSaleURI","onSalemetadata","parse","text","proximaRonda","prosort","minutos","getMinutes","getDate","getHours","myTikets","globalId","tokenOfOwnerByIndex","button","valueNFT","feelimit","TRON_PAY_BALANCE_WHITE","swapContract","trxAddress","at","amount_base_token","contract_result_token","amount_result_token","dividedBy","abi_SUNSAWPv2","approve","tokenMax","balanceDCT","decimalesDCT","intercam","open","amountsE","amountB","EnergyRental","montoMin","minPrice","duration","av_band","available_bandwidth","available_energy","total_bandwidth_pool","titulo","amounts","bandOn","fromUrl","unitEnergyPrice","precios","handleChangePeriodo","handleChangeWallet","updateAmount","recursos","calcularRecurso","calcularPrecios","toLowerCase","tmp","loc","location","GET","l","unescape","decodeURI","band","URL","priceList","foundPrice","UE","energy_minutes_100K","energy_hour_100K","energy_one_day_100K","energy_over_one_day_100K","band_minutes_1000","band_hour_1000","band_one_day_1000","band_over_one_day_1000","pagas","isAddress","amountButtons","margin","texto","medidor","action","required","str","charAt","slice","moment","ProviderPanel","provider","firma","rent","elegible","sellband","bandover","sellener","enerover","burn","noti","autofreeze","paymenthour","maxdays","ongoins","nexpayment","payoutRatio","ratioEnergy","ratioEnergyPool","paymentPoints","voteSR","newVoteSR","proEnergyTotal","proEnergy","proBand","proBandTotal","noregist","historic","dataHistoric","alturaGrafico","payment","payhere","payHere","completed","totalPayed30","allPayed","setConfig","test","navigator","userAgent","tz","guess","url","auth","tronlink","adapter","connected","localStorage","getItem","messge","getFullYear","verifyMessageV2","signMessage","setItem","info","naranja","ratio_e","ratio_e_pool","freez","providerEnergy","providerEnergyTotal","providerBand","providerBandTotal","freeNetLimit","NetLimit","freeNetUsed","NetUsed","allow_notifications","energyover","activo","payout_ratio","cNaranja","srVote","utc","format","ongoing_deals","listWallets","customer","lock","order_type","confirm","unfreeze","completed_deals","delegationInfo","getDelegatedResourceAccountIndexV2","toAccounts","getDelegatedResourceV2","index2","delegatedResource","order","resource","sun","expire","ownerAddress","frozen_balance_for_energy","expire_time_for_energy","frozen_balance_for_bandwidth","expire_time_for_bandwidth","elemento","activate","active","over","sellbandover","sellenergyover","external_data","layout","verticalLayout","categoryField","categoryXField","setFreez","hour","setPaymentHour","setMaxDays","sr","setWalletSr","setCoin","estatus","maxHeight","fontSize","campoFreeze","borderColor","payhour","textAlign","onMouseEnter","onMouseLeave","removeItem","fillRule","scope","toReversed","align","CsvDownloader","filename","suffix","extension","separator","wrapColumnChar","columns","displayName","datas","payout","receiverAddress","undelegateResource","cookies","Cookies","path","maxAge","ordenesActivas","ordenesCompletadas","delegatedExternal","ordenesNoregistradas","en","es","pt","striptags","lenguaje","language","userLanguage","i18next","init","fallbackLng","lng","debug","resources","lgSelector","TronLinkAdapter","adressDefault","theme","documentElement","setAttribute","tryes","App","ruta","installed","loggedIn","viewer","BRST_TRX","conexion","walletConect","conectar","route","loadContracts","selecionarIdioma","innerHTML","onclick","resolvedLanguage","changeLanguage","billetera","connect","vierWallet","substring","origin","web3Contracts","Proxy","abi_PROXY","abi_POOLBRST","Proxy_fast","abi_SimpleSwap","ProxyLoteria","abi_LOTERIA","Retorno","Brut","Brst","Nft","LOTERIA","EBOT","PRO","API","createRoot","render"],"mappings":"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","file":"static/js/main.e54a2f09.chunk.js","sourcesContent":["import { TronWeb } from 'tronweb';\r\n\r\nconst abi_TOKEN = require(\"../assets/abi/TRC20-USDT.json\")\r\nconst abi_SUNSWAP = require(\"../assets/abi/SunswapV3.json\")\r\n\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst env = process.env;\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nlet constantes = {}\r\nconstantes.proxy = \"https://cors.brutusservices.com/\";\r\nconstantes.BRUTUS_API = constantes.proxy + env.REACT_APP_API_URL + \"api/v1/\"\r\nconstantes.apiProviders = constantes.proxy + \"https://api-providers.brutusservices.com/main/\"\r\n\r\nconstantes.PRICE = constantes.BRUTUS_API + \"precio/BRUT\"; //API de precio\r\nconstantes.market_brut = constantes.BRUTUS_API + \"consulta/marketcap/brut\"; //API de capitalizacion de mercado\r\n\r\nconstantes.RED = \"https://iujetrtxbxoskh9l1cidv7clngnjnm.mainnet.tron.tronql.com/\"\r\n\r\nconstantes.SC = \"TBRVNF2YCJYGREKuPKaP7jYYP9R1jvVQeq\";//contrato BRUT/USDT\r\nconstantes.SC2 = \"TMzxRLeBwfhm8miqm5v2qPw3P8rVZUa3x6\";//contrato N°2 POOL Staking  BRST/TRX\r\nconstantes.ProxySC2 = \"TRSWzPDgkEothRpgexJv7Ewsqo66PCqQ55\";// POOL Staking  BRST/TRX Proxy\r\nconstantes.ProxySC3 = \"TKSpw8UXhJYL2DGdBNPZjBfw3iRrVFAxBr\";// Pool brst/trx retiradas rapidas\r\nconstantes.SC3 = \"TV2oWfCNLtLDxu1AGJ2D4QJhdWagJN5Xqk\";//contrato Mixtery box\r\nconstantes.SC4 = \"TKghr3aZvCbo41c8y5vUXofChF1gMmjTHr\";//contrato sorteo de loteria 15 dias Proxy\r\n\r\nconstantes.USDT = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\";//token USDT\r\nconstantes.BRUT = \"TLGhEHUevHsfExxm4miyMxfmT5xumNr4BU\";//token trc20 BRUT\r\nconstantes.BRST = \"TF8YgHqnJdWzCbUyouje3RYrdDKJYpGfB3\";//token trc20 BRST\r\nconstantes.APENFT = \"TFczxzPhnThNSqr5by8tvxsdCFRRz6cPNq\";//token de venta de mixtery box\r\nconstantes.BRGY = \"TGpQ3qap18rN1vMJj3pveMfqTeXDaKaDE7\";//token NFT  BRGY \r\nconstantes.BRLT = \"TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU\";//token NFT LOTERIA \r\nconstantes.TOKEN_ABI = abi_TOKEN;\r\n\r\nconstantes.SUNSWAPV3 = \"TXF1xDbVGdxFGbovmmmXvBGu8ZiE3Lq4mR\";\r\nconstantes.SUNSWAPV3_ABI = abi_SUNSWAP;\r\n\r\nif (constantes.testnet) {\r\n\r\n  constantes.RED = \"https://nile.trongrid.io\"\r\n\r\n  constantes.SC = \"TADgHFAqjTeTRthrkGcP1m7TtX221pmPH1\";//pool USDT_BUT\r\n  constantes.SC2 = \"TMt5zzCgpWDUVpw3fiqBZgqQDYCYViZCVC\"; //Pool BRST_TRX\r\n  constantes.ProxySC2 = \"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE\"; // Pool_BRST_TRX Prox\r\n  constantes.ProxySC3 = \"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE----\"; // Pool_BRST_TRX Prox retiradas rapidas \r\n\r\n  constantes.SC3 = \"\";//pool APENFT_NFT\r\n  constantes.SC4 = \"TYtAGrdr6VDopFqrWRbZPXYT9yyMXsZ4zR\";// Loteria Contract NFT_BRST_TRX PROXY\r\n\r\n  constantes.USDT = \"TXYZopYRdj2D9XRtbG411XZZ3kM5VkAeBf\";//token USDT\r\n  constantes.BRUT = \"TTBZHmxP5H2FW8zaJgCR2x2WeB82rJo3xb\";//token trc20 BRUT\r\n  constantes.BRST = \"TVF78ZDkPL2eJgUqs7pDusTgyMtw9WA4tq\";//token trc20 BRST\r\n  constantes.APENFT = \"TMaG566bcktJkjxQpQxshewfTqATzxmtPX\";//token de venta de mixtery box\r\n  constantes.BRGY = \"TMEmo4xexAEu3zSmSrzPJoA1FE6AEfgVyW\";//token NFT  BRGY \r\n  constantes.BRLT = \"TPJ8chq5pHGkWsyDrrVVKQQbS2ECK5UZd5\";//NFT LOTERIA\r\n\r\n}\r\n\r\nfunction delay(s) { return new Promise(res => setTimeout(res, s * 1000)); }\r\n\r\n\r\nasync function keyQuery() {\r\n\r\n  let KEY = await fetch(constantes.BRUTUS_API + 'selector/apikey')\r\n    .then(response => { return response.json(); })\r\n    .then(data => {\r\n      let API_KEY = \"\"\r\n\r\n      if (data.ok) {\r\n        if (data.apikey) {\r\n          API_KEY = data.apikey\r\n        }\r\n\r\n      }\r\n      return API_KEY\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n      return \"\"\r\n    });\r\n\r\n  return KEY\r\n\r\n}\r\n\r\nfunction getRed(index) {\r\n  index = parseInt(index)\r\n  let tokenList = env.REACT_APP_LIST_TRONQL;\r\n  tokenList = tokenList.split(\",\")\r\n\r\n  if (index > tokenList.length) index = tokenList.length - 1;\r\n\r\n  let url = \"https://\" + tokenList[index] + \".mainnet.tron.tronql.com/\"\r\n\r\n  return url;\r\n}\r\n\r\nasync function getTronweb(wallet, red = 0) {\r\n\r\n  const tronWeb = new TronWeb({\r\n    fullHost: getRed(red),\r\n    //headers: { \"TRON-PRO-API-KEY\": await keyQuery() }\r\n  })\r\n\r\n  tronWeb.setAddress(wallet)\r\n\r\n  return tronWeb\r\n\r\n}\r\n\r\nasync function rentResource(wallet_orden, recurso, cantidad, periodo, temporalidad, precio, signedTransaction) {\r\n\r\n  if (recurso === \"bandwidth\" || recurso === \"band\") {\r\n    recurso = \"band\"\r\n  } else {\r\n    recurso = \"energy\"\r\n  }\r\n\r\n  let time = periodo\r\n\r\n  if (temporalidad === \"h\" || temporalidad === \"hour\" || temporalidad === \"hora\") {\r\n    time = periodo + temporalidad\r\n  }\r\n\r\n  if (temporalidad === \"m\" || temporalidad === \"min\" || temporalidad === \"minutes\" || temporalidad === \"minutos\") {\r\n    time = periodo + \"min\"\r\n  }\r\n\r\n  let data = {\r\n    \"wallet\": wallet_orden,\r\n    \"resource\": recurso,\r\n    \"amount\": cantidad,\r\n    \"duration\": time,\r\n\r\n    \"transaction\": signedTransaction,\r\n    \"to_address\": env.REACT_APP_WALLET_API,\r\n    \"precio\": TronWeb.toSun(precio),\r\n\r\n    \"expire\": Date.now() + (500 * 1000),\r\n\r\n    \"id_api\": env.REACT_APP_USER_ID,\r\n    \"token\": env.REACT_APP_TOKEN,\r\n  }\r\n\r\n  // Encrypt\r\n  data = CryptoJS.AES.encrypt(JSON.stringify(data), env.REACT_APP_SECRET).toString();\r\n\r\n  let consulta = {}\r\n\r\n  try {\r\n\r\n    consulta = await fetch(constantes.BRUTUS_API + \"rent/energy\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ user: env.REACT_APP_USER_C, data })\r\n    }).then((r) => r.json())\r\n    \r\n  } catch (error) {\r\n\r\n    console.log(error.toString());\r\n    consulta = { result: false, hash: signedTransaction.txID, msg: \"API-Error: \"+ error.toString() }\r\n    \r\n  }\r\n   \r\n  return consulta\r\n\r\n}\r\n\r\nfunction normalizarNumero(n, s = 6) {\r\n  return new BigNumber(n).shiftedBy(-s).toNumber();\r\n}\r\n\r\nfunction numberToStringCero(n, s = 6) {\r\n  return new BigNumber(n).shiftedBy(s).dp(0).toString(10);\r\n}\r\n\r\nexport default { ...constantes, keyQuery, getTronweb, delay, rentResource, normalizarNumero, numberToStringCero };\r\n","import React, {Component} from \"react\";\r\n\r\nlet inter = null\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"Alert\",\r\n            message: \"\",\r\n            //...this.props\r\n        }\r\n\r\n        this.mostrarMensaje = this.mostrarMensaje.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        inter = setInterval(()=>{\r\n            this.mostrarMensaje()\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    async componentWillUnmount(){\r\n        clearInterval(inter)\r\n    }\r\n\r\n    async mostrarMensaje(){\r\n\r\n        let {message} = this.state\r\n\r\n        if(this.props.message){\r\n            if(message !== this.props.message){\r\n                this.setState({\r\n                    ...this.props,\r\n                })\r\n                window.$(\"#alert\").modal(\"show\");\r\n            }\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        let {title, message} = this.state\r\n\r\n        let verMensaje = <></>\r\n        if(message !== \"\") {\r\n            verMensaje = (<button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                window.$(\"#alert\").modal(\"show\");\r\n            }}>See last Message</button>)\r\n        }\r\n\r\n        return(<>\r\n            {verMensaje}\r\n    \r\n            <div className=\"modal fade\" id=\"alert\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{title}</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>{message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\nexport default class Inicio extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tprecioTRX: 0.1594,\r\n\r\n\t\t\tprecioBrut: 0,\r\n\t\t\tvarBrut: 0,\r\n\t\t\tprecioBrst: 0,\r\n\t\t\tvarBrst: 0,\r\n\t\t\tmisBRUT: 0,\r\n\t\t\tmisBRST: 0,\r\n\t\t\tmisBRGY: 0,\r\n\t\t\tmisBRLT: 0,\r\n\t\t\tprecioBrstUSD: 0,\r\n\r\n\t\t\timagerobots: []\r\n\r\n\t\t};\r\n\r\n\t\tthis.consultaPrecios = this.consultaPrecios.bind(this);\r\n\t\tthis.subeobaja = this.subeobaja.bind(this);\r\n\t\tthis.textoE = this.textoE.bind(this);\r\n\t\tthis.estado = this.estado.bind(this);\r\n\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.getElementById(\"tittle\").innerText = this.props.i18n.t(\"inicio.tittle\")\r\n\r\n\t\tintervalId = setInterval(() => {\r\n\r\n\t\t\tif (Date.now() >= nextUpdate) {\r\n\r\n\t\t\t\tif (!this.props.contrato.ready) {\r\n\t\t\t\t\tnextUpdate = Date.now() + 3 * 1000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextUpdate = Date.now() + 60 * 1000;\r\n\t\t\t\t}\r\n\t\t\t\tthis.estado();\r\n\t\t\t}\r\n\r\n\t\t}, 3 * 1000);\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(intervalId)\r\n\t}\r\n\r\n\tsubeobaja(valor) {\r\n\t\tvar imgNPositivo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t<g filter=\"url(#filter0_d2)\">\r\n\t\t\t\t<path d=\"M5 16C5.91797 14.9157 8.89728 11.7277 10.5 10L16.5 13L23.5 4\"\r\n\t\t\t\t\tstroke=\"#2BC155\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<filter id=\"filter0_d2\" x=\"-3.05176e-05\" y=\"-6.10352e-05\" width=\"28.5001\"\r\n\t\t\t\t\theight=\"22.0001\" filterUnits=\"userSpaceOnUse\"\r\n\t\t\t\t\tcolorInterpolationFilters=\"sRGB\">\r\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n\t\t\t\t\t<feOffset dy=\"1\" />\r\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"0 0 0 0 0.172549 0 0 0 0 0.72549 0 0 0 0 0.337255 0 0 0 0.61 0\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\"\r\n\t\t\t\t\t\tresult=\"effect1_dropShadow\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\"\r\n\t\t\t\t\t\tresult=\"shape\" />\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\t\t</svg>);\r\n\t\tvar imgNegativo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t<g filter=\"url(#filter0_d)\">\r\n\t\t\t\t<path d=\"M5 4C5.91797 5.08433 8.89728 8.27228 10.5 10L16.5 7L23.5 16\" stroke=\"#FF2E2E\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"28.5001\" height=\"22.0001\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n\t\t\t\t\t<feOffset dy=\"1\" />\r\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.180392 0 0 0 0 0.180392 0 0 0 0.61 0\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\t\t</svg>);\r\n\r\n\t\tvar resultado = imgNPositivo;\r\n\r\n\t\tif (valor < 0) {\r\n\t\t\tresultado = imgNegativo\r\n\t\t}\r\n\r\n\t\treturn resultado;\r\n\t}\r\n\r\n\ttextoE(valor) {\r\n\r\n\t\tvar resultado = \"success\";\r\n\r\n\t\tif (valor < 0) {\r\n\t\t\tresultado = \"danger\"\r\n\t\t}\r\n\r\n\t\treturn resultado;\r\n\r\n\t}\r\n\r\n\tasync consultaPrecios() {\r\n\t\tawait fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brut')\r\n\t\t\t.then(response => { return response.json(); })\r\n\t\t\t.then(data => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprecioBrut: data.Data.usd,\r\n\t\t\t\t\tvarBrut: data.Data.v24h,\r\n\t\t\t\t})\r\n\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\r\n\t\t\t});\r\n\r\n\t\tawait fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brst')\r\n\t\t\t.then(async (r) => (await r.json()).Data)\r\n\t\t\t.then((r) => {\r\n\t\t\t\t//console.log(r)\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprecioTRX: r.usd / r.trx,\r\n\t\t\t\t\tvarBrst: r.v24h,\r\n\t\t\t\t\tprecioBrstUSD: r.usd\r\n\t\t\t\t})\r\n\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tasync estado() {\r\n\r\n\t\tawait this.consultaPrecios();\r\n\r\n\t\tlet { contrato, accountAddress } = this.props\r\n\r\n\t\tif (!contrato.ready) return;\r\n\r\n\t\t//console.log(this.props.tronWeb.createRandom({path: \"m/44'/195'/0'/0/0\", extraEntropy: 'alajuacdand', locale: 'en'}))\r\n\t\tlet precioBrst = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.RATE().call());\r\n\t\tthis.setState({\r\n\t\t\tprecioBrst: precioBrst,\r\n\t\t})\r\n\r\n\t\tcontrato.BRST.balanceOf(accountAddress).call()\r\n\t\t\t.then((result) => { this.setState({ misBRST: utils.normalizarNumero(result) }) })\r\n\t\t\t.catch(console.error)\r\n\r\n\t\tcontrato.BRUT.balanceOf(accountAddress).call()\r\n\t\t\t.then((result) => { this.setState({ misBRUT: utils.normalizarNumero(result) }) })\r\n\t\t\t.catch(console.error)\r\n\r\n\t\tif (accountAddress !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n\t\t\tcontrato.BRGY.balanceOf(accountAddress).call()\r\n\t\t\t\t.then((result) => { this.setState({ misBRGY: utils.normalizarNumero(result, 0) }) })\r\n\t\t\t\t.catch(console.error)\r\n\r\n\t\t\tcontrato.BRLT.balanceOf(accountAddress).call()\r\n\t\t\t\t.then((result) => { this.setState({ misBRLT: utils.normalizarNumero(result, 0) }) })\r\n\t\t\t\t.catch(console.error)\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * <div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t<div className=\"profile card card-body px-3 pt-3\">\r\n\t\t\t\t\t\t\t<div className=\"profile-head\">\r\n\t\t\t\t\t\t\t\t<div className=\"photo-content\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"/#/ebot\" title={this.props.i18n.t('inicio.try')}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"rounded\"><img style={{ borderRadius: \"1%\" }}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"images/banner.jpg\" alt=\"tron energy rental\" width=\"100%\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t * \r\n\t\t */\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-xl-12\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body pt-0\">\r\n\t\t\t\t\t\t\t\t<div className=\"tab-content\" id=\"pills-tabContent\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"tab-pane fade show active\" id=\"pills-crypto\" role=\"tabpanel\"\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"pills-crypto-tab\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive dataTablemarket\">\r\n\t\t\t\t\t\t\t\t\t\t\t<table id=\"example\" className=\"table shadow-hover display\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ minWidth: \"845px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{this.props.i18n.t('inicio.name')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t('inicio.tokenB')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t('inicio.price')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t('inicio.changeH', { hours: 24 })}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t(\"inicio.totalB\")}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t(\"inicio.usdValue\")}</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brut\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brut.png\" width=\"50px\" alt=\"brutus token\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0 ms-2\">BRUT</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\">Brutus Token</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.state.misBRUT}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.state.precioBrut} USDT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.subeobaja(this.state.varBrut)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className={\"text-\" + this.textoE(this.state.varBrut)}>{(this.state.varBrut).toFixed(3)}%</span></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(this.state.misBRUT * this.state.precioBrut).toFixed(3)} USDT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(this.state.misBRUT * this.state.precioBrut).toFixed(3)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brst\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brst.png\" width=\"50px\" alt=\"brutus tron staking\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0 ms-2\">BRST</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\">Brutus Tron Staking</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.state.misBRST}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(this.state.precioBrst).toFixed(6)} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.subeobaja(this.state.varBrst)}<span className={\"text-\" + this.textoE(this.state.varBrst)}>{(this.state.varBrst).toFixed(3)}%</span></td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(this.state.misBRST * this.state.precioBrstUSD).toFixed(2)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brgy\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brgy.png\" width=\"50px\" alt=\"brutus gallery\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0 ms-2\">BRGY</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\">Brutus {this.props.i18n.t(\"gallery\")}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.state.misBRGY}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>NFT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-0-</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-0-</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-0-</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brlt\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brlt.png\" width=\"50px\" alt=\"brutus lottery\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className=\"mb-0 ms-2\">BRLT</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\">Brutus {this.props.i18n.t(\"lottery\")}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.state.misBRLT}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>100 TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>-0-</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{this.state.misBRLT * 100} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{(this.state.misBRLT * 100 * this.state.precioTRX).toFixed(1)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport const Head = () => <>\r\n\r\n\t<meta property=\"og:image\" content=\"brutusimage\" />\r\n</>","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport Alert from \"./Alert\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nconst BigNumber = require(\"bignumber.js\");\r\n\r\nconst options = [\r\n  {\r\n    label: \"Hours\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    label: \"Days\",\r\n    value: \"day\",\r\n  }\r\n];\r\n\r\nconst options2 = [\r\n  {\r\n    label: \"Last 7 \",\r\n    value: \"7\",\r\n  },\r\n  {\r\n    label: \"Last 30 \",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"Last 90 \",\r\n    value: \"90\",\r\n  },\r\n  {\r\n    label: \"Last 180 \",\r\n    value: \"180\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      minCompra: 10,\r\n      minventa: 1,\r\n      deposito: \"Loading...\",\r\n      wallet: \"Loading...\",\r\n      valueBRUT: \"\",\r\n      valueUSDT: \"\",\r\n      value: \"\",\r\n      cantidad: 0,\r\n      tiempo: 0,\r\n      enBrutus: 0,\r\n      tokensEmitidos: 0,\r\n      totalCirculando: 0,\r\n      enPool: 0,\r\n      solicitado: 0,\r\n      data: [],\r\n      temporalidad: \"day\",\r\n      cantidadDatos: 30,\r\n      cambio24h: 0,\r\n\r\n      msj: {},\r\n\r\n    };\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n    this.compra = this.compra.bind(this);\r\n    this.venta = this.venta.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n\r\n    this.handleChangeBRUT = this.handleChangeBRUT.bind(this);\r\n    this.handleChangeUSDT = this.handleChangeUSDT.bind(this);\r\n    this.consultarPrecio = this.consultarPrecio.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"BRUT | Brutus Token\";\r\n    this.grafico(1000, \"day\", 30);\r\n    this.consultarPrecio();\r\n\r\n    intervalId = setInterval(() => {\r\n\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (!this.props.contrato.ready) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado();\r\n      }\r\n\r\n    }, 3 * 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n  handleChange(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, evento, this.state.cantidadDatos);\r\n    this.setState({ temporalidad: evento });\r\n  }\r\n\r\n  handleChange2(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, this.state.temporalidad, evento);\r\n    this.setState({ cantidadDatos: evento });\r\n  }\r\n\r\n  async handleChangeBRUT(event) {\r\n    this.consultarPrecio();\r\n    await this.setState({ valueBRUT: event.target.value });\r\n\r\n    this.setState({ valueUSDT: parseFloat((this.state.valueBRUT * this.state.precioBRUT).toPrecision(8)) });\r\n\r\n  }\r\n\r\n  async handleChangeUSDT(event) {\r\n    this.consultarPrecio();\r\n\r\n    await this.setState({ valueUSDT: event.target.value });\r\n\r\n    this.setState({ valueBRUT: parseFloat((this.state.valueUSDT / this.state.precioBRUT).toPrecision(8)) });\r\n\r\n\r\n  }\r\n\r\n  async consultarPrecio() {\r\n\r\n    var proxyUrl = utils.proxy;\r\n    var apiUrl = utils.PRICE;\r\n\r\n    var response;\r\n    var cambio = 0;\r\n\r\n    let precio;\r\n    try {\r\n      response = await fetch(proxyUrl + apiUrl).then((res) => { return res.json() }).catch(error => { console.error(error) })\r\n      precio = response.Data.usd;\r\n      cambio = response.Data.v24h\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      precio = this.state.precioBRUT;\r\n      cambio = this.state.cambio24h\r\n\r\n    }\r\n\r\n\r\n    let market = 0;\r\n    let tokens = 0;\r\n\r\n    try {\r\n      response = await fetch(proxyUrl + utils.market_brut).then((res) => { return res.json() }).catch(error => { console.error(error) })\r\n      market = response.marketcap.usdt;\r\n      tokens = response.circulatingSupply;\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      market = this.state.enBrutus;\r\n      tokens = this.state.tokensEmitidos\r\n\r\n    }\r\n\r\n    this.setState({\r\n      cambio24h: new BigNumber(cambio).dp(3).toString(10),\r\n      precioBRUT: new BigNumber(precio).dp(2).toString(10),\r\n      enBrutus: market,\r\n      tokensEmitidos: tokens\r\n\r\n    })\r\n\r\n\r\n    return response;\r\n\r\n  };\r\n\r\n  async estado() {\r\n\r\n    let { accountAddress, contrato } = this.props;\r\n\r\n    if (!contrato.ready) return;\r\n\r\n    let aprovadoUSDT = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    if (aprovadoUSDT.remaining) aprovadoUSDT = aprovadoUSDT.remaining;\r\n    aprovadoUSDT = utils.normalizarNumero(aprovadoUSDT)\r\n\r\n    let balanceUSDT = await contrato.USDT.balanceOf(accountAddress).call();\r\n    balanceUSDT = utils.normalizarNumero(balanceUSDT)\r\n\r\n    if (aprovadoUSDT >= balanceUSDT) {\r\n      aprovadoUSDT = \"Buy \";\r\n    } else {\r\n      aprovadoUSDT = \"Approve Purchases\";\r\n      this.setState({\r\n        valueUSDT: \"\"\r\n      })\r\n    }\r\n\r\n    let aprovadoBRUT = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    if (aprovadoBRUT.remaining) aprovadoBRUT = aprovadoBRUT.remaining;\r\n    aprovadoBRUT = utils.normalizarNumero(aprovadoBRUT);\r\n\r\n    let balanceBRUT = await contrato.BRUT.balanceOf(accountAddress).call();\r\n    balanceBRUT = utils.normalizarNumero(balanceBRUT);\r\n\r\n    if (aprovadoBRUT >= balanceBRUT) {\r\n      aprovadoBRUT = \"Sell \";\r\n    } else {\r\n      aprovadoBRUT = \"Approve Sales\";\r\n      this.setState({\r\n        valueBRUT: \"\"\r\n      })\r\n    }\r\n\r\n    let supplyBRUT = await contrato.BRUT.totalSupply().call();\r\n    supplyBRUT = utils.normalizarNumero(supplyBRUT);\r\n\r\n    this.setState({\r\n      depositoUSDT: aprovadoUSDT,\r\n      depositoBRUT: aprovadoBRUT,\r\n      balanceBRUT,\r\n      balanceUSDT,\r\n      wallet: accountAddress,\r\n      totalCirculando: supplyBRUT\r\n    });\r\n\r\n  }\r\n\r\n  async compra() {\r\n\r\n    let { minCompra } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let amount = document.getElementById(\"amountUSDT\").value;\r\n    amount = utils.normalizarNumero(amount.replace(/,/g, \".\"), 0);\r\n\r\n    let aprovado = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    if (aprovado <= 0) {\r\n      let inputs = [\r\n        { type: 'address', value: contrato.BRUT_USDT.address },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"allowance(address,uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction hash: {r.txid}</> } })\r\n\r\n        })\r\n      //await contrato.USDT.approve(contrato.USDT, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n      aprovado = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    }\r\n\r\n    if (aprovado.remaining) aprovado = aprovado.remaining;\r\n    aprovado = utils.normalizarNumero(aprovado);\r\n\r\n    if (aprovado >= amount) {\r\n      if (amount >= minCompra) {\r\n\r\n        let inputs = [\r\n          //{ type: 'address', value: AddressContract },\r\n          { type: 'uint256', value: utils.numberToStringCero(amount) }\r\n        ]\r\n\r\n        let funcion = \"comprar(uint256)\"\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n            return false;\r\n          })\r\n        if (!transaction) return;\r\n        await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then((r) => {\r\n\r\n            this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n          })\r\n\r\n        document.getElementById(\"amountUSDT\").value = \"\";\r\n\r\n\r\n      } else {\r\n        window.alert(\"Enter an amount greater than \" + minCompra + \" USDT\");\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n      }\r\n\r\n    } else {\r\n\r\n\r\n      if (aprovado <= 0) {\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n        window.alert(\"Not enough USDT\");\r\n      } else {\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n        window.alert(\"invalid value\");\r\n      }\r\n\r\n    }\r\n\r\n    this.estado();\r\n  };\r\n\r\n  async venta() {\r\n\r\n    const { minventa, balanceBRUT } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let amount = document.getElementById(\"amountBRUT\").value;\r\n    amount = utils.normalizarNumero(amount.replace(/,/g, \".\"), 0)\r\n\r\n    let aprovado = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    if (aprovado <= 0) {\r\n      let inputs = [\r\n        { type: 'address', value: contrato.BRUT_USDT.address },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"allowance(address,uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction hash: {r.txid}</> } })\r\n\r\n        })\r\n      aprovado = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    }\r\n\r\n    if (aprovado.remaining) aprovado = aprovado.remaining;\r\n    aprovado = utils.normalizarNumero(aprovado);\r\n\r\n    if (amount < minventa) {\r\n      document.getElementById(\"amountBRUT\").value = minventa;\r\n      this.setState({ msj: { title: \"Error\", message: \"Place an amount greater than \" + minventa + \" BRUT\" } })\r\n      return;\r\n    }\r\n\r\n    if (amount > balanceBRUT) {\r\n      document.getElementById(\"amountBRUT\").value = minventa;\r\n      this.setState({ msj: { title: \"Error\", message: \"Insuficient BRUT\" } })\r\n      return;\r\n    }\r\n\r\n\r\n    if (aprovado >= amount) {\r\n\r\n      let inputs = [\r\n        //{ type: 'address', value: AddressContract },\r\n        { type: 'uint256', value: utils.numberToStringCero(amount) }\r\n      ]\r\n\r\n      let funcion = \"vender(uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n        })\r\n\r\n      document.getElementById(\"amountBRUT\").value = \"\";\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async grafico(time, temporalidad, cantidad) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n\r\n    const root = am5.Root.new(\"chartdiv\");\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        pinchZoomX: true\r\n      })\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"none\"\r\n    }));\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    // Generate random data\r\n    let value = 0;\r\n    let previousValue = value;\r\n    let downColor = root.interfaceColors.get(\"negative\");\r\n    let upColor = root.interfaceColors.get(\"positive\");\r\n    let color;\r\n    let previousColor;\r\n    let previousDataObj;\r\n\r\n    function generateData(data) {\r\n      value = data.value;\r\n      let date = data.date\r\n\r\n      if (value >= previousValue) {\r\n        color = upColor;\r\n      } else {\r\n        color = downColor;\r\n      }\r\n      previousValue = value;\r\n\r\n      let dataObj = { date , value, color }; // color will be used for tooltip background\r\n\r\n      // only if changed\r\n      if (color !== previousColor) {\r\n        if (!previousDataObj) {\r\n          previousDataObj = dataObj;\r\n        }\r\n        previousDataObj.strokeSettings = { stroke: color };\r\n      }\r\n\r\n      previousDataObj = dataObj;\r\n      previousColor = color;\r\n\r\n      return dataObj;\r\n    }\r\n\r\n    async function generateDatas(count) {\r\n      let consulta = (await (await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brut?temporalidad=\" + temporalidad + \"&limite=\" + count)).json()).Data\r\n      let data = []\r\n\r\n      for (var i = consulta.length - 1; i >= 0; --i) {\r\n        data.push(generateData(consulta[i]));\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"Series\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\"\r\n      })\r\n    );\r\n\r\n    series.strokes.template.set(\"templateField\", \"strokeSettings\");\r\n\r\n    let tooltip = series.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      labelText: \"{valueY}\"\r\n    }));\r\n\r\n    // this is added in ored adapter to be triggered each time position changes\r\n    tooltip.on(\"pointTo\", function () {\r\n      let background = tooltip.get(\"background\");\r\n      background.set(\"fill\", background.get(\"fill\"));\r\n    });\r\n\r\n    // tooltip bacground takes color from data item\r\n    tooltip.get(\"background\").adapters.add(\"fill\", function (fill) {\r\n      if (tooltip.dataItem) {\r\n        return tooltip.dataItem.dataContext.color;\r\n      }\r\n      return fill;\r\n    });\r\n\r\n    // Add scrollbar\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n    //scrollbar.parent = chart.bottomAxesContainer;\r\n    let scrollbar = chart.set(\r\n      \"scrollbarX\",\r\n      am5xy.XYChartScrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n        height: 30\r\n      })\r\n    );\r\n\r\n    let sbDateAxis = scrollbar.chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: {\r\n          timeUnit: temporalidad,\r\n          count: 1\r\n        },\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbValueAxis = scrollbar.chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbSeries = scrollbar.chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        xAxis: sbDateAxis,\r\n        yAxis: sbValueAxis,\r\n\r\n      })\r\n    );\r\n\r\n    // Generate and set data  | \r\n    let data = await generateDatas(cantidad);\r\n    series.data.setAll(data);\r\n    sbSeries.data.setAll(data);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n\r\n\r\n    series.appear(time);\r\n    chart.appear(time, time / 10);\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  render() {\r\n\r\n    let { minCompra, minventa, msj } = this.state;\r\n\r\n    minCompra = \"Min. \" + minCompra + \" USDT\";\r\n    minventa = \"Min. \" + minventa + \" BRUT\";\r\n\r\n    return (<>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"nav-bitcoin\" role=\"tabpanel\" aria-labelledby=\"nav-bitcoin-tab\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-xxl-9 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                  <div className=\"card coin-content\">\r\n                    <div className=\"card-header border-0 flex-wrap\">\r\n                      <div className=\"mb-2\">\r\n                        <h4 className=\"heading m-0\">BRUT Chart</h4>\r\n                        <span className=\"fs-16\">Brutus Algorithmic Trading Robot </span>\r\n                      </div>\r\n                      <div className=\"dropdown bootstrap-select\">\r\n                        <select className=\"image-select default-select dashboard-select\" aria-label=\"Default\" tabIndex=\"0\" defaultValue=\"usdt\" style={{ background: \"rgb(3 0 8 / 49%)\"}}>\r\n                          <option value={\"usdt\"}>USD₮ (Tether)</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-18 d-block mb-2\">Price</span>\r\n                            <h4 className=\"fs-20 font-w600\">${this.state.precioBRUT}</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">24h% change</span>\r\n                            <h4 className=\"font-w600 text-success\">{this.state.cambio24h}<i className=\"fa-solid fa-caret-up ms-1 text-success\"></i></h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">Circulating</span>\r\n                            <h4 className=\"font-w600\">{(this.state.tokensEmitidos * 1).toFixed(2)}</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">Market Cap</span>\r\n                            <h4 className=\"font-w600\">${(this.state.enBrutus * 1).toFixed(2)}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\" id=\"chartdiv\" style={{ height: \"400px\", backgroundColor: \"white\" }}></div>\r\n\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: \"white\" }} value={this.state.cantidadDatos} onChange={this.handleChange2}>\r\n                        {options2.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      {\" | \"}\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: \"white\" }} value={this.state.temporalidad} onChange={this.handleChange}>\r\n                        {options.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-xxl-3 col-sm-6 wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                  <div className=\"card  digital-cash\">\r\n\r\n                    <div className=\"card-body \">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"media d-block\">\r\n                          <img src=\"images/brut.png\" width=\"100%\" alt=\"brutus token\" ></img>\r\n                          <div className=\"media-content\">\r\n                            <h4 className=\"mt-0 mt-md-4 fs-20 font-w700 text-black mb-0\">Automated Trading</h4>\r\n                            <span className=\"font-w600 text-black\">Brutus</span>\r\n                            <span className=\"my-4 fs-16 font-w600 d-block\">1 BRUT = {this.state.precioBRUT} USD</span>\r\n                            <p className=\"text-start\">The Brutus Token is a Tron-based token whose value is backed by an automated trading strategy that uses backtesting and capital management to maximize profits and minimize losses. The value of the Brutus Token is pegged to USDT, so its value remains stable in USD terms.</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer p-2 border-0\">\r\n                      <a href=\"https://brutus.finance/brutusblog.html\" className=\"btn btn-link text-primary\">Read more</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-6 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                  <div className=\"card quick-trade\">\r\n                    <div className=\"card-header pb-0 border-0 flex-wrap\">\r\n                      <div>\r\n                        <h4 className=\"heading mb-0\">Quick Trade</h4>\r\n                        <p className=\"mb-0 fs-14\">without fees</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body pb-0\">\r\n                      <div className=\"basic-form\">\r\n                        <form className=\"form-wrapper trade-form\">\r\n                          <div className=\"input-group mb-3 \">\r\n                            <span className=\"input-group-text\">BRUT</span>\r\n                            <input className=\"form-control form-control text-end\" type=\"number\" id=\"amountBRUT\" onChange={this.handleChangeBRUT} placeholder={minventa} min={this.state.minventa} max={this.state.balanceBRUT} value={this.state.valueBRUT} step={0.5} ></input>\r\n                          </div>\r\n                          <div className=\"input-group mb-3 \">\r\n                            <span className=\"input-group-text\">USDT</span>\r\n                            <input className=\"form-control form-control text-end\" type=\"number\" id=\"amountUSDT\" onChange={this.handleChangeUSDT} placeholder={minCompra} min={this.state.minCompra} max={this.state.balanceUSDT} value={this.state.valueUSDT} ></input>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer border-0\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button className=\"btn d-flex  btn-success justify-content-between w-100\" onClick={() => this.compra()}>\r\n                            BUY\r\n                            <svg className=\"ms-4 scale5\" width=\"16\" height=\"16\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M5.35182 13.4965L5.35182 13.4965L5.33512 6.58823C5.33508 6.5844 5.3351 6.58084 5.33514 6.57759M5.35182 13.4965L5.83514 6.58306L5.33514 6.58221C5.33517 6.56908 5.33572 6.55882 5.33597 6.5545L5.33606 6.55298C5.33585 6.55628 5.33533 6.56514 5.33516 6.57648C5.33515 6.57684 5.33514 6.57721 5.33514 6.57759M5.35182 13.4965C5.35375 14.2903 5.99878 14.9324 6.79278 14.9305C7.58669 14.9287 8.22874 14.2836 8.22686 13.4897L8.22686 13.4896L8.21853 10.0609M5.35182 13.4965L8.21853 10.0609M5.33514 6.57759C5.33752 5.789 5.97736 5.14667 6.76872 5.14454C6.77041 5.14452 6.77217 5.14451 6.77397 5.14451L6.77603 5.1445L6.79319 5.14456L13.687 5.16121L13.6858 5.66121L13.687 5.16121C14.4807 5.16314 15.123 5.80809 15.1211 6.6022C15.1192 7.3961 14.4741 8.03814 13.6802 8.03626L13.6802 8.03626L10.2515 8.02798L23.4341 21.2106C23.9955 21.772 23.9955 22.6821 23.4341 23.2435C22.8727 23.8049 21.9625 23.8049 21.4011 23.2435L8.21853 10.0609M5.33514 6.57759C5.33513 6.57959 5.33514 6.58159 5.33514 6.5836L8.21853 10.0609M6.77407 5.14454C6.77472 5.14454 6.77537 5.14454 6.77603 5.14454L6.77407 5.14454Z\" fill=\"white\" stroke=\"white\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button className=\"btn d-flex  btn-danger justify-content-between w-100\" onClick={() => this.venta()}>\r\n                            SELL\r\n                            <svg className=\"ms-4 scale3\" width=\"16\" height=\"16\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M16.9638 11.5104L16.9721 14.9391L3.78954 1.7565C3.22815 1.19511 2.31799 1.19511 1.75661 1.7565C1.19522 2.31789 1.19522 3.22805 1.75661 3.78943L14.9392 16.972L11.5105 16.9637L11.5105 16.9637C10.7166 16.9619 10.0715 17.6039 10.0696 18.3978C10.0677 19.1919 10.7099 19.8369 11.5036 19.8388L11.5049 19.3388L11.5036 19.8388L18.3976 19.8554L18.4146 19.8555L18.4159 19.8555C18.418 19.8555 18.42 19.8555 18.422 19.8555C19.2131 19.8533 19.8528 19.2114 19.8555 18.4231C19.8556 18.4196 19.8556 18.4158 19.8556 18.4117L19.8389 11.5035L19.8389 11.5035C19.8369 10.7097 19.1919 10.0676 18.3979 10.0695C17.604 10.0713 16.9619 10.7164 16.9638 11.5103L16.9638 11.5104Z\" fill=\"white\" stroke=\"white\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex mt-3 align-items-center\">\r\n                        <div className=\"form-check custom-checkbox me-3\">\r\n                          <label className=\"form-check-label fs-14 font-w400\" htmlFor=\"customCheckBox1\">We recommend keeping ~ 21 TRX for transactions.</label>\r\n                        </div>\r\n                        <p className=\"mb-0\"></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-12 wow fadeInUp\" data-wow-delay=\"0.6s\">\r\n                  <div className=\"card price-list\">\r\n                    <div className=\"card-header border-0 pb-2\">\r\n                      <div className=\"chart-title\">\r\n                        <h4 className=\"text-warning mb-0\">My Assets</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body p-3 py-0\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table text-center bg-warning-hover order-tbl\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"text-left\">Token</th>\r\n                              <th className=\"text-center\">Amount</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.handleChangeBRUT({ target: { value: this.state.balanceBRUT } }) }}>\r\n                              <td className=\"text-left\">BRUT</td>\r\n                              <td>{this.state.balanceBRUT}</td>\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.handleChangeUSDT({ target: { value: this.state.balanceUSDT } }) }}>\r\n                              <td className=\"text-left\">USDT</td>\r\n                              <td>{this.state.balanceUSDT}</td>\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-center py-3 border-0\">\r\n                      <a href=\"/\" className=\"btn-link text-black\">Show more <i className=\"fa fa-caret-right\"></i></a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert {...msj} />\r\n    </>);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\nBigNumber.config({ DECIMAL_PLACES: 6, ROUNDING_MODE: BigNumber.ROUND_HALF_DOWN });\r\n\r\nconst imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" ></img>\r\n\r\nconst options = [\r\n  {\r\n    label: \"Hours\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    label: \"Days\",\r\n    value: \"day\",\r\n  }\r\n];\r\n\r\n/*\r\n\r\n  {\r\n    label: \"Semanal\",\r\n    value: \"week\",\r\n  },\r\n  {\r\n    label: \"Mensual\",\r\n    value: \"month\",\r\n  }\r\n*/\r\n\r\nconst options2 = [\r\n  {\r\n    label: \"Last 7 \",\r\n    value: \"7\",\r\n  },\r\n  {\r\n    label: \"Last 30 \",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"Last 90 \",\r\n    value: \"90\",\r\n  },\r\n  {\r\n    label: \"Last 180 \",\r\n    value: \"180\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nconst optionsHours = [\r\n  {\r\n    label: \"Last 6 \",\r\n    value: \"6\",\r\n  },\r\n  {\r\n    label: \"Last 12 \",\r\n    value: \"12\",\r\n  },\r\n  {\r\n    label: \"Last 24 \",\r\n    value: \"24\",\r\n  },\r\n  {\r\n    label: \"Last 48 \",\r\n    value: \"48\",\r\n  },\r\n  {\r\n    label: \"Last 72 \",\r\n    value: \"72\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nlet earnings = []\r\nlet iniciado = 0;\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nexport default class Staking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      minCompra: 1,\r\n      minventa: 1,\r\n      deposito: props.i18n.t(\"loading\") + \"...\",\r\n      valueBRST: \"\",\r\n      valueTRX: \"\",\r\n      cantidad: 0,\r\n      tiempo: 0,\r\n      enBrutus: 0,\r\n      tokensEmitidos: 0,\r\n      enPool: 0,\r\n      solicitado: 0,\r\n      data: [],\r\n      solicitudes: 0,\r\n      solicitudesV3: 0,\r\n      temporalidad: props.i18n.t(\"day\"),\r\n      cantidadDatos: 30,\r\n      dias: props.i18n.t(\"loading\") + \"...\",\r\n      days: [{ days: 30, amount: 0, time: 0, APY: 0 }, { days: 90, amount: 0, time: 0, APY: 0 }, { days: 180, amount: 0, time: 0, APY: 0 }, { days: 360, amount: 0, time: 0, APY: 0 }],\r\n      varBrut: 0,\r\n      precioBrst: 0,\r\n      varBrst: 0,\r\n      misBRST: 0,\r\n      dataBRST: [],\r\n      contractEnergy: 0,\r\n      userEnergy: 0,\r\n      ModalTitulo: \"\",\r\n      ModalBody: \"\",\r\n      tiempoPromediado: 30,\r\n      promE7to1day: 0,\r\n      resultCalc: 0,\r\n      diasCalc: 360,\r\n      brutCalc: 1000,\r\n      balanceBRST: 0,\r\n      balanceTRX: 0,\r\n      globDepositos: [],\r\n      eenergy: 62000,\r\n      energyOn: false,\r\n      total_required: 0,\r\n      isOwner: false,\r\n      isAdmin: false,\r\n      interesCompuesto: 0,\r\n      crecimientoPorcentual: 0,\r\n      precioUSDT: new BigNumber(0),\r\n      precioUSDD: new BigNumber(0),\r\n      retiroRapido: new BigNumber(0),\r\n      penalty: 0,\r\n      from: \"trx\",\r\n      to: \"brst\",\r\n      par: \"trx_brst\",\r\n      selector: \"trx\",\r\n      rapida: true,\r\n    };\r\n\r\n\r\n    this.subeobaja = this.subeobaja.bind(this);\r\n    this.textoE = this.textoE.bind(this);\r\n    this.consultaPrecio = this.consultaPrecio.bind(this);\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n    this.compra = this.compra.bind(this);\r\n\r\n    this.venta = this.venta.bind(this);\r\n\r\n    this.retiro = this.retiro.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.preClaim = this.preClaim.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n\r\n    this.handleChangeDias = this.handleChangeDias.bind(this);\r\n    this.handleChangeCalc = this.handleChangeCalc.bind(this);\r\n\r\n    this.llenarBRST = this.llenarBRST.bind(this);\r\n    this.llenarTRX = this.llenarTRX.bind(this);\r\n\r\n    this.rentEnergy = this.rentEnergy.bind(this);\r\n\r\n    this.handleCurrencyChangeFrom = this.handleCurrencyChangeFrom.bind(this);\r\n    this.handleCurrencyChangeTo = this.handleCurrencyChangeTo.bind(this);\r\n\r\n    this.calcExchange = this.calcExchange.bind(this);\r\n    this.exchangeTokens = this.exchangeTokens.bind(this);\r\n    this.suawpTokenFromTRX = this.suawpTokenFromTRX.bind(this);\r\n\r\n    this.calculoEnergy = this.calculoEnergy.bind(this);\r\n\r\n    this.preExchange = this.preExchange.bind(this);\r\n\r\n    this.costEnergy = this.costEnergy.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    document.title = \"BRST | Brutus.Finance\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"brst.tittle\")\r\n    intervalId = setInterval(() => {\r\n\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (!this.props.contrato.ready) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado();\r\n      }\r\n\r\n    }, 3 * 1000);\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    clearInterval(intervalId)\r\n\r\n  }\r\n\r\n  handleCurrencyChangeFrom = (event) => {\r\n    let { to } = this.state\r\n    const selectedCurrency = event.target.value;\r\n    if (selectedCurrency === \"usdt\") to = \"brst\"\r\n    if (selectedCurrency === \"usdd\") to = \"brst\"\r\n\r\n    if (selectedCurrency === to) {\r\n      if (selectedCurrency === \"trx\") {\r\n        to = \"brst\"\r\n      } else {\r\n        to = \"trx\"\r\n      }\r\n    }\r\n    document.getElementById('currencySelectTo').value = to\r\n    this.setState({\r\n      from: selectedCurrency,\r\n      to,\r\n      par: selectedCurrency + \"_\" + to\r\n    }); // Guarda la moneda seleccionada en el estado\r\n    this.calcExchange(false, selectedCurrency + \"_\" + to)\r\n\r\n  };\r\n\r\n  handleCurrencyChangeTo = (event) => {\r\n    let { from } = this.state\r\n    const selectedCurrency = event.target.value;\r\n\r\n    if (selectedCurrency === \"trx\") from = \"brst\"\r\n    if (selectedCurrency === \"brst\") from = \"trx\"\r\n\r\n    document.getElementById('currencySelectFrom').value = from\r\n\r\n    this.setState({\r\n      from,\r\n      to: selectedCurrency,\r\n      par: from + \"_\" + selectedCurrency\r\n    }); // Guarda la cantidad ingresada en el estado\r\n    this.calcExchange(true, selectedCurrency + \"_\" + from)\r\n  };\r\n\r\n  handleChange(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, evento, this.state.cantidadDatos, document.getElementById(\"selector\").value);\r\n    this.setState({ temporalidad: evento });\r\n  }\r\n\r\n  handleChange2(e) {\r\n    let evento = parseInt(e.target.value);\r\n    this.grafico(500, this.state.temporalidad, evento, document.getElementById(\"selector\").value);\r\n    this.setState({ cantidadDatos: evento });\r\n  }\r\n\r\n  handleChangeDias(event) {\r\n    let dato = event.target.value;\r\n\r\n    let oper = ((this.state.brutCalc * this.state.precioBrst * ((this.state.promE7to1day) / 100))).toFixed(6)\r\n    oper = oper * parseInt(dato)\r\n    this.setState({\r\n      diasCalc: parseInt(dato),\r\n      resultCalc: oper\r\n    });\r\n  }\r\n\r\n  handleChangeCalc(event) {\r\n    let dato = event.target.value;\r\n    let oper = ((dato * this.state.precioBrst * ((this.state.promE7to1day) / 100))).toFixed(6)\r\n    oper = oper * parseInt(this.state.diasCalc)\r\n\r\n    this.setState({\r\n      brutCalc: dato,\r\n      resultCalc: oper\r\n    });\r\n  }\r\n\r\n  calcExchange(out = false, swap = \"trx_brst\") {\r\n    let { precioBrst, precioUSDT, precioUSDD } = this.state\r\n    let element = out ? \"amountTo\" : \"amountFrom\"\r\n\r\n    let salida = new BigNumber(0)\r\n\r\n    if (precioUSDT.toNumber() <= 0 || precioUSDD.toNumber() <= 0) return salida;\r\n\r\n    let entrada = (document.getElementById(element).value).replace(/,/g, \".\")\r\n    entrada = new BigNumber(parseFloat(entrada))\r\n\r\n    switch (swap) {\r\n      case \"usdt_brst\":\r\n        salida = entrada.div(precioUSDT)\r\n        salida = salida.div(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_usdt\":\r\n        salida = entrada.times(precioUSDT)\r\n        salida = salida.times(precioBrst)\r\n        break;\r\n\r\n      case \"usdd_brst\":\r\n        salida = entrada.div(precioUSDD)\r\n        salida = salida.div(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_usdd\":\r\n        salida = entrada.times(precioUSDD)\r\n        salida = salida.times(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_trx\":\r\n        salida = entrada.times(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"trx_brst\":\r\n        salida = entrada.div(precioBrst)\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n    element = !out ? \"amountTo\" : \"amountFrom\"\r\n\r\n    if (!isNaN(salida.toString(10))) {\r\n      document.getElementById(element).value = salida.toString(10)\r\n    }\r\n\r\n    //console.log(swap, entrada.toString(10), salida.toString(10))\r\n\r\n    return salida\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { tiempoPromediado, rapida } = this.state;\r\n    let { contrato, accountAddress } = this.props;\r\n\r\n\r\n    if (!contrato.ready) return;\r\n\r\n    let precio = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.RATE().call())\r\n\r\n    this.setState({\r\n      precioBrst: precio\r\n    });\r\n\r\n    let enBrutus = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.TRON_BALANCE().call());\r\n    let enPool = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.TRON_PAY_BALANCE().call());\r\n    let solicitado = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.TRON_SOLICITADO().call());\r\n    let tokensEmitidos = utils.normalizarNumero(await contrato.BRST.totalSupply().call());\r\n\r\n    this.setState({\r\n      enBrutus,\r\n      enPool,\r\n      solicitado,\r\n      tokensEmitidos,\r\n    });\r\n\r\n    this.consultaPrecio();\r\n\r\n    if (iniciado === 0) {\r\n      this.grafico(1000, \"day\", 90, \"trx\");\r\n      iniciado++;\r\n    }\r\n\r\n\r\n    let misBRST = utils.normalizarNumero(await contrato.BRST.balanceOf(accountAddress).call());\r\n    this.setState({ misBRST })\r\n\r\n    if (parseInt(this.state.resultCalc) === 1000) {\r\n      this.handleChangeCalc({ target: { value: misBRST } })\r\n    }\r\n\r\n    if (parseInt(document.getElementById(\"hold\").value) === 0) {\r\n      document.getElementById(\"hold\").value = misBRST\r\n\r\n    }\r\n\r\n    //let balance = await this.props.tronWeb.trx.getBalance() / 10 ** 6;\r\n    let balance = await this.props.tronWeb.trx.getUnconfirmedBalance(accountAddress)\r\n      .catch(async (e) => {\r\n        console.log(e.toString())\r\n        return await this.props.tronWeb.trx.getBalance(accountAddress)\r\n      })\r\n\r\n    balance = balance / 10 ** 6;\r\n    this.setState({\r\n      balanceTRX: balance,\r\n    })\r\n\r\n    let cuenta = await this.props.tronWeb.trx.getAccountResources(accountAddress)\r\n      .catch((e) => {\r\n        console.log(e.toString())\r\n        return {};\r\n      })\r\n\r\n    let penalty = (parseInt(await this.props.contrato.BRST_TRX_Proxy_fast.descuentoRapido().call()) / parseInt(await this.props.contrato.BRST_TRX_Proxy_fast.precision().call())) * 100\r\n    this.setState({ penalty })\r\n    let loteria = utils.normalizarNumero((await this.props.contrato.loteria._premio().call())[0])\r\n    let retiroRapido = parseInt(await this.props.contrato.BRST_TRX_Proxy_fast.balance_token_1().call())\r\n    retiroRapido = new BigNumber(retiroRapido).shiftedBy(-6).minus(loteria)\r\n    if (retiroRapido < 0) retiroRapido = new BigNumber(0)\r\n    this.setState({ retiroRapido })\r\n\r\n    let userEnergy = 0\r\n\r\n    if (cuenta.EnergyLimit) {\r\n      userEnergy = cuenta.EnergyLimit\r\n    }\r\n\r\n    if (cuenta.EnergyUsed) {\r\n      userEnergy -= cuenta.EnergyUsed\r\n    }\r\n    this.setState({ userEnergy })\r\n\r\n    let eenergy = 65000;\r\n\r\n    if (balance >= 1) {\r\n      eenergy = (await this.calculoEnergy(rapida)).dp(0).toNumber()\r\n    }\r\n\r\n    let useTrx = (await this.costEnergy(eenergy)).toString(10)\r\n    this.setState({ useTrx })\r\n\r\n    let consulta = await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=day&limite=\" + tiempoPromediado)\r\n      .then(async (r) => (await r.json()).Data)\r\n      .catch((e) => { return false })\r\n\r\n    if (consulta.length > 0) {\r\n\r\n      let promE7to1day = consulta.reduce((acc, item) => acc + item.value, 0);\r\n      promE7to1day = new BigNumber(promE7to1day / consulta.length).toNumber();\r\n\r\n      let crecimientoPorcentual = this.state.varBrst;\r\n\r\n      if (consulta.length >= 2) {\r\n        const valorInicial = consulta[consulta.length - 1].value; // Primer valor del rango\r\n        const valorFinal = consulta[0].value; // Ultimo valor del rango\r\n\r\n        crecimientoPorcentual = ((valorFinal - valorInicial) / valorInicial) * 100;\r\n        crecimientoPorcentual = crecimientoPorcentual / consulta.length;\r\n      }\r\n\r\n      let interesCompuesto = (1 + crecimientoPorcentual / 100) ** tiempoPromediado;\r\n\r\n      this.setState({\r\n        promE7to1day,\r\n        crecimientoPorcentual,\r\n        interesCompuesto,\r\n      })\r\n    }\r\n\r\n    let consultaData = await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=day&limite=361\")\r\n      .then(async (r) => (await r.json()).Data)\r\n      .catch((e) => { return [] })\r\n\r\n    if (consultaData.length > 0) {\r\n\r\n      earnings = [];\r\n\r\n      let dias = [1, 15, 30, 90, 180, 360]\r\n\r\n      for (let index = 0; index < dias.length; index++) {\r\n        earnings.push({\r\n          dias: dias[index],\r\n          trx: (misBRST * consultaData[0].value) - (misBRST * consultaData[dias[index]].value),\r\n          diario: ((misBRST * consultaData[0].value) - (misBRST * consultaData[dias[index]].value)) / dias[index]\r\n        })\r\n\r\n      }\r\n\r\n      this.setState({\r\n        dataBRST: consultaData\r\n      })\r\n    }\r\n\r\n\r\n\r\n    let MIN_DEPOSIT = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.MIN_DEPOSIT().call())\r\n    let aprovadoBRUT = utils.normalizarNumero(await contrato.BRST.allowance(accountAddress, contrato.BRST_TRX_Proxy.address).call());\r\n    let balanceBRST = utils.normalizarNumero(await contrato.BRST.balanceOf(accountAddress).call());\r\n\r\n    this.setState({\r\n      minCompra: MIN_DEPOSIT,\r\n      depositoBRUT: aprovadoBRUT,\r\n      balanceBRST: balanceBRST,\r\n    })\r\n\r\n    consulta = await fetch(\"https://apilist.tronscanapi.com/api/token/price?token=usdt\")\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({ precioUSDT: new BigNumber(1 / r.price_in_trx) })\r\n      })\r\n      .catch((e) => { console.log(e) })\r\n\r\n    consulta = await fetch(\"https://apilist.tronscanapi.com/api/token/price?token=usdd\")\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({ precioUSDD: new BigNumber(1 / r.price_in_trx) })\r\n      })\r\n      .catch((e) => { console.log(e) })\r\n\r\n\r\n    let deposito = await contrato.BRST_TRX_Proxy.todasSolicitudes(accountAddress).call();\r\n    let myids = []\r\n\r\n    for (let index = 0; index < deposito.length; index++) {\r\n      myids.push(parseInt(deposito[index]));\r\n\r\n    }\r\n\r\n    let deposits = await contrato.BRST_TRX_Proxy.solicitudesPendientesGlobales().call();\r\n    deposits = deposits[0];\r\n\r\n    let globDepositos = [];\r\n\r\n    let tiempo = parseInt(await contrato.BRST_TRX_Proxy.TIEMPO().call()) * 1000;\r\n\r\n    let diasDeEspera = (tiempo / (86400 * 1000)).toPrecision(2)\r\n\r\n    let adminsBrst = [\"TWVVi4x2QNhRJyhqa7qrwM4aSXnXoUDDwY\", \"TWqsREyZUtPkBNrzSSCZ9tbzP3U5YUxppf\", \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"]\r\n\r\n    let balance_Pool = new BigNumber(await this.props.tronWeb.trx.getBalance(contrato.BRST_TRX_Proxy.address)).shiftedBy(-6)\r\n\r\n    let total_required = new BigNumber(0)\r\n\r\n    this.setState({\r\n      balanceTRX: balance,\r\n      espera: tiempo,\r\n      solicitudes: globDepositos.length,\r\n      dias: diasDeEspera,\r\n      eenergy: eenergy,\r\n    })\r\n\r\n    //console.log(this.props.tronWeb.address.fromHex((await this.props.contrato.BRST_TRX_Proxy.owner().call())))\r\n\r\n    let isOwner = this.props.accountAddress === this.props.tronWeb.address.fromHex((await this.props.contrato.BRST_TRX_Proxy.owner().call()))\r\n    let isAdmin = false;\r\n\r\n    if (adminsBrst.indexOf(this.props.accountAddress) >= 0) {\r\n      isAdmin = true;\r\n    }\r\n\r\n    this.setState({ isOwner, isAdmin })\r\n\r\n    for (let index = 0; index < deposits.length; index++) {\r\n\r\n      let pen = await this.props.contrato.BRST_TRX_Proxy.verSolicitudPendiente(deposits[index]).call();\r\n      pen = pen[0];\r\n      let inicio = parseInt(pen.tiempo) * 1000\r\n\r\n      let pv = new Date(inicio + tiempo)\r\n\r\n      let diasrestantes = ((inicio + tiempo - Date.now()) / (86400 * 1000)).toPrecision(2)\r\n\r\n      let boton = <b>login with an authorized account</b>\r\n\r\n      let cantidadTrx = new BigNumber(parseInt(pen.brst)).times(parseInt(pen.precio)).shiftedBy(-6)\r\n      total_required = total_required.plus(cantidadTrx.dp(0))\r\n\r\n      if (myids.includes(parseInt(deposits[index])) && diasrestantes > 0) {\r\n        boton = (\r\n          <button className=\"btn btn-info ms-4 disabled\" disabled aria-disabled=\"true\" >\r\n            {\"Processing Unfreeze TRX \"} <i className=\"bi bi-exclamation-circle\"></i>\r\n          </button>\r\n        )\r\n      }\r\n\r\n      if ((myids.includes(parseInt(deposits[index])) && diasrestantes <= 0) || isOwner) {\r\n\r\n\r\n        if (balance_Pool.toNumber() < cantidadTrx.shiftedBy(-6).dp(6).toNumber()) {\r\n\r\n          boton = (\r\n            <button className=\"btn btn-info ms-4 disabled\" disabled aria-disabled=\"true\" >\r\n              {this.props.i18n.t(\"We continue to unfreeze TRX\") + \" \"} <i className=\"bi bi-exclamation-circle\"></i>\r\n            </button>\r\n          )\r\n\r\n        } else {\r\n\r\n          boton = (\r\n            <button className=\"btn btn-primary ms-4\" onClick={async () => {\r\n              await this.preClaim(parseInt(deposits[index]));\r\n              this.estado()\r\n            }}>\r\n              {this.props.i18n.t(\"claim\") + \" \"} <i className=\"bi bi-award\"></i>\r\n            </button>\r\n          )\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      if (diasrestantes <= 0) {\r\n        diasrestantes = 0\r\n      }\r\n\r\n      if (myids.includes(parseInt(deposits[index])) || isOwner || isAdmin) {\r\n        let extraData = <></>\r\n\r\n        if (isOwner || isAdmin) {\r\n          extraData = <><b>Wallet: </b><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/address/\" + this.props.tronWeb.address.fromHex(pen.wallet)}>{this.props.tronWeb.address.fromHex(pen.wallet)}</a><br></br></>\r\n        }\r\n\r\n        globDepositos[index] = (\r\n\r\n          <div className=\"row mt-4\" id={\"sale-\" + parseInt(deposits[index])} key={\"glob\" + parseInt(deposits[index])}>\r\n            <div className=\"col-12 mb-2\">\r\n\r\n              <h4 className=\"fs-20 text-black\">{this.props.i18n.t(\"brst.sale\", { number: parseInt(deposits[index]) })} {\" -> \"}{parseInt(pen.brst) / 10 ** 6} BRST</h4>\r\n\r\n            </div>\r\n            <div className=\"col-sm-6 mb-2\">\r\n              <p className=\"mb-0 fs-14\">\r\n                {extraData}\r\n                <b>Total: </b>{cantidadTrx.shiftedBy(-6).dp(6).toString(10)} TRX<br></br>\r\n                <b>{this.props.i18n.t(\"brst.price\")}</b> {(parseInt(pen.precio) / 10 ** 6)} TRX<br></br>\r\n                <b>{this.props.i18n.t(\"brst.available\")}</b> {pv.toString()}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-sm-6 mb-2\">\r\n              <p className=\"mb-0 fs-14\">{this.props.i18n.t(\"brst.unStaking\", { days: diasrestantes })}{cantidadTrx.shiftedBy(-6).dp(6).toString(10)} TRX</p>\r\n              <br></br>\r\n              {boton}\r\n            </div>\r\n            <div className=\"col-12 mb-2\">\r\n\r\n              <hr></hr>\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    total_required = total_required.shiftedBy(-6).toString(10)\r\n\r\n    let ownerPanel = (<><input type=\"text\" id=\"wallet\" placeholder=\"wallet to white list\"></input> <button className=\"btn btn-warning\" onClick={async () => {\r\n      let inputs = [\r\n        { type: 'address', value: this.props.tronWeb.address.toHex(document.getElementById('wallet')) },\r\n        //{ type: 'uint256', value: 405 * 10 ** 6 }\r\n      ]\r\n\r\n      let funcion = \"whiteList_add(address)\"\r\n      try {\r\n\r\n        let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.BRST_TRX_Proxy_fast.address), funcion, {}, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n        let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n\r\n        transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n        console.log(transaction)\r\n        alert(\"Transaction \" + transaction.result + \" hash: \" + transaction.txid)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n        alert(error.toString())\r\n      }\r\n\r\n    }}>ADD</button><br></br>\r\n      TRON_RR: {utils.normalizarNumero(await this.props.contrato.BRST_TRX_Proxy.TRON_RR().call())}\r\n      <br></br>\r\n      <button className=\"btn btn-warning\" onClick={() => this.retiro()}>SET RR</button>\r\n      <br></br>\r\n\r\n\r\n    </>)\r\n\r\n    if (isAdmin || isOwner) {\r\n      globDepositos.push(<div key=\"admin-panel\">\r\n        {isOwner ? ownerPanel : <></>}\r\n        Balance Pool: {balance_Pool.toString(10)}\r\n\r\n      </div>)\r\n    }\r\n\r\n    this.setState({\r\n      globDepositos,\r\n      total_required\r\n\r\n    })\r\n\r\n    let energyOn = false;\r\n    let energi = 0;\r\n\r\n    try {\r\n\r\n      let consulta = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL)\r\n        .then((r) => r.json())\r\n\r\n      if (consulta.available) {\r\n        energyOn = energyOn.available\r\n      } else {\r\n        energyOn = false\r\n      }\r\n\r\n      consulta = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"available\")\r\n        .then((r) => r.json())\r\n\r\n      if (consulta.av_energy.length > 0) {\r\n        energi = consulta.av_energy[0].available\r\n      }\r\n\r\n      if (energi < consulta.total_energy_pool * 0.01) {\r\n        energyOn = false;\r\n      } else {\r\n        energyOn = true;\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n      energyOn = false;\r\n    }\r\n\r\n    this.setState({\r\n      energyOn,\r\n    })\r\n\r\n  }\r\n\r\n  async preClaim(id) {\r\n\r\n    let { isOwner, userEnergy, energyOn } = this.state\r\n    let eenergy = 0;\r\n\r\n    let inputs = [\r\n      { type: 'uint256', value: id }\r\n    ]\r\n    let funcion = \"retirar(uint256)\"\r\n    const options = {}\r\n    var transaccion = await this.props.tronWeb.transactionBuilder.triggerConstantContract(this.props.tronWeb.address.toHex(this.props.contrato.BRST_TRX_Proxy.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n      .catch(() => { return {} })\r\n\r\n    if (transaccion.energy_used) {\r\n      eenergy += transaccion.energy_used;\r\n    } else {\r\n      eenergy += 80000;\r\n    }\r\n\r\n    if (eenergy > userEnergy && energyOn) {\r\n\r\n      let requerido = eenergy - userEnergy\r\n\r\n      if (requerido < 32000) {\r\n        requerido = 32000;\r\n      } else {\r\n        requerido += 1000;\r\n      }\r\n\r\n      let body = { \"resource\": \"energy\", \"amount\": requerido, \"duration\": \"5min\" }\r\n      let consultaPrecio = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      }).then((r) => r.json())\r\n\r\n      let precio = new BigNumber(consultaPrecio.price).dp(6)\r\n\r\n      let textoModal = this.props.i18n.t(\"brst.alert.energy\", { returnObjects: true })\r\n\r\n      this.setState({\r\n        ModalTitulo: textoModal[0],\r\n        ModalBody: <>{textoModal[1]} <b>{eenergy} {textoModal[2]}</b>{textoModal[3]}<b>{userEnergy} {textoModal[2]}</b> {textoModal[4]} <b>{requerido} {textoModal[2]}</b>{textoModal[5]}<b>{precio.toString(10)} TRX</b>{textoModal[6]}\r\n          <br ></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={async () => {\r\n            if (await this.rentEnergy(requerido)) {\r\n\r\n              if (isOwner) {\r\n                await this.retiro(id)\r\n              }\r\n\r\n              let inputs = [\r\n                //{type: 'address', value: this.props.tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n                { type: 'uint256', value: id }\r\n              ]\r\n\r\n              let funcion = \"retirar(uint256)\"\r\n              const options = {}\r\n              let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.BRST_TRX_Proxy.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n              let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n              transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n                .catch((e) => {\r\n\r\n                  this.setState({\r\n                    ModalTitulo: \"Error\",\r\n                    ModalBody: e.toString()\r\n                  })\r\n\r\n                  window.$(\"#mensaje-brst\").modal(\"show\");\r\n                })\r\n              transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n                .then(() => {\r\n                  this.setState({\r\n                    ModalTitulo: \"Result\",\r\n                    ModalBody: <>Retiro is Done {transaction.txid}\r\n                      <br ></br><br ></br>\r\n                      <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n                    </>\r\n                  })\r\n\r\n                  window.$(\"#mensaje-brst\").modal(\"show\");\r\n                })\r\n\r\n\r\n\r\n            }\r\n          }}>{textoModal[7]}</button>\r\n\r\n        </>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n    } else {\r\n\r\n      let inputs = [\r\n        //{type: 'address', value: this.props.tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n        { type: 'uint256', value: id }\r\n      ]\r\n\r\n      let funcion = \"retirar(uint256)\"\r\n      const options = {}\r\n      let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.BRST_TRX_Proxy.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n      let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: \"Result\",\r\n            ModalBody: <>Retiro is Done {transaction.txid}\r\n              <br ></br><br ></br>\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n            </>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  subeobaja(valor) {\r\n    var imgNPositivo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_d2)\">\r\n        <path d=\"M5 16C5.91797 14.9157 8.89728 11.7277 10.5 10L16.5 13L23.5 4\"\r\n          stroke=\"#2BC155\" strokeWidth=\"2\" strokeLinecap=\"round\" ></path>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"filter0_d2\" x=\"-3.05176e-05\" y=\"-6.10352e-05\" width=\"28.5001\"\r\n          height=\"22.0001\" filterUnits=\"userSpaceOnUse\"\r\n          colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n          <feOffset dy=\"1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" />\r\n          <feColorMatrix type=\"matrix\"\r\n            values=\"0 0 0 0 0.172549 0 0 0 0 0.72549 0 0 0 0 0.337255 0 0 0 0.61 0\" />\r\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\"\r\n            result=\"effect1_dropShadow\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\"\r\n            result=\"shape\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>);\r\n    var imgNegativo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_d)\">\r\n        <path d=\"M5 4C5.91797 5.08433 8.89728 8.27228 10.5 10L16.5 7L23.5 16\" stroke=\"#FF2E2E\" strokeWidth=\"2\" strokeLinecap=\"round\" ></path>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"28.5001\" height=\"22.0001\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n          <feOffset dy=\"1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" />\r\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.180392 0 0 0 0 0.180392 0 0 0 0.61 0\" />\r\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>);\r\n\r\n    var resultado = imgNPositivo;\r\n\r\n    if (valor < 0) {\r\n      resultado = imgNegativo\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n\r\n  textoE(valor) {\r\n\r\n    var resultado = \"success\";\r\n\r\n    if (valor < 0) {\r\n      resultado = \"danger\"\r\n    }\r\n\r\n    return resultado;\r\n\r\n  }\r\n\r\n  async consultaPrecio() {\r\n\r\n    return await fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brst')\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then(r => {\r\n\r\n        this.setState({\r\n          varBrst: r.v24h\r\n        })\r\n\r\n        return r\r\n\r\n      })\r\n      .catch(err => { console.log(err); return 0; });\r\n\r\n  }\r\n\r\n  llenarBRST() {\r\n    document.getElementById('amountTo').value = this.state.balanceBRST;\r\n    //this.handleChangeBRST({ target: { value: this.state.balanceBRST } })\r\n\r\n  }\r\n\r\n  llenarTRX() {\r\n    document.getElementById('amountFrom').value = this.state.balanceTRX;\r\n    //this.handleChangeTRX({ target: { value: this.state.balanceTRX } })\r\n\r\n  }\r\n\r\n  async calculoEnergy(rapida = false) {\r\n    let from = document.getElementById('currencySelectFrom').value\r\n    let to = document.getElementById('currencySelectTo').value\r\n\r\n    let {userEnergy} = this.state\r\n    const { tronWeb, accountAddress, contrato } = this.props\r\n\r\n    function tokenSelector(name) {\r\n\r\n      let address = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\r\n\r\n      switch (name) {\r\n        case \"usdt\":\r\n          address = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\r\n          break;\r\n\r\n        case \"usdd\":\r\n          address = \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\"\r\n          break;\r\n\r\n        default:\r\n          address = false\r\n          break;\r\n      }\r\n\r\n      return address\r\n\r\n    }\r\n\r\n    let energyRequired = new BigNumber(0)\r\n\r\n    let token = tokenSelector(from)\r\n\r\n    if (token) {\r\n\r\n      let sunswapRouter = \"TCFNp179Lg46D16zKoumd4Poa2WFFdtqYj\" // V3\r\n\r\n      const options2 = {\r\n        method: 'POST',\r\n        headers: { accept: 'application/json', 'content-type': 'application/json' },\r\n        body: JSON.stringify({ value: sunswapRouter, visible: true })\r\n      };\r\n\r\n      let energyFactor = await fetch('https://api.trongrid.io/wallet/getcontract', options2)\r\n        .then(res => res.json())\r\n        .catch(err => { console.error(err); return {} });\r\n\r\n      if (energyFactor.consume_user_resource_percent) {\r\n        energyFactor = energyFactor.consume_user_resource_percent / 100\r\n      } else {\r\n        energyFactor = 1\r\n      }\r\n\r\n      let contract_base_token = tronWeb.contract(utils.TOKEN_ABI, token)\r\n      let decimals_base = parseInt(await contract_base_token.decimals().call())\r\n\r\n      let aprove = await contract_base_token.allowance(accountAddress, sunswapRouter).call()\r\n      if (aprove.remaining) aprove = aprove.remaining\r\n      aprove = parseInt(aprove)\r\n\r\n\r\n      if (aprove <= 1 * 1e6) {\r\n\r\n        let inputs = [\r\n          { type: 'address', value: tronWeb.address.toHex(sunswapRouter) },\r\n          { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" },\r\n        ]\r\n\r\n        let funcion = \"approve(address,uint256)\"\r\n        const options = {}\r\n        let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(token), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n          .catch(() => { return {} })\r\n\r\n        if (trigger.energy_used) {\r\n          //console.log(\"aprovacion \", trigger.energy_used)\r\n          energyRequired = energyRequired.plus(trigger.energy_used)\r\n        }\r\n      }\r\n\r\n\r\n      let monto = new BigNumber(1).shiftedBy(decimals_base).dp(0).toString(10)\r\n\r\n      let consulta = await fetch(\"https://rot.endjgfsv.link/swap/router?fromToken=\" + token + \"&toToken=T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb&amountIn=\" + monto + \"&typeList=SUNSWAP_V3,SUNSWAP_V2,WTRX\")\r\n        .then((r) => r.json())\r\n        .then((r) => r.data[0])\r\n\r\n      function distributeTokens(totalTokens, versions) {\r\n        let result = new Array(versions.length).fill(0); // Inicializamos el array con ceros\r\n        let remainingTokens = totalTokens;\r\n\r\n        // Asignamos 1 token a cada elemento si hay suficientes tokens disponibles\r\n        for (let i = 0; i < versions.length && remainingTokens > 0; i++) {\r\n          result[i] = 1;\r\n          remainingTokens--;\r\n        }\r\n\r\n        // Distribuimos los tokens restantes de forma balanceada\r\n        let index = 0;\r\n        while (remainingTokens > 0) {\r\n          result[index]++;\r\n          remainingTokens--;\r\n          index = (index + 1) % versions.length; // Ciclar en el array\r\n        }\r\n\r\n        return result;\r\n      }\r\n\r\n      let inputs = [\r\n        { type: 'address[]', value: consulta.tokens },\r\n        { type: 'string[]', value: consulta.poolVersions },\r\n        { type: 'uint256[]', value: distributeTokens(consulta.tokens.length, consulta.poolVersions) },\r\n        { type: 'uint24[]', value: consulta.poolFees },\r\n        {\r\n          type: '(uint256,uint256,address,uint256)',\r\n          value: [\r\n            new BigNumber(consulta.amountIn).shiftedBy(decimals_base).dp(0).toString(10),\r\n            new BigNumber(consulta.amountOut).times(0.995).shiftedBy(6).dp(0).toString(10),\r\n            (tronWeb.address.toHex(accountAddress)).replace(/41/g, \"0x\"),\r\n            ((parseInt(Date.now() / 1000)) + 100).toString(10)\r\n          ]\r\n        }\r\n\r\n      ]\r\n\r\n      let funcion = \"swapExactInput(address[],string[],uint256[],uint24[],(uint256,uint256,address,uint256))\"\r\n      const options = { feeLimit: 10000 * 1e6, callValue: 0 }\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(sunswapRouter), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n        //console.log(\"swap \", trigger.energy_used * energyFactor)\r\n        energyRequired = energyRequired.plus(trigger.energy_used * energyFactor)\r\n      }\r\n\r\n    }\r\n\r\n\r\n    if (to === \"brst\") {\r\n\r\n      let inputs = []\r\n\r\n      let funcion = \"staking()\"\r\n      const options = { callValue: 1 * 1e6 }\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n        //console.log(\"staking \", trigger.energy_used)\r\n        energyRequired = energyRequired.plus(trigger.energy_used);\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      let inputs = [\r\n        { type: 'uint256', value: \"1000000\" }\r\n      ]\r\n\r\n      let funcion = \"instaRetiro(uint256)\"\r\n      if (rapida) {\r\n        funcion = \"sell_token_2(uint256)\"\r\n      }\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n\r\n        //console.log(\"retiro \", trigger.energy_used)\r\n        energyRequired = energyRequired.plus(trigger.energy_used);\r\n      }\r\n\r\n    }\r\n\r\n    energyRequired = energyRequired.plus(1000)\r\n    console.log(\"necesary \",energyRequired.toString(10))\r\n\r\n    energyRequired = energyRequired.minus(userEnergy)\r\n    console.log(\"requerido \",energyRequired.toString(10))\r\n\r\n    if (energyRequired.toNumber() <= 0) energyRequired = new BigNumber(0);\r\n    if (energyRequired.toNumber() < 32000) energyRequired = new BigNumber(32000);\r\n\r\n\r\n    return energyRequired\r\n\r\n  }\r\n\r\n  async costEnergy(cantidad) {\r\n\r\n    cantidad = new BigNumber(cantidad).dp(0)\r\n\r\n    if (cantidad.toNumber() == 0) return new BigNumber(0);\r\n\r\n    let consulta = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ \"resource\": \"energy\", \"amount\": cantidad.toString(10), \"duration\": \"5min\" })\r\n    }).then((r) => r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false;\r\n      })\r\n\r\n    if (!consulta) return false;\r\n\r\n    let useTrx = new BigNumber(consulta.price).dp(6)\r\n\r\n    this.setState({ useTrx: useTrx.toString(10) })\r\n\r\n    return useTrx\r\n\r\n  }\r\n\r\n  async rentEnergy(cantidad) {\r\n\r\n    let { userEnergy, energyOn } = this.state\r\n\r\n    if (!energyOn) return false;\r\n\r\n    cantidad = cantidad - userEnergy\r\n    if (cantidad <= 0) return true;\r\n    if (cantidad < 32000) cantidad = 32000\r\n\r\n    let retorno = false;\r\n\r\n    let precio = await this.costEnergy(cantidad)\r\n\r\n    if (!precio) return false;\r\n\r\n    const unSignedTransaction = await this.props.tronWeb.transactionBuilder.sendTrx(process.env.REACT_APP_WALLET_API, this.props.tronWeb.toSun(precio), this.props.accountAddress);\r\n    // using adapter to sign the transaction\r\n    const signedTransaction = await window.tronWeb.trx.sign(unSignedTransaction)\r\n      .catch((e) => {\r\n        this.setState({\r\n          ModalTitulo: \"Transaction failed\",\r\n          ModalBody: <>{e.toString()}\r\n            <br></br><br></br>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>Close</button>\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false;\r\n      })\r\n    // broadcast the transaction\r\n\r\n    if (!signedTransaction) { return false; }\r\n\r\n    let consulta2 = await utils.rentResource(this.props.accountAddress, \"energy\", cantidad, \"5\", \"min\", precio, signedTransaction);\r\n\r\n    if (consulta2.result) {\r\n\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"brst.alert.done\", { returnObjects: true })[0],\r\n        ModalBody: <>{this.props.i18n.t(\"brst.alert.done\", { returnObjects: true })[1]}<br></br><button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-success\">{this.props.i18n.t(\"brst.alert.done\", { returnObjects: true })[2]}</button></>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      retorno = true\r\n\r\n    } else {\r\n\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"brst.alert.error\", { returnObjects: true })[0],\r\n        ModalBody: this.props.i18n.t(\"brst.alert.error\", { returnObjects: true, hash: consulta2.hash, msg: consulta2.msg })[1]\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    }\r\n\r\n    return retorno\r\n\r\n  }\r\n\r\n  async preExchange(rapida = false) {\r\n\r\n    let { userEnergy } = this.state\r\n\r\n    let eenergy = (await this.calculoEnergy(rapida)).dp(0)\r\n    let precio = await this.costEnergy(eenergy)\r\n\r\n    if (eenergy > userEnergy) {\r\n\r\n      this.setState({\r\n        ModalTitulo: \"Energy Notice\",\r\n        ModalBody: <>\r\n          This operation requires <b>{eenergy.plus(userEnergy).dp(0).toNumber().toLocaleString('en-US')} energy</b><br></br><br></br>\r\n          \r\n          you have <b>{userEnergy.toLocaleString('en-US')} energy</b><br></br>\r\n          Rent <b>{eenergy.toNumber().toLocaleString('en-US')} energy</b> for <b>{precio.toString(10)} TRX</b>\r\n          <br ></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={async () => {\r\n            if (await this.rentEnergy(eenergy)) {\r\n              this.exchangeTokens(rapida)\r\n            }\r\n          }}>Rent Energy </button>\r\n        </>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    } else {\r\n      this.exchangeTokens(rapida)\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async exchangeTokens(rapida = false) {\r\n    let from = document.getElementById('currencySelectFrom').value\r\n    let to = document.getElementById('currencySelectTo').value\r\n\r\n    switch (from + \"_\" + to) {\r\n\r\n      case \"usdt_brst\":\r\n        this.suawpTokenFromTRX(0)\r\n        break;\r\n\r\n      case \"usdd_brst\":\r\n        this.suawpTokenFromTRX(1)\r\n\r\n        break;\r\n\r\n      case \"brst_trx\":\r\n        this.sell(rapida)\r\n        break;\r\n\r\n      default:\r\n        // TRX -> BRST\r\n        this.compra()\r\n        break;\r\n    }\r\n  }\r\n\r\n  async suawpTokenFromTRX(select = 0) {\r\n\r\n    const { tronWeb, accountAddress } = this.props\r\n    let { precioUSDT, precioUSDD } = this.state\r\n\r\n    // TOKEN => TRX\r\n    let token = select === 0 ? \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\" : \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\" //USDT : USDD\r\n\r\n    let currentPrice = select === 0 ? precioUSDT : precioUSDD\r\n\r\n    let sunswapRouter = \"TCFNp179Lg46D16zKoumd4Poa2WFFdtqYj\" // V3\r\n\r\n    let contrato = tronWeb.contract(utils.SUNSWAPV3_ABI, sunswapRouter)\r\n    //console.log(contrato)\r\n\r\n    let contract_base_token = tronWeb.contract(utils.TOKEN_ABI, token)\r\n    let decimals_base = parseInt(await contract_base_token.decimals().call())\r\n\r\n    let balance_usdt = new BigNumber(parseInt(await contract_base_token.balanceOf(accountAddress).call())).shiftedBy(-decimals_base)\r\n\r\n    let monto = document.getElementById(\"amountFrom\").value;\r\n    monto = monto.replace(/,/g, \".\")\r\n    monto = new BigNumber(monto)\r\n\r\n    if (balance_usdt.dp(2).toNumber() < 1 || monto.toNumber() > balance_usdt.toNumber()) {\r\n      this.setState({\r\n        ModalTitulo: \"ALERT\",\r\n        ModalBody: (<>\r\n          Sorry, you don't have enough {await contract_base_token.name().call()} to complete this operation.\r\n        </>)\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      return \"false\";\r\n\r\n    }\r\n\r\n    let aprove = await contract_base_token.allowance(accountAddress, sunswapRouter).call()\r\n    if (aprove.remaining) aprove = aprove.remaining\r\n    aprove = parseInt(aprove)\r\n    //console.log(aprove)\r\n    if (aprove <= balance_usdt.toNumber()) {\r\n\r\n      this.setState({\r\n        ModalTitulo: <>Token Alert {imgLoading}</>,\r\n        ModalBody: (<>Approve unlimited future exchanges</>)\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      let inputs = [\r\n        { type: 'address', value: tronWeb.address.toHex(sunswapRouter) },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" },\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contract_base_token.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n            ModalBody: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n          return false\r\n        })\r\n      if (!transaction) return;\r\n      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: <>Token Alert {imgLoading}</>,\r\n            ModalBody: <>Approval done, continue the process</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n          return true;\r\n        }).catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: <>Error{imgLoading}</>,\r\n            ModalBody: <>{e.toString()}</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n\r\n\r\n    }\r\n\r\n    let consulta = await fetch(\"https://rot.endjgfsv.link/swap/router?fromToken=\" + token + \"&toToken=T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb&amountIn=\" + monto.shiftedBy(decimals_base).dp(0).toString(10) + \"&typeList=SUNSWAP_V3,SUNSWAP_V2,WTRX\")\r\n      .then((r) => r.json())\r\n      .then((r) => r.data[0])\r\n\r\n    function distributeTokens(totalTokens, versions) {\r\n      let result = new Array(versions.length).fill(0); // Inicializamos el array con ceros\r\n      let remainingTokens = totalTokens;\r\n\r\n      // Asignamos 1 token a cada elemento si hay suficientes tokens disponibles\r\n      for (let i = 0; i < versions.length && remainingTokens > 0; i++) {\r\n        result[i] = 1;\r\n        remainingTokens--;\r\n      }\r\n\r\n      // Distribuimos los tokens restantes de forma balanceada\r\n      let index = 0;\r\n      while (remainingTokens > 0) {\r\n        result[index]++;\r\n        remainingTokens--;\r\n        index = (index + 1) % versions.length; // Ciclar en el array\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    let inputs = [\r\n      { type: 'address[]', value: consulta.tokens },\r\n      { type: 'string[]', value: consulta.poolVersions },\r\n      { type: 'uint256[]', value: distributeTokens(consulta.tokens.length, consulta.poolVersions) },\r\n      { type: 'uint24[]', value: consulta.poolFees },\r\n      {\r\n        type: '(uint256,uint256,address,uint256)',\r\n        value: [\r\n          new BigNumber(consulta.amountIn).shiftedBy(decimals_base).dp(0).toString(10),\r\n          new BigNumber(consulta.amountOut).times(0.995).shiftedBy(6).dp(0).toString(10),\r\n          (tronWeb.address.toHex(accountAddress)).replace(/41/g, \"0x\"),\r\n          ((parseInt(Date.now() / 1000)) + 100).toString(10)\r\n        ]\r\n      }\r\n\r\n    ]\r\n\r\n    let funcion = \"swapExactInput(address[],string[],uint256[],uint24[],(uint256,uint256,address,uint256))\"\r\n    const options = { feeLimit: 10000 * 1e6, callValue: 0 }\r\n    let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n    let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          ModalTitulo: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n          ModalBody: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false\r\n      })\r\n    if (!transaction) return;\r\n    transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n      .then(() => {\r\n        this.setState({\r\n          ModalTitulo: <>Swap Alert {imgLoading}</>,\r\n          ModalBody: <>Swap done, continue the process</>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n      })\r\n\r\n    await utils.delay(3)\r\n\r\n    this.compra(monto.div(currentPrice))\r\n  }\r\n\r\n  async compra(amount = new BigNumber(0)) {\r\n\r\n    if (amount.toNumber() <= 0) {\r\n      amount = parseFloat(document.getElementById(\"amountFrom\").value);\r\n      amount = new BigNumber(amount)\r\n\r\n    }\r\n\r\n    amount = amount.shiftedBy(6).dp(0).toNumber()\r\n\r\n    if (amount <= 0) {\r\n\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"brst.alert.errorInput\", { returnObjects: true })[0],\r\n        ModalBody: <>{this.props.i18n.t(\"brst.alert.errorInput\", { returnObjects: true })[1]}\r\n          <br></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"close\")}</button>\r\n        </>\r\n\r\n      })\r\n\r\n      return;\r\n    }\r\n\r\n    const { minCompra } = this.state;\r\n\r\n    let balance = await this.props.tronWeb.trx.getUnconfirmedBalance();\r\n\r\n    if (balance >= amount) {\r\n      if (amount >= minCompra) {\r\n\r\n        let inputs = [\r\n          //{type: 'address', value: this.props.tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n          //{type: 'uint256', value: '1000000'}\r\n        ]\r\n\r\n        let funcion = \"staking()\"\r\n        const options = { callValue: amount }\r\n        let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.BRST_TRX_Proxy.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n        let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({\r\n              ModalTitulo: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n              ModalBody: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n            return false\r\n          })\r\n        if (!transaction) return;\r\n        transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n          .then(() => {\r\n            this.setState({\r\n              ModalTitulo: this.props.i18n.t(\"brst.alert.compra\", { returnObjects: true })[0],\r\n              ModalBody: <>{this.props.i18n.t(\"brst.alert.compra\", { returnObjects: true })[1]}\r\n                <br ></br><br ></br>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n              </>\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n\r\n\r\n      } else {\r\n        document.getElementById(\"amountFrom\").value = minCompra;\r\n        this.setState({\r\n          ModalTitulo: this.props.i18n.t(\"error\"),\r\n          ModalBody: this.props.i18n.t(\"brst.alert.errGreater\", { returnObjects: true, min: minCompra })[0]\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      document.getElementById(\"amountFrom\").value = \"\";\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"error\"),\r\n        ModalBody: this.props.i18n.t(\"brst.alert.errFunds\", { returnObjects: true, min: minCompra })[0]\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    }\r\n\r\n    await utils.delay(5);\r\n    this.estado();\r\n\r\n\r\n  };\r\n\r\n  async venta(rapida) {\r\n\r\n    const { minventa } = this.state;\r\n\r\n    let amount = document.getElementById(\"amountFrom\").value;\r\n    amount = amount.replace(/,/g, \".\")\r\n    amount = new BigNumber(amount).shiftedBy(6)\r\n\r\n    let { accountAddress, contrato, tronWeb } = this.props;\r\n\r\n    let AddressContract = tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address)\r\n\r\n    if (rapida) {\r\n      AddressContract = tronWeb.address.toHex(contrato.BRST_TRX_Proxy_fast.address);\r\n    }\r\n\r\n    let aprovado = await contrato.BRST.allowance(accountAddress, AddressContract).call();\r\n    aprovado = parseInt(aprovado);\r\n\r\n    if (aprovado <= amount.toNumber()) {\r\n\r\n      let inputs = [\r\n        { type: 'address', value: AddressContract },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: <>Result</>,\r\n            ModalBody: <>BRST Aproval is Done {transaction.txid}</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n\r\n      //await this.props.contrato.BRST.approve(this.props.contrato.BRST_TRX_Proxy.address, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n\r\n      aprovado = await contrato.BRST.allowance(accountAddress, AddressContract).call();\r\n      aprovado = parseInt(aprovado);\r\n\r\n    }\r\n\r\n    if (aprovado >= amount.toNumber()) {\r\n\r\n      if (amount.toNumber() >= minventa && true) {\r\n\r\n        if (rapida) {\r\n          this.setState({\r\n            ModalTitulo: \"You select fast withdrawal\",\r\n            ModalBody: <>\r\n              The request has been processed! Your funds are on their way. Thank you for choosing our speedy service.\r\n            </>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n          let inputs = [\r\n            //{type: 'address', value: this.props.tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n            { type: 'uint256', value: amount.toString(10) }\r\n          ]\r\n\r\n          let funcion = \"instaRetiro(uint256)\"\r\n          if (rapida) {\r\n            funcion = \"sell_token_2(uint256)\"\r\n          }\r\n          const options = {}\r\n          let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(AddressContract, funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n          let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n          transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n            .catch((e) => {\r\n\r\n              this.setState({\r\n                ModalTitulo: \"Error\",\r\n                ModalBody: e.toString()\r\n              })\r\n\r\n              window.$(\"#mensaje-brst\").modal(\"show\");\r\n            })\r\n          transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n            .then(() => {\r\n              this.setState({\r\n                ModalTitulo: \"Result\",\r\n                ModalBody: <>Your fast withdrawal was successfully processed {transaction.txid}\r\n                  <br ></br><br ></br>\r\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n                </>\r\n              })\r\n\r\n              window.$(\"#mensaje-brst\").modal(\"show\");\r\n            })\r\n\r\n\r\n        } else {\r\n          let inputs = [\r\n            //{type: 'address', value: this.props.tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n            { type: 'uint256', value: amount.toString(10) }\r\n          ]\r\n\r\n          let funcion = \"esperaRetiro(uint256)\"\r\n          const options = {}\r\n          let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n          let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n          transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n            .catch((e) => {\r\n\r\n              this.setState({\r\n                ModalTitulo: \"Error\",\r\n                ModalBody: e.toString()\r\n              })\r\n\r\n              window.$(\"#mensaje-brst\").modal(\"show\");\r\n            })\r\n          transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n            .then(() => {\r\n              this.setState({\r\n                ModalTitulo: \"Result\",\r\n                ModalBody: <>Normal retiro Done {transaction.txid}\r\n                  <br ></br><br ></br>\r\n                  <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n                </>\r\n              })\r\n\r\n              window.$(\"#mensaje-brst\").modal(\"show\");\r\n            })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"hide\");\r\n          document.getElementById(\"request-brst\").scrollIntoView();\r\n        }\r\n\r\n      } else {\r\n        this.setState({\r\n          ModalTitulo: \"Info\",\r\n          ModalBody: `Enter a value greater than ${minventa} BRST`\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n        document.getElementById(\"amountFrom\").value = minventa;\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      if (amount > aprovado) {\r\n        if (aprovado <= 0) {\r\n          this.setState({\r\n            ModalTitulo: \"Info\",\r\n            ModalBody: \"You do not have enough aproved funds in your account you place at least \" + minventa + \" BRST\"\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        } else {\r\n          this.setState({\r\n            ModalTitulo: \"Info\",\r\n            ModalBody: \"You must leave 21 TRX free in your account to make the transaction\"\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        }\r\n\r\n      } else {\r\n\r\n        this.setState({\r\n          ModalTitulo: \"Info\",\r\n          ModalBody: \"You must leave 21 TRX free in your account to make the transaction\"\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      }\r\n\r\n      document.getElementById(\"amountFrom\").value = minventa;\r\n\r\n\r\n    }\r\n\r\n    this.estado();\r\n\r\n\r\n  };\r\n\r\n  async retiro(id) {\r\n\r\n    let amount = prompt(\"amount to fast whitdrawl\", \"example 100 TRX\")\r\n\r\n    amount = new BigNumber(amount).shiftedBy(6).toString(10)\r\n\r\n    let inputs = [\r\n      //{type: 'address', value: this.props.tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n      { type: 'uint256', value: amount }\r\n    ]\r\n\r\n    let funcion = \"setTRON_RR(uint256)\"\r\n    const options = {}\r\n    let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.BRST_TRX_Proxy.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n    let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          ModalTitulo: \"Error\",\r\n          ModalBody: e.toString()\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n      })\r\n    transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n\r\n    console.log(transaction)\r\n\r\n    this.estado();\r\n\r\n  };\r\n\r\n  async grafico(time, temporalidad, cantidad, selector) {\r\n\r\n    let { precioBrst, precioUSDT, precioUSDD } = this.state\r\n\r\n    if (!document.getElementById('chartdiv-brst')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n\r\n    const root = am5.Root.new(\"chartdiv-brst\");\r\n    root._logo.dispose();\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        pinchZoomX: true\r\n      })\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"none\"\r\n    }));\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    // Generate random data\r\n    let downColor = root.interfaceColors.get(\"negative\");\r\n    let upColor = root.interfaceColors.get(\"positive\");\r\n\r\n    let previousValue = 0;\r\n    let previousColor;\r\n    let previousDataObj;\r\n\r\n    function generateData(data, alt) {\r\n      let value = data.value\r\n      if (alt) {\r\n        let encontrado = data.valor_alt.find((obj) => obj.coin === alt)\r\n\r\n        if (encontrado) {\r\n          value = encontrado.valor\r\n        } else {\r\n          value = 0\r\n        }\r\n      }\r\n\r\n      let color = downColor;\r\n\r\n      if (value >= previousValue) {\r\n        color = upColor;\r\n      }\r\n\r\n      previousValue = value;\r\n\r\n      let dataObj = { date: data.date, value: value, color: color }; // color will be used for tooltip background\r\n\r\n      // only if changed\r\n      if (color !== previousColor) {\r\n        if (!previousDataObj) {\r\n          previousDataObj = dataObj;\r\n        }\r\n        previousDataObj.strokeSettings = { stroke: color };\r\n      }\r\n\r\n      previousDataObj = dataObj;\r\n      previousColor = color;\r\n\r\n      return dataObj;\r\n    }\r\n\r\n    let lastPrice = precioBrst\r\n\r\n    switch (selector) {\r\n      case \"usdt\":\r\n        lastPrice = lastPrice * precioUSDT\r\n        break;\r\n\r\n      case \"usdd\":\r\n        lastPrice = lastPrice * precioUSDD\r\n        break;\r\n\r\n      default:\r\n        selector = false\r\n        break;\r\n    }\r\n    let lastData = { date: Date.now(), value: lastPrice };\r\n\r\n    //console.log(lastData)\r\n\r\n    async function generateDatas(count) {\r\n\r\n      let consulta = await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=\" + temporalidad + \"&limite=\" + count)\r\n        .then(async (r) => (await r.json()).Data)\r\n        .catch(() => { return false })\r\n\r\n      if (consulta) {\r\n        previousValue = 0;\r\n        previousColor = \"\";\r\n        previousDataObj = \"\";\r\n        let data = []\r\n        for (var i = consulta.length - 1; i >= 0; --i) {\r\n          data.push(generateData(consulta[i], selector));\r\n        }\r\n\r\n        data.push(lastData)\r\n\r\n\r\n        return data;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    }\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"Series\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\"\r\n      })\r\n    );\r\n\r\n    series.strokes.template.set(\"templateField\", \"strokeSettings\");\r\n\r\n    let tooltip = series.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      labelText: \"{valueY}\"\r\n    }));\r\n\r\n    // this is added in ored adapter to be triggered each time position changes\r\n    tooltip.on(\"pointTo\", function () {\r\n      let background = tooltip.get(\"background\");\r\n      background.set(\"fill\", background.get(\"fill\"));\r\n    });\r\n\r\n    // tooltip bacground takes color from data item\r\n    tooltip.get(\"background\").adapters.add(\"fill\", function (fill) {\r\n      if (tooltip.dataItem) {\r\n        return tooltip.dataItem.dataContext.color;\r\n      }\r\n      return fill;\r\n    });\r\n\r\n    // Add scrollbar\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n    //scrollbar.parent = chart.bottomAxesContainer;\r\n    let scrollbar = chart.set(\r\n      \"scrollbarX\",\r\n      am5xy.XYChartScrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n        height: 40\r\n      })\r\n    );\r\n\r\n    let sbDateAxis = scrollbar.chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbValueAxis = scrollbar.chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbSeries = scrollbar.chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        xAxis: sbDateAxis,\r\n        yAxis: sbValueAxis,\r\n\r\n      })\r\n    );\r\n\r\n    // Generate and set data  \r\n    let data = await generateDatas(cantidad);\r\n    if (data) {\r\n      series.data.setAll(data);\r\n      sbSeries.data.setAll(data);\r\n    }\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n\r\n\r\n    series.appear(time);\r\n    chart.appear(time, time / 10);\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  render() {\r\n\r\n    let { from, to, precioBrst, minCompra, minventa, days, diasCalc, temporalidad, tiempoPromediado, isOwner, isAdmin, globDepositos, crecimientoPorcentual, userEnergy, rapida, penalty, retiroRapido, dias } = this.state;\r\n\r\n    minCompra = \"Min. \" + minCompra + \" \" + from;\r\n    minventa = \"Min. \" + minventa + \" \" + to;\r\n\r\n    let opciones;\r\n\r\n    if (temporalidad === \"hour\") {\r\n      opciones = optionsHours\r\n    } else {\r\n      opciones = options2\r\n    }\r\n\r\n    let retiradas = <></>\r\n\r\n    if (from + \"_\" + to === \"brst_trx\") {\r\n      retiradas = (<div className=\"row mb-3\">\r\n        <div className=\"col-12 text-center\">\r\n          <input type=\"checkbox\" checked={rapida} readOnly onClick={() => { this.setState({ rapida: !rapida }) }} style={{ cursor: \"pointer\" }}></input> <b>Quick:</b> request up to <b>{retiroRapido.dp(1).toString(10)} TRX</b> with a <b>{penalty}% fee.</b><br></br>\r\n          <input type=\"checkbox\" checked={!rapida} readOnly onClick={() => { this.setState({ rapida: !rapida }) }} style={{ cursor: \"pointer\" }}></input> <b>Regular:</b> request the <b>total</b> with a <b>{dias} days</b> waiting period.\r\n        </div>\r\n      </div>)\r\n    }\r\n\r\n    return (<>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"nav-bitcoin\" role=\"tabpanel\" aria-labelledby=\"nav-bitcoin-tab\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-xxl-9 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                  <div className=\"card coin-content\">\r\n                    <div className=\"card-header border-0 flex-wrap\">\r\n                      <div className=\"mb-2\">\r\n                        <h4 className=\"heading m-0\">{this.props.i18n.t(\"tokenChart\", { token: \"BRST\" })}</h4>\r\n                        <span className=\"fs-16\">Brutus Tron Staking </span>\r\n                      </div>\r\n                      <div className=\"dropdown bootstrap-select\">\r\n\r\n                        <select className=\"image-select default-select dashboard-select\" id=\"selector\" aria-label=\"Default\" tabIndex=\"0\" style={{ background: \"rgb(3 0 8 / 20%)\" }} onInput={(r) => {\r\n\r\n                          this.grafico(500, this.state.temporalidad, this.state.cantidadDatos, document.getElementById(\"selector\").value);\r\n                        }}>\r\n                          <option value=\"trx\">TRX (Tron)</option>\r\n                          <option value=\"usdd\">USDD (Decentralized USD)</option>\r\n                          <option value=\"usdt\">USD₮ (Tether)</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-18 d-block mb-2\">{this.props.i18n.t(\"price\")}</span>\r\n                            <h4 className=\"fs-20 font-w600\">{this.state.precioBrst} TRX</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">24h% change</span>\r\n                            <h4 className=\"font-w600 text-success\">{(this.state.varBrst).toFixed(4)}<i className=\"fa-solid fa-caret-up ms-1 text-success\"></i></h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">{this.props.i18n.t(\"circulating\")}</span>\r\n                            <h4 className=\"font-w600\">{(this.state.tokensEmitidos * 1).toFixed(2)} BRST</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">{this.props.i18n.t(\"endorse\")}</span>\r\n                            <h4 className=\"font-w600\">{(this.state.enBrutus * 1).toFixed(2)} TRX</h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\" id=\"chartdiv-brst\" style={{ height: \"400px\", backgroundColor: \"white\" }}></div>\r\n\r\n\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: 'white' }} value={this.state.cantidadDatos} onChange={this.handleChange2}>\r\n                        {opciones.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      {\" | \"}\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: 'white' }} value={this.state.temporalidad} onChange={this.handleChange}>\r\n                        {options.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-xl-3 col-xxl-3 col-sm-6 wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                  <div className=\"card digital-cash\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"media d-block\">\r\n                          <img\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                ModalTitulo: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[0],\r\n                                ModalBody: (\r\n                                  <>\r\n                                    <select id=\"currencySelect\" className=\"form-select mb-3\">\r\n                                      <option value=\"TRX\">TRX</option>\r\n                                      <option value=\"BRST\">BRST</option>\r\n                                      <option value=\"USDT\">USDT</option>\r\n                                      <option value=\"USDD\">USDD</option>\r\n                                    </select>\r\n                                    TRX\r\n                                    <input type=\"number\" id=\"trxD\" className=\"form-control mb-3\" placeholder=\"Amount\"></input>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-success w-100 mb-3\"\r\n                                      onClick={() => {\r\n                                        let donacion = document.getElementById('trxD').value;\r\n                                        let currency = document.getElementById('currencySelect').value;\r\n                                        donacion = new BigNumber(donacion).shiftedBy(6).dp(0);\r\n                                        if (currency === \"TRX\") {\r\n                                          this.props.contrato.BRST_TRX_Proxy['donate()']().send({ callValue: donacion })\r\n                                            .then(() => {\r\n                                              this.setState({\r\n                                                ModalTitulo: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[1],\r\n                                                ModalBody: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[2]\r\n                                              });\r\n                                              window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                              this.estado();\r\n                                            });\r\n                                        } else if (currency === \"USDT\" || currency === \"USDD\" || currency === \"BRST\") {\r\n                                          // Aquí puedes agregar la lógica para manejar USDT y USDD\r\n                                          console.log(\"Donación en \" + currency + \":\" + donacion);\r\n                                        }\r\n                                      }}\r\n                                    >\r\n                                      {this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[3]}\r\n                                    </button>\r\n                                    BRST\r\n                                    <input type=\"number\" id=\"brstD\" className=\"form-control mb-3\" placeholder=\"Amount\"></input>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-success w-100 mb-3\"\r\n                                      onClick={() => {\r\n                                        let donacion = document.getElementById('brstD').value;\r\n                                        donacion = new BigNumber(donacion).shiftedBy(6).dp(0);\r\n                                        this.props.contrato.BRST_TRX_Proxy['donate(uint256)'](donacion.toString(10)).send()\r\n                                          .then(() => {\r\n                                            this.setState({\r\n                                              ModalTitulo: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[1],\r\n                                              ModalBody: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[2]\r\n                                            });\r\n                                            window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                            this.estado();\r\n                                          });\r\n                                      }}\r\n                                    >\r\n                                      {this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[3]}\r\n                                    </button>\r\n                                  </>\r\n                                )\r\n                              });\r\n                              window.$(\"#mensaje-brst\").modal(\"show\");\r\n                            }}\r\n                            src=\"images/brst.png\"\r\n                            width=\"100%\"\r\n                            alt=\"brutus tron staking\"\r\n                          />\r\n                          <div className=\"media-content\">\r\n                            <h4 className=\"mt-0 mt-md-4 fs-20 font-w700 text-black mb-0\">{this.props.i18n.t(\"brst.aStaking\")}</h4>\r\n                            <span className=\"font-w600 text-black\">Brutus</span>\r\n                            <span className=\"my-4 fs-16 font-w600 d-block\">1 BRST = {this.state.precioBrst} TRX</span>\r\n                            <p className=\"text-start\">{this.props.i18n.t(\"brst.description\")}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer p-2 border-0\">\r\n                      <a href=\"https://brutus.finance/brutusblog.html\" className=\"btn btn-link text-primary\">{this.props.i18n.t(\"brst.button.readM\")}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-xl-6 col-sm-6 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n\r\n\r\n                  <div className=\"card quick-trade\">\r\n                    <div className=\"card-header pb-0 border-0 flex-wrap\">\r\n                      <div>\r\n                        <h4 className=\"heading mb-0\">{this.props.i18n.t(\"brst.exchange\")} V4.1</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col-12 pb-2\">From</div>\r\n                        <div className=\"col-2 \">\r\n                          <img height=\"42px\" src={\"/images/token/\" + this.state.from + \".png\"} alt=\"tron logo\" />\r\n                        </div>\r\n                        <div className=\"col-3\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                          <select\r\n                            style={{ color: \"white\", backgroundColor: \"var(--primary)\", cursor: \"pointer\", borderRadius: \"0.625rem 0 0 0.625rem\" }}\r\n                            className=\"form-select\"\r\n                            id=\"currencySelectFrom\"\r\n                            onChange={this.handleCurrencyChangeFrom} // Manejador para cambios en la selección\r\n                          >\r\n                            <option value=\"trx\">TRX </option>\r\n                            <option value=\"usdt\">USDT </option>\r\n                            <option value=\"usdd\">USDD </option>\r\n                            <option value=\"brst\">BRST </option>\r\n\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"col-7\" style={{ paddingLeft: \"0px\" }}>\r\n                          <input className=\"form-control form-control text-end\" style={{ borderRadius: \"0 0.625rem 0.625rem 0\" }} type=\"number\" id=\"amountFrom\" onInput={() => this.calcExchange(false, this.state.from + \"_\" + this.state.to)} placeholder={minCompra} min={this.state.minCompra} step={0.1} ></input>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <hr></hr>\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">To</div>\r\n                        <div className=\"col-2\">\r\n                          <img height=\"42px\" src={\"/images/token/\" + this.state.to + \".png\"} alt=\"brst logo\" />\r\n                        </div>\r\n                        <div className=\"col-3\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                          <select\r\n                            style={{ color: \"white\", backgroundColor: \"var(--primary)\", cursor: \"pointer\", borderRadius: \"0.625rem 0 0 0.625rem\" }}\r\n                            className=\"form-select\"\r\n                            id=\"currencySelectTo\"\r\n                            onChange={this.handleCurrencyChangeTo} // Manejador para cambios en la selección\r\n                          >\r\n                            <option value=\"brst\">BRST </option>\r\n                            <option value=\"trx\">TRX </option>\r\n\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-7\" style={{ paddingLeft: \"0px\" }}>\r\n\r\n                          <input className=\"form-control form-control text-end\" style={{ borderRadius: \"0 0.625rem 0.625rem 0\" }} type=\"number\" id=\"amountTo\" onInput={() => this.calcExchange(true, this.state.to + \"_\" + this.state.from)} placeholder={minventa} min={this.state.minventa} step={0.0001} ></input>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"card-footer border-0\">\r\n                      {retiradas}\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col-12 text-center\">\r\n                          <button className=\"btn btn-success\" style={{ width: \"100%\" }} onClick={() => this.preExchange(rapida)}>\r\n                            Swap {(this.state.from).toUpperCase() + \" -> \" + (this.state.to).toUpperCase()}\r\n\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex mt-2\" style={{ justifyContent: \"space-between\" }}>\r\n                        <p className=\"mb-0 fs-14\">{this.props.i18n.t(\"brst.energy\", { e1: (userEnergy).toLocaleString('en-US') })}</p>\r\n                        <p className=\"mb-0 fs-14\">Fee ~ {this.state.useTrx} TRX</p>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-12 wow fadeInUp\" data-wow-delay=\"0.6s\">\r\n                  <div className=\"card price-list\">\r\n                    <div className=\"card-header border-0 pb-2\">\r\n                      <div className=\"chart-title\">\r\n                        <h4 className=\"text-warning mb-0\">{this.props.i18n.t(\"mya\")}</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body p-3 py-0\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table text-center bg-warning-hover order-tbl\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"text-left\">{this.props.i18n.t(\"token\")}</th>\r\n                              <th className=\"text-center\">{this.props.i18n.t(\"amount\")}</th>\r\n                              <th className=\"text-center\">{this.props.i18n.t(\"value\")}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarBRST() }}>\r\n                              <td className=\"text-left\">BRST</td>\r\n                              <td>{this.state.balanceBRST}</td>\r\n                              <td>{(this.state.balanceBRST * this.state.precioBrst).toFixed(3)} TRX</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">TRX</td>\r\n                              <td>{this.state.balanceTRX}</td>\r\n                              <td>{new BigNumber(this.state.balanceTRX * 0.16).dp(2).toString(10)} USD</td>\r\n\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-center py-3 border-0\">\r\n                      <a href=\"/\" className=\"btn-link text-black\">{this.props.i18n.t(\"showM\")}<i className=\"fa fa-caret-right\"></i></a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mx-0\">\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Your last earnings staking </h4>\r\n              <h6 className=\"card-subtitle\">{this.state.misBRST} BRST = {(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{this.props.i18n.t(\"day\")}</th>\r\n                      <th>{this.props.i18n.t(\"earned\")}</th>\r\n                      <th>{this.props.i18n.t(\"brst.dailyG\")}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {earnings.map((objeto) => (\r\n                      <tr key={objeto.dias.toString()}>\r\n                        <th>{this.props.i18n.t(\"brst.daysAgo\", { days: objeto.dias })}</th>\r\n                        <td>{(objeto.trx).toFixed(6)} TRX</td>\r\n                        <td className=\"color-primary\">{(objeto.diario).toFixed(6)} TRX/{this.props.i18n.t(\"day\")} </td>\r\n                      </tr>))}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\" id=\"request-brst\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n              <div>\r\n                <h4 className=\"fs-20 text-black\">{this.props.i18n.t(\"brst.request\", { returnObjects: true, number: isOwner || isAdmin ? globDepositos.length - 1 : globDepositos.length })[0]}\r\n                  <button className=\"btn  btn-success text-white\" onClick={() => this.estado()}>\r\n                    {this.props.i18n.t(\"brst.request\", { returnObjects: true })[1]} <i className=\"bi bi-arrow-repeat\"></i>\r\n                  </button></h4>\r\n                <p className=\"mb-0 fs-12\">{this.props.i18n.t(\"brst.request\", { returnObjects: true })[2]}</p>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {globDepositos}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">{this.props.i18n.t(\"brst.estimate\")} <br></br> APY {(crecimientoPorcentual * 360).toFixed(3)} %</h4><br></br>\r\n\r\n              <h6 className=\"card-subtitle\" style={{ cursor: \"pointer\" }} onClick={() => { document.getElementById(\"hold\").value = this.state.balanceBRST; this.handleChangeCalc({ target: { value: this.state.balanceBRST } }) }}>\r\n                {this.props.i18n.t(\"brst.mystaking\")}{this.state.misBRST} BRST = {(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX\r\n              </h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n              <b>Days Average: </b>\r\n              <input type=\"number\" id=\"daysProm\" defaultValue={tiempoPromediado} placeholder={tiempoPromediado + \" days\"} min={1} step={1} onInput={async () => {\r\n                let daysProm = parseInt(document.getElementById('daysProm').value);\r\n                await this.setState({ tiempoPromediado: isNaN(daysProm) ? 1 : daysProm });\r\n                this.estado();\r\n              }} ></input>\r\n\r\n              <div className=\"table-responsive overflow-scroll\" style={{ marginTop: \"30px\", height: \"420px\", border: \"2px solid rgba(207, 207, 207, 0.97)\", borderRadius: \"10px\" }}>\r\n\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>\r\n                        Days Hold<br></br>\r\n                        <input type=\"number\" id=\"days\" defaultValue={diasCalc} onInput={this.handleChangeDias} ></input><br></br><br></br>\r\n                        <button className=\"btn btn-primary\" onClick={() => { days = days.unshift({ days: diasCalc, amount: parseFloat((document.getElementById('hold').value).replace(/,/g, \".\")), time: Date.now(), APY: crecimientoPorcentual }) }}>Calculate</button>\r\n\r\n                      </th>\r\n                      <th>\r\n                        Your BRST<br></br>\r\n                        <input type=\"number\" id=\"hold\" defaultValue={0} onInput={this.handleChangeCalc} ></input>\r\n                      </th>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{this.props.i18n.t(\"day\", { count: 10 })}</th>\r\n                      <th>{this.props.i18n.t(\"brst.hold\")}</th>\r\n                      <th>{this.props.i18n.t(\"brst.estimateIn\")}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {days.map((obj) => {\r\n\r\n                      obj.amount = parseFloat(obj.amount);\r\n                      obj.amount = isNaN(obj.amount) || obj.amount <= 0 ? this.state.misBRST : obj.amount;\r\n                      obj.days = isNaN(obj.days) ? 1 : obj.days;\r\n                      obj.time = isNaN(obj.time) ? Date.now() : obj.time;\r\n\r\n                      return (\r\n                        <tr key={\"prospect-days-\" + obj.days + \"-\" + obj.amount + \"-\" + obj.time}>\r\n                          <th>{obj.days}</th>\r\n                          <td>{obj.amount} BRST<br>\r\n                          </br>{(obj.amount * precioBrst).toFixed(3)} TRX</td>\r\n                          <td>{((obj.amount * precioBrst * ((crecimientoPorcentual * obj.days) / 100))).toFixed(6)} TRX</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>Regular withdrawals:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.ProxySC2 + \"/code\"}>{utils.ProxySC2}</a>\r\n                <br ></br>\r\n                <b>Fast withdrawals:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.ProxySC3 + \"/code\"}>{utils.ProxySC3}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"modal fade\" id=\"mensaje-brst\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>{this.state.ModalBody}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\n\r\n/**\r\nclass nftOficina extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdeposito: \"Loading...\",\r\n\t\t\twallet: this.props.accountAddress,\r\n\t\t\tbalanceBRUT: 0,\r\n\t\t\tprecioBRUT: 0\r\n\r\n\t\t};\r\n\r\n\t\tthis.estado = this.estado.bind(this);\r\n\t\tthis.consultarPrecio = this.consultarPrecio.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait utils.setContract(window.tronWeb, contractAddress);\r\n\t\tthis.estado();\r\n\t\tsetInterval(() => this.estado(), 3 * 1000);\r\n\t};\r\n\r\n\tasync consultarPrecio() {\r\n\r\n\t\tvar precio = await utils.contract.RATE().call();\r\n\t\tprecio = parseInt(precio) / 10 ** 6;\r\n\r\n\t\tthis.setState({\r\n\t\t\tprecioBRUT: precio\r\n\t\t});\r\n\r\n\t\treturn precio;\r\n\r\n\t};\r\n\r\n\tasync estado() {\r\n\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\t\tvar contractNFT = await window.tronWeb.contract().at(cons.BRGY);\r\n\r\n\t\tvar robots = [];\r\n\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await contractMistery.entregaNFT(this.props.accountAddress, index).call()\r\n\t\t\t\t.then((conteo) => {\r\n\t\t\t\t\tif (conteo) {\r\n\t\t\t\t\t\trobots.push(parseInt(conteo)); return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\r\n\t\t\tif (conteo === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar estonuevo = [];\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\t\t\tlet user = await contractNFT.ownerOf(robots[index]).call();\r\n\t\t\testonuevo[index] = window.tronWeb.address.fromHex(user) === this.props.accountAddress;\r\n\t\t}\r\n\r\n\t\t//console.log(estonuevo)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tvar URI = await contractNFT.tokenURI(robots[index]).call()\r\n\r\n\t\t\tvar metadata = JSON.parse(await (await fetch(cons.proxy + URI)).text());\r\n\t\t\tmetadata.numero = robots[index]\r\n\r\n\t\t\trobots[index] = metadata;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar imagerobots = [];\r\n\t\tvar recBotton = (<></>)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tif (!estonuevo[index]) {\r\n\t\t\t\trecBotton = (\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={async () => {\r\n\t\t\t\t\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\t\t\t\t\t\tawait contractMistery.claimNFT_especifico(index).send();\r\n\t\t\t\t\t}}>Claim</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\trecBotton = (<></>)\r\n\t\t\t}\r\n\r\n\t\t\timagerobots[index] = (\r\n\t\t\t\t<div className=\"col-xl-3 col-lg-6 col-sm-6\" key={\"robbrutN\" + index}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"new-arrival-product\">\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrivals-img-contnent\">\r\n\t\t\t\t\t\t\t\t\t<img src={robots[index].image} alt={robots[index].name} className=\"img-thumbnail\"></img>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrival-content text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t<h4>#{robots[index].numero} {robots[index].name}</h4>\r\n\t\t\t\t\t\t\t\t\t{recBotton}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trobots: robots,\r\n\t\t\timagerobots: imagerobots\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\" container text-center\">\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t<div className=\"col-lg-12 p-2\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<br /><br />\r\n\r\n\t\t\t\t\t\t\t<h5 >\r\n\t\t\t\t\t\t\t\twallet:<br />\r\n\t\t\t\t\t\t\t\t<strong>{this.props.accountAddress}</strong><br /><br />\r\n\t\t\t\t\t\t\t</h5>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t{this.state.imagerobots}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass nftCrowdFunding extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t\tmc: \"Loading...\",\r\n\t\t\tmb: \"Loading...\"\r\n\t\t};\r\n\r\n\t\tthis.compra = this.compra.bind(this);\r\n\t\tthis.misterio = this.misterio.bind(this);\r\n\r\n\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.misterio();\r\n\t\t}, 7 * 1000)\r\n\t}\r\n\r\n\tasync misterio() {\r\n\r\n\t\tvar contractNFT = await window.tronWeb.contract().at(cons.BRGY);\r\n\t\tconsole.log(contractNFT)\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\tlet mb = 0;\r\n\t\tlet mc = 0;\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await contractMistery.entregaNFT(this.props.accountAddress, index).call().catch(() => { return 0; });\r\n\r\n\t\t\tif (conteo) {\r\n\t\t\t\tmc++;\r\n\t\t\t\tlet nft = await contractMistery.entregaNFT(this.props.accountAddress, index).call();\r\n\t\t\t\tlet ownerNft = await contractNFT.ownerOf(parseInt(nft)).call();\r\n\t\t\t\townerNft = window.tronWeb.address.fromHex(ownerNft);\r\n\r\n\t\t\t\tif (ownerNft !== this.props.accountAddress) {\r\n\t\t\t\t\tmb++;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tmc: mc,\r\n\t\t\tmb: mb\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n\tasync compra() {\r\n\r\n\t\tvar accountAddress = await window.tronWeb.trx.getAccount();\r\n\t\taccountAddress = window.tronWeb.address.fromHex(accountAddress.address);\r\n\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\tvar contractAPENFT = await window.tronWeb.contract().at(cons.APENFT);\r\n\r\n\t\tvar aprovado = await contractAPENFT.allowance(accountAddress, contractAddress).call();\r\n\r\n\t\tif (aprovado.remaining) {\r\n\t\t\taprovado = aprovado.remaining;\r\n\t\t}\r\n\r\n\t\taprovado = parseInt(aprovado);\r\n\t\taprovado = aprovado / 10 ** 6;\r\n\r\n\r\n\t\tif (aprovado > 0) {\r\n\r\n\t\t\tawait contractMistery.buyMisteryBox().send();\r\n\r\n\t\t\twindow.alert(\"Mistery box buyed!\");\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tawait contractAPENFT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n\r\n\r\n\t\t}\r\n\r\n\t\tthis.misterio();\r\n\r\n\t};\r\n\r\n\trender() {\r\n\r\n\r\n\t\treturn (\r\n\r\n\r\n\t\t\t<div className=\"container text-center\">\r\n\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid\"\r\n\t\t\t\t\t\t\t\tsrc=\"assets/img/MISTERY2.gif\"\r\n\t\t\t\t\t\t\t\talt=\"mistery box brutus\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h2>Mistery box</h2>\r\n\t\t\t\t\t\t\t<p>10'000.000 APENFT</p>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" style={{ \"cursor\": \"pointer\" }} onClick={() => this.compra()}>Buy Mistery Box</button>\r\n\r\n\t\t\t\t\t\t\t<br></br><br></br>\r\n\r\n\t\t\t\t\t\t\tMistery Box buyed: {this.state.mc}\r\n\r\n\t\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t\t<button className=\"btn btn-warning\" style={{ \"cursor\": \"pointer\" }} onClick={async () => {\r\n\r\n\t\t\t\t\t\t\t\tif (false) {\r\n\r\n\t\t\t\t\t\t\t\t\twindow.alert(\"please wait to claim your NFT\")\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\t\t\t\t\t\t\t\tawait contractMistery.claimNFT().send()\r\n\t\t\t\t\t\t\t\t\t\t.then(() => { window.alert(\"NFT's sended\") })\r\n\t\t\t\t\t\t\t\t\t\t.catch(() => { window.alert(\"Error to reclaim\") })\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}}>Open {this.state.mb} Mistery Box</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n */\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nexport default class nfts extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\timagerobots: []\r\n\r\n\t\t};\r\n\r\n\t\tthis.estado = this.estado.bind(this);\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = \"BRGY | Brutus.Finance\"\r\n\r\n\t\tintervalId = setInterval(() => {\r\n\r\n\t\t\tif (Date.now() >= nextUpdate) {\r\n\r\n\t\t\t\tif (!this.props.contrato.ready) {\r\n\t\t\t\t\tnextUpdate = Date.now() + 3 * 1000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextUpdate = Date.now() + 60 * 1000;\r\n\t\t\t\t}\r\n\t\t\t\tthis.estado();\r\n\t\t\t}\r\n\r\n\t\t}, 3 * 1000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(intervalId)\r\n\t}\r\n\r\n\r\n\tasync estado() {\r\n\r\n\t\tlet { contrato } = this.props\r\n\r\n\t\tif (!contrato.ready) return;\r\n\r\n\t\tlet robots = [];\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await this.props.contrato.MBOX.entregaNFT(this.props.accountAddress, index).call()\r\n\t\t\t\t.then((conteo) => {\r\n\t\t\t\t\tif (conteo) {\r\n\t\t\t\t\t\trobots.push(parseInt(conteo)); return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\r\n\t\t\tif (conteo === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar estonuevo = [];\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\t\t\tlet user = await this.props.contrato.BRGY.ownerOf(robots[index]).call();\r\n\t\t\testonuevo[index] = window.tronWeb.address.fromHex(user) === this.props.accountAddress;\r\n\t\t}\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tvar URI = await this.props.contrato.BRGY.tokenURI(robots[index]).call()\r\n\r\n\t\t\tvar metadata = await fetch(utils.proxy + URI).then((res) => { return res.json() }).catch(console.error);\r\n\t\t\tmetadata.numero = robots[index]\r\n\t\t\trobots[index] = metadata;\r\n\r\n\t\t}\r\n\r\n\t\tvar imagerobots = [];\r\n\t\tvar recBotton = (<></>)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tif (!estonuevo[index]) {\r\n\t\t\t\trecBotton = (\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={async () => {\r\n\t\t\t\t\t\tawait this.props.contrato.MBOX.claimNFT_especifico(index).send();\r\n\t\t\t\t\t}}>Claim</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\trecBotton = (<></>)\r\n\t\t\t}\r\n\r\n\t\t\timagerobots[index] = (\r\n\t\t\t\t<div className=\"col-xl-3 col-lg-6 col-sm-6\" key={\"robbrutN\" + index}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"new-arrival-product\">\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrivals-img-contnent\">\r\n\t\t\t\t\t\t\t\t\t<a href={robots[index].image} rel=\"noopener noreferrer\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={robots[index].image} alt={robots[index].name} className=\"img-thumbnail\"></img>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrival-content text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t<h4>#{robots[index].numero} {robots[index].name}</h4>\r\n\t\t\t\t\t\t\t\t\t{recBotton}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trobots: robots,\r\n\t\t\timagerobots: imagerobots\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n\t\t\t\t<div className=\"row page-titles mx-0\">\r\n\t\t\t\t\t<div className=\"col-sm-6 p-md-0\">\r\n\t\t\t\t\t\t<div className=\"welcome-text\">\r\n\t\t\t\t\t\t\t<h4>My Colectibles</h4>\r\n\t\t\t\t\t\t\t<p className=\"mb-0\">BRGY</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex\">\r\n\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">See collection on </li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\"><a href=\"https://bit.ly/Brutus-Gallery\" rel=\"noopener noreferrer\" target=\"_blank\">APENFT</a></li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{this.state.imagerobots}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport abi_SUNSAWPv2 from \"../assets/abi/sunswapV2.json\";\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nlet sunswapRouter = \"TKzxdSv2FZKQrEqkKVgp5DcwEXBEKMg2Ax\" // suwap V2\r\nlet intervalId = [];\r\n\r\nexport default class nfts extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      deposito: \"Loading...\",\r\n      wallet: this.props.accountAddress,\r\n      balanceBRUT: 0,\r\n      precioBRUT: 0,\r\n      mc: 0,\r\n      mb: 0,\r\n      totalNFT: \"Loading...\",\r\n      premio: \"Loading...\",\r\n      LastWiner: \"Loading...\",\r\n      proximoSorteo: \"Loading...\",\r\n      modalTitulo: \"\",\r\n      modalBody: \"\",\r\n      contarSegundos: 10e25,\r\n      restanteSegundos: 10e25,\r\n      porcentaje: 100,\r\n\r\n      comprarBRLT: 1,\r\n      precioUnidad: 100,\r\n      total: 100,\r\n      moneda: \"trx\",\r\n\r\n      tikets: [],\r\n\r\n      days: \"\",\r\n      hours: \"00\",\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n\r\n      deadline: 1,\r\n\r\n      onSale: <>Loading NFT FOR SALE</>,\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.consultarPrecio = this.consultarPrecio.bind(this);\r\n\r\n    this.preCompra = this.preCompra.bind(this);\r\n    this.compra = this.compra.bind(this);\r\n\r\n\r\n    this.sunSwap = this.sunSwap.bind(this);\r\n    this.sorteo = this.sorteo.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n\r\n    this.updateCountdown = this.updateCountdown.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    setTimeout(async () => {\r\n      this.estado();\r\n    }, 3 * 1000)\r\n\r\n    intervalId.push(setInterval(() => this.updateCountdown(), 1000))\r\n\r\n    intervalId.push(setInterval(() => {\r\n\r\n      let restanteSegundos = parseInt(this.state.contarSegundos - (Date.now() / 1000))\r\n\r\n      this.setState({\r\n        restanteSegundos: restanteSegundos,\r\n        porcentaje: 100 - (restanteSegundos / 1296000 * 100)\r\n      })\r\n\r\n    }, 1 * 1000))\r\n\r\n    intervalId.push(setInterval(async () => {\r\n      if (this.props.contrato.ready) {\r\n        clearInterval(intervalId[2])\r\n        intervalId.push(setInterval(() => this.estado(), 60 * 1000))\r\n      }\r\n      this.estado();\r\n    }, 6 * 1000))\r\n\r\n\r\n  };\r\n\r\n  componentWillUnmount() {\r\n\r\n    for (let index = 0; index < intervalId.length; index++) {\r\n      clearInterval(intervalId[index])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(e) {\r\n    let value = parseInt(e.target.value);\r\n    if (isNaN(value) || value < 1) value = 1;\r\n    this.setState({\r\n      comprarBRLT: value,\r\n      total: value * this.state.precioUnidad\r\n    });\r\n  }\r\n\r\n  handleChangeSelect(e) {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      moneda: value\r\n    });\r\n  }\r\n\r\n  updateCountdown() {\r\n    if (intervalId.length >= 1) {\r\n      // Getting current time in required format\r\n      let now = new Date().getTime();\r\n      let timeToLive = this.state.deadline - now;\r\n\r\n      // Getting value of days, hours, minutes, seconds\r\n      let days = Math.floor(timeToLive / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor((timeToLive % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      let minutes = Math.floor((timeToLive % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((timeToLive % (1000 * 60)) / 1000);\r\n\r\n      if (days <= 1) {\r\n        days = days + \" Day - \"\r\n      } else {\r\n        days = days + \" Days - \"\r\n      }\r\n\r\n      if (hours <= 9) {\r\n        hours = \"0\" + hours\r\n      }\r\n\r\n      if (minutes <= 9) {\r\n        minutes = \"0\" + minutes\r\n      }\r\n\r\n      if (seconds <= 9) {\r\n        seconds = \"0\" + seconds\r\n      }\r\n\r\n      // Output for over time\r\n      if (timeToLive < 0) {\r\n        days = \"\"\r\n        hours = \"00\"\r\n        minutes = \"00\"\r\n        seconds = \"00\"\r\n      }\r\n\r\n      this.setState({\r\n        days,\r\n        hours,\r\n        minutes,\r\n        seconds,\r\n      })\r\n    }\r\n  }\r\n\r\n  async estado() {\r\n\r\n    if (!this.props.contrato.ready) return;\r\n\r\n    //await this.props.contrato.loteria.inicializar().send();\r\n\r\n    //await this.props.contrato.loteria.update_addressPOOL(\"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE\").send();\r\n\r\n    /*var cosa = await this.props.contrato.loteria.toTRX(\"1000000\").call()\r\n    cosa = cosa[0]\r\n    console.log(cosa)\r\n    window.alert(cosa);\r\n\r\n    cosa = await this.props.contrato.loteria.toBRST(cosa.toString()).call()\r\n    cosa = cosa[0]\r\n    console.log(cosa)\r\n    window.alert(cosa);*/\r\n\r\n    //let cosa = await this.props.contrato.loteria._premio().call()\r\n    //console.log(cosa)\r\n\r\n    //await this.props.contrato.ProxyLoteria.upgradeTo(\"TV5WezZcBPA3v3HJEkM47BBp29dYNmPdj4\").send()\r\n\r\n    //console.log(this.props.tronWeb.address.fromHex(await this.props.contrato.loteria.contractFastPool().call()))\r\n\r\n\r\n    let cantidad = 0\r\n    if (this.props.accountAddress !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n      cantidad = parseInt((await this.props.contrato.BRLT.balanceOf(this.props.accountAddress).call()))\r\n    }\r\n    let totalNFT = parseInt((await this.props.contrato.BRLT.totalSupply().call()))\r\n    let premio = parseInt((await this.props.contrato.loteria.premio().call())[0]) / 10 ** 6\r\n    let LastWiner = parseInt(await this.props.contrato.loteria.lastWiner().call())\r\n\r\n    this.setState({\r\n      totalNFT,\r\n      premio,\r\n      LastWiner,\r\n    })\r\n\r\n    let onSaleURI = \"https://nft-metadata.brutusservices.com/v1/lottery?ticket=\" + totalNFT\r\n    let onSalemetadata = JSON.parse(await (await fetch(utils.proxy + onSaleURI)).text());\r\n\r\n    let onSale = <div className=\"col-md-6 col-sm-12\" key={\"tiket-onsale-\" + totalNFT}>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"new-arrival-product\">\r\n            <div className=\"new-arrival-content text-center\">\r\n              <h4>Ticket #{totalNFT} FOR SALE</h4>\r\n            </div>\r\n            <div className=\"new-arrivals-img-contnent\">\r\n              <img src={onSalemetadata.image} alt={onSalemetadata.name + \" # \" + onSalemetadata.number} className=\"img-thumbnail\"></img>\r\n            </div>\r\n            <button className=\"btn btn-primary mt-1\" onClick={() => this.preCompra()} >  {\">>>\"} {this.state.total + \" \"}TRX {\"<<<\"}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    this.setState({ onSale })\r\n\r\n    let proximoSorteo = parseInt(await this.props.contrato.loteria.proximaRonda().call())\r\n    this.setState({ contarSegundos: proximoSorteo })\r\n    let prosort = proximoSorteo;\r\n    proximoSorteo = new Date(proximoSorteo * 1000)\r\n\r\n    this.setState({ deadline: proximoSorteo })\r\n\r\n    var minutos = proximoSorteo.getMinutes()\r\n\r\n    if (minutos < 10) {\r\n      minutos = \"0\" + minutos;\r\n    }\r\n\r\n    this.setState({\r\n      mc: cantidad,\r\n      proximoSorteo: \"Day \" + proximoSorteo.getDate() + \" | \" + proximoSorteo.getHours() + \":\" + minutos + \"Hrs\",\r\n      prosort,\r\n    });\r\n\r\n\r\n    let myTikets = parseInt((await this.props.contrato.BRLT.balanceOf(this.props.accountAddress).call()))\r\n\r\n    /*\r\n    let inputs = [\r\n      {type: 'address', value: this.props.tronWeb.address.toHex(\"TKSpw8UXhJYL2DGdBNPZjBfw3iRrVFAxBr\")},\r\n      //{ type: 'uint256', value: \"72\" }\r\n    ]\r\n\r\n    let funcion = \"deleteVaul(uint256)\"\r\n    const options = {}\r\n    let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.loteria.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n    let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n    .catch((e) => { console.log(e)})\r\n    transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n    .catch((e) => { console.log(e)})\r\n\r\n    console.log(transaction)\r\n    */\r\n\r\n\r\n    let { tikets } = this.state\r\n\r\n    for (let index = 0; index < myTikets; index++) {\r\n\r\n      let globalId = parseInt((await this.props.contrato.BRLT.tokenOfOwnerByIndex(this.props.accountAddress, index).call()))\r\n\r\n      let URI = await this.props.contrato.BRLT.tokenURI(globalId).call()\r\n      let metadata = JSON.parse(await (await fetch(utils.proxy + URI)).text());\r\n\r\n      //console.log(metadata)\r\n\r\n      let button = <></>\r\n\r\n      let value = new BigNumber(parseInt(await this.props.contrato.loteria.valueNFT(globalId).call())).shiftedBy(-6).dp(2).toString(10)\r\n\r\n      if (value > 0) {\r\n        button = (<div className=\"new-arrival-content text-center mt-3\">\r\n          <button className=\"btn btn-success\" >Prize {value} TRX</button>\r\n        </div>)\r\n      }\r\n\r\n      tikets[index] = (\r\n\r\n        <div className=\"col-3\" key={\"tiket-lottery-\" + globalId}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"new-arrival-product\">\r\n                <div className=\"new-arrival-content text-center mt-3\">\r\n                  <h4>Ticket #{globalId}</h4>\r\n                </div>\r\n                <div className=\"new-arrivals-img-contnent\">\r\n                  <img src={metadata.image} alt={metadata.name + \" # \" + metadata.number} className=\"img-thumbnail\"></img>\r\n                </div>\r\n                {button}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      this.setState({\r\n        tikets\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async preCompra() {\r\n\r\n    //alquiler de energia\r\n\r\n    if (this.state.moneda !== \"trx\") {\r\n      await this.sunSwap(this.state.moneda);\r\n    }\r\n    this.compra()\r\n\r\n  }\r\n\r\n\r\n  async compra() {\r\n\r\n\r\n    let feelimit = 200 * 10 ** 6;\r\n\r\n    // comprobar si tiene 100 trx para hacer la compra\r\n\r\n    if (this.state.comprarBRLT > 1) feelimit = 1000 * 10 ** 6;\r\n    if (this.state.comprarBRLT > 20) feelimit = 2000 * 10 ** 6;\r\n\r\n    let inputs = [\r\n      { type: 'address', value: this.props.tronWeb.address.toHex(this.props.accountAddress) },\r\n      { type: 'uint256', value: this.state.comprarBRLT }\r\n    ]\r\n\r\n    let funcion = \"buyLoteria(address,uint256)\"\r\n    const options = { callValue: new BigNumber(this.state.total).shiftedBy(6).dp(0).toString(10), feelimit: feelimit }\r\n    let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.loteria.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n    let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          modalTitulo: \"Error\",\r\n          modalBody: e.toString()\r\n        })\r\n\r\n        console.error(e)\r\n\r\n        window.$(\"#alerta\").modal(\"show\");\r\n        return false\r\n      })\r\n\r\n    if (transaction) {\r\n      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            modalTitulo: \"Purchased lottery ticket\",\r\n            modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n          this.estado();\r\n        })\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#alerta\").modal(\"show\");\r\n          return false\r\n        })\r\n    }\r\n\r\n    //await this.props.contrato.BRST_TRX_Proxy.esperaRetiro(amount).send();\r\n\r\n    /*\r\n        this.props.contrato.loteria.buyLoteria(this.props.accountAddress, this.state.comprarBRLT).send({ callValue: new BigNumber(this.state.total).shiftedBy(6).dp(0).toString(10), feeLimit: feelimit })\r\n          .then(() => {\r\n            this.setState({\r\n              modalTitulo: \"Purchased lottery ticket\",\r\n              modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n            })\r\n            window.$(\"#alerta\").modal(\"show\");\r\n            this.estado();\r\n    \r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              modalTitulo: \"Failed transaction\",\r\n              modalBody: \"Please try again later remember to check that you have enough resources\"\r\n            })\r\n            window.$(\"#alerta\").modal(\"show\");\r\n          })\r\n    */\r\n\r\n    this.estado();\r\n  }\r\n\r\n  async sorteo() {\r\n\r\n    //await this.props.contrato.BRST_TRX_Proxy.setDisponible(\"2000000000\").send()\r\n    let premio = parseInt(await this.props.contrato.loteria._premio().call())\r\n\r\n    let salida = parseInt(await this.props.contrato.BRST_TRX_Proxy.TRON_PAY_BALANCE_WHITE().call())\r\n\r\n    if (Date.now() >= (this.state.prosort * 1000) && salida >= premio) {\r\n      this.props.contrato.loteria.sorteo().send()//.send({shouldPollResponse:true})\r\n        .then(async (r) => {\r\n          console.log(r)\r\n          await this.estado()\r\n          this.setState({\r\n            modalTitulo: \"Good luck\",\r\n            modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n          this.setState({\r\n            modalTitulo: \"Bad luck\",\r\n            modalBody: \"something has not gone well, thank you for trying to collaborate, it will be on a next occasion \"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n        })\r\n    } else {\r\n      this.setState({\r\n        modalTitulo: \"Please wait\",\r\n        modalBody: \"It is not yet time to carry out the draw, wait for the announced date to collaborate with the draw\"\r\n      })\r\n      window.$(\"#alerta\").modal(\"show\");\r\n    }\r\n\r\n    this.estado();\r\n  }\r\n\r\n  async consultarPrecio() {\r\n\r\n    var precio = await this.props.contrato.loteria.RATE().call();\r\n    precio = parseInt(precio) / 10 ** 6;\r\n\r\n    this.setState({\r\n      precioBRUT: precio\r\n    });\r\n\r\n    return precio;\r\n\r\n  };\r\n\r\n\r\n\r\n  async sunSwap(coin) {\r\n\r\n    let token\r\n    let swapContract\r\n    let trxAddress\r\n\r\n    switch (coin) {\r\n      case \"usdt\":\r\n\r\n        token = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\r\n        swapContract = \"TFGDbUyP8xez44C76fin3bn3Ss6jugoUwJ\"\r\n        trxAddress = \"TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR\"\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // cantidades que costará\r\n\r\n    let contract_base_token = await this.props.tronWeb.contract().at(token)\r\n    let amount_base_token = await contract_base_token.balanceOf(swapContract).call()\r\n    amount_base_token = parseInt(amount_base_token)\r\n    amount_base_token = new BigNumber(amount_base_token).shiftedBy(-1 * (await contract_base_token.decimals().call()))\r\n\r\n    let contract_result_token = await this.props.tronWeb.contract().at(trxAddress)\r\n    let amount_result_token = await contract_result_token.balanceOf(swapContract).call()\r\n    amount_result_token = parseInt(amount_result_token)\r\n    amount_result_token = new BigNumber(amount_result_token).shiftedBy(-1 * (await contract_result_token.decimals().call()))\r\n\r\n\r\n    let price = new BigNumber(amount_base_token).dividedBy(amount_result_token)\r\n\r\n\r\n    price = price.times(this.state.comprarBRLT).times(this.state.precioUnidad)\r\n\r\n    //console.log(price.toString(10))\r\n\r\n    alert(\"will spend approximately ~ \" + price.toString(10) + \" (\" + await contract_base_token.name().call() + \") -> \" + await contract_base_token.name().call())\r\n\r\n\r\n    let contrato = await this.props.tronWeb.contract(abi_SUNSAWPv2, sunswapRouter)///esquema de funciones desde TWetT85bP8PqoPLzorQrCyyGdCEG3MoQAk\r\n\r\n    let aprove = await contract_base_token.allowance(this.props.accountAddress, sunswapRouter).call()\r\n    aprove = parseInt(aprove)\r\n\r\n    if (aprove <= 0) {\r\n      await contract_base_token.approve(sunswapRouter, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send()\r\n    }\r\n\r\n    let cantidadTrx = parseInt(this.state.comprarBRLT * this.state.precioUnidad * 10 ** 6)\r\n\r\n    let tokenMax = new BigNumber(this.state.balanceDCT).shiftedBy((this.state.decimalesDCT)).toString(10)\r\n\r\n    let intercam = await contrato[\"4a25d94a\"](cantidadTrx, tokenMax, [this.props.tronWeb.address.toHex(token), this.props.tronWeb.address.toHex(trxAddress)], this.props.accountAddress, (parseInt(Date.now() / 1000)) + 100).send()\r\n\r\n    console.log(intercam)\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body pb-2\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-12\">\r\n                    <img src=\"images/banner-brutuslottery.jpg\" width=\"100%\" alt=\"\" style={{ borderRadius: \"4px\" }} ></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <hr></hr>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"text-center row align-items-center justify-content-center\">\r\n\r\n                      {this.state.onSale}\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                              <div className=\"me-3\">\r\n                                <h2 className=\" count-num mb-0\">Next round: {this.state.days} {this.state.hours}:{this.state.minutes}:{this.state.seconds}</h2>\r\n                              </div>\r\n                              <div id=\"ticketSold\"></div>\r\n                            </div>\r\n                            <div className=\"progress mb-2\" style={{ \"height\": \"10px\" }}>\r\n                              <div className=\"progress-bar bg-warning progress-animated\" style={{ \"width\": this.state.porcentaje + \"%\", \"height\": \"10px\" }} role=\"progressbar\">\r\n                              </div>\r\n                            </div>\r\n                            <p>{this.state.proximoSorteo}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                              <h4 className=\"fs-18 font-w400\">Award</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\">{this.state.premio} TRX</h2>\r\n                                <span className=\"fs-16 font-w500 text-success ps-2\"><i className=\"bi bi-caret-up-fill pe-2\"></i></span>\r\n                              </div>\r\n                            </div>\r\n                            <div id=\"barChart\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n                              window.open(\"https://apenft.io/#/collection/TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU\", '_blank')\r\n                            }}>\r\n\r\n                              <h4 className=\"fs-18 font-w400\">NFT Sold</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\">{this.state.totalNFT}</h2>\r\n                              </div>\r\n                            </div>\r\n                            <div id=\"totalInvoices\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n                              window.open(\"https://apenft.io/#/asset/TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU/\" + this.state.LastWiner, '_blank')\r\n                            }}>\r\n\r\n                              <h4 className=\"fs-18 font-w400\">Last Winner</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\" >#{this.state.LastWiner}</h2>\r\n                              </div>\r\n\r\n                            </div>\r\n                            <div id=\"paidinvoices\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n\r\n                  <div className=\"card-body \">\r\n\r\n                    <h2 className=\"heading\">My Tickets</h2>\r\n                    <p>\r\n                      The probability of winning is based on how many tickets you have, the more tickets you have, the greater the probability of winning.\r\n                      <br></br><br></br>\r\n\r\n                    </p>\r\n\r\n                    <div className=\"row\">\r\n                      {this.state.tikets}\r\n\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n\r\n                  <div className=\"card-body \">\r\n\r\n                    <h2 className=\"heading\">Welcome to Brutus Lottery</h2>\r\n\r\n\r\n                    <p>\r\n                      Where the thrill of acquiring unique NFTs meets the chance to win substantial prizes. Discover a collection of 9999 exclusive NFTs, each representing a digital masterpiece priced at 100 TRX. Engage in bi-weekly automated draws, with 80% of the proceeds going to the winner and 20% to the Brutus Lottery team.\r\n                      <br ></br><br ></br>\r\n\r\n                    </p>\r\n\r\n                    <h4>What We Offer:</h4><br></br>\r\n                    <ol>\r\n                      <li>\r\n                        <b>Exclusive NFTs:</b> Explore a collection of 9999 unique NFTs, each a digital artwork priced at 100 TRX.\r\n                      </li>\r\n                      <li>\r\n                        <b>Bi-weekly Draws:</b> Participate in automatic draws every fifteen days, offering an 80% prize to the winner.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Transparent Process:</b> NFT minting via the Brutus Lottery TRC721 contract ensures authenticity.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Automated and Randomized:</b> Draw results are automatic, and our randomness coefficient guarantees fairness.\r\n\r\n                      </li>\r\n                    </ol>\r\n\r\n                    <h4>How to Participate:</h4>\r\n\r\n                    <ol>\r\n                      <li>\r\n                        <b>Acquire NFTs:</b> Increase your winning chances by acquiring unique NFTs.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Effortless Draws:</b> Prizes are automatically delivered at draw time, eliminating the need for claims.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Explore Infinite Possibilities:</b> Each NFT opens doors to a universe of possibilities, merging digital art with the excitement of draws.\r\n\r\n                      </li>\r\n                    </ol>\r\n                    <p className=\"text-center\">\r\n                      <br></br><br></br>\r\n                      Join Brutus Lottery and experience the thrill of the unique, where every NFT unlocks endless opportunities.\r\n                    </p>\r\n\r\n                    <p className=\"text-center\" >\r\n                      <a href=\"https://brutus.finance/docs/Terms-and-Conditions-Brutus-Lottery.pdf\" className=\"btn btn-primary\">{\"--> \"}Read all Terms and Conditions {\" <--\"}</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h4 className=\"card-title\">Smart Contracts </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p>\r\n                    <b>Lottery:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.SC4 + \"/code\"}>{utils.SC4}</a>\r\n                    <br></br>\r\n                    <b>NFT:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.BRLT + \"/code\"}>{utils.BRLT}</a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"alerta\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{this.state.modalTitulo}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {this.state.modalBody}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst amountsE = [\r\n  { amount: 32000, text: \"32K\" },\r\n  { amount: 100000, text: \"100K\" },\r\n  { amount: 160000, text: \"160K\" },\r\n  { amount: 1000000, text: \"1M\" },\r\n  { amount: 3000000, text: \"3M\" }\r\n]\r\n\r\nconst amountB = [\r\n  { amount: 1000, text: \"1k\" },\r\n  { amount: 2000, text: \"2k\" },\r\n  { amount: 5000, text: \"5k\" },\r\n  { amount: 10000, text: \"10k\" },\r\n  { amount: 50000, text: \"50k\" }\r\n]\r\n\r\nlet intervalId\r\n\r\nexport default class EnergyRental extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      deposito: \"Loading...\",\r\n      wallet: \"Loading...\",\r\n      precio: \"****\",\r\n      wallet_orden: \"\",\r\n      recurso: \"energy\",\r\n      cantidad: 32000,\r\n      montoMin: 32000,\r\n      minPrice: '2.56',\r\n      periodo: 5,\r\n      temporalidad: \"min\",\r\n      duration: '5min',\r\n      av_band: new BigNumber(0),\r\n      av_energy: new BigNumber(0),\r\n      available_bandwidth: [],\r\n      available_energy: [],\r\n      total_bandwidth_pool: 0,\r\n      total_energy_pool: 0,\r\n      titulo: \"Titulo\",\r\n      body: \"Cuerpo del mensaje\",\r\n      amounts: amountsE,\r\n      energyOn: false,\r\n      bandOn: false,\r\n      fromUrl: true,\r\n\r\n      unitEnergyPrice: new BigNumber(1),\r\n      precios: [],\r\n\r\n    };\r\n\r\n    this.handleChangePeriodo = this.handleChangePeriodo.bind(this);\r\n    this.handleChangeWallet = this.handleChangeWallet.bind(this);\r\n\r\n    this.updateAmount = this.updateAmount.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.recursos = this.recursos.bind(this);\r\n    this.calcularRecurso = this.calcularRecurso.bind(this);\r\n    this.calcularPrecios = this.calcularPrecios.bind(this);\r\n\r\n    this.preCompra = this.preCompra.bind(this);\r\n    this.compra = this.compra.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.title = \"B.F | E-Bot\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"ebot.tittle\")\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 1 * 1000)\r\n\r\n    intervalId = setInterval(() => {\r\n      this.estado()\r\n\r\n    }, 60 * 1000)\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n  handleChangeWallet(event) {\r\n    let dato = event.target.value;\r\n    this.setState({\r\n      wallet_orden: dato\r\n    });\r\n  }\r\n\r\n  handleChangePeriodo(event) {\r\n    let dato = (event.target.value).toLowerCase();\r\n    let tmp = \"d\"\r\n\r\n    document.getElementById(\"periodo\").value = dato;\r\n\r\n\r\n    if (dato.split(\"h\").length > 1 || dato.split(\"hora\").length > 1) {\r\n      tmp = \"h\"\r\n    }\r\n\r\n    if (dato.split(\"m\").length > 1 || dato.split(\"min\").length > 1) {\r\n      tmp = \"m\"\r\n    }\r\n\r\n    this.setState({\r\n      periodo: parseInt(dato),\r\n      temporalidad: tmp\r\n    });\r\n\r\n    this.calcularRecurso()\r\n\r\n\r\n  }\r\n\r\n  updateAmount(amount) {\r\n\r\n    let { recurso } = this.state\r\n\r\n    let montoMin = 32000\r\n    if (recurso === \"bandwidth\") {\r\n      montoMin = 1000\r\n    }\r\n\r\n    this.setState({ montoMin })\r\n\r\n    let cantidad = 0;\r\n    if (amount) {\r\n      cantidad = amount\r\n      try {\r\n        document.getElementById(\"amount\").value = amount\r\n\r\n      } catch(e){\r\n        console.log(e)\r\n      }\r\n\r\n    } else {\r\n      try {\r\n      cantidad = document.getElementById(\"amount\").value\r\n        \r\n      } catch(e){\r\n        console.log(e)\r\n      }\r\n\r\n    }\r\n\r\n    cantidad = parseInt(cantidad)\r\n\r\n    if (parseInt(cantidad) < montoMin || isNaN(cantidad)) {\r\n      cantidad = montoMin\r\n    }\r\n\r\n    this.setState({ cantidad })\r\n\r\n    return cantidad\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { fromUrl } = this.state\r\n\r\n    await this.recursos();\r\n    await this.calcularPrecios();\r\n\r\n    let loc = document.location.href;\r\n    if (loc.indexOf('amount') > 0 && fromUrl) {\r\n      let getString = loc.split('?')[1];\r\n      let GET = getString.split('&');\r\n      let get = {};\r\n      let tmp;\r\n\r\n      for (var i = 0, l = GET.length; i < l; i++) {\r\n        tmp = GET[i].split('=');\r\n        get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n      }\r\n\r\n\r\n      if (parseInt(get['amount']) >= 32000) {\r\n        let cantidad = parseInt(get['amount'])\r\n        let recurso = \"energy\"\r\n        let duration = \"5min\"\r\n        if (get['resource'] !== undefined) {\r\n          recurso = get['resource']\r\n        }\r\n\r\n        if (recurso === \"band\" || recurso === \"bandwidth\") {\r\n          recurso = \"bandwidth\"\r\n        } else {\r\n          recurso = \"energy\"\r\n        }\r\n\r\n        if (get['duration'] !== undefined) {\r\n          duration = get['duration']\r\n        }\r\n\r\n        await this.setState({\r\n          cantidad,\r\n          recurso,\r\n          temporalidad: 'm',\r\n          periodo: '5',\r\n          duration,\r\n          fromUrl: false\r\n        })\r\n\r\n        this.updateAmount(cantidad)\r\n\r\n        this.preCompra()\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      await this.calcularRecurso()\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async recursos() {\r\n\r\n    let { energyOn, bandOn } = this.state\r\n\r\n    let band = 0\r\n    let energi = 0\r\n    let consulta = false\r\n    const URL = \"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL\r\n\r\n    try {\r\n\r\n      consulta = await fetch(URL)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n      energyOn = consulta.available\r\n      bandOn = consulta.available\r\n\r\n      consulta = await fetch(URL + \"available\")\r\n        .then((r) => r.json())\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n      consulta = false\r\n    }\r\n\r\n    if (!consulta) return false;\r\n\r\n    energi = [\r\n      {\r\n        duration: \"5min\",\r\n        available: consulta.av_energy[0].available\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        available: consulta.av_energy[0].available\r\n      },\r\n      {\r\n        duration: \"1d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"3d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"7d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"14d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n\r\n    ]\r\n\r\n    band = [\r\n      {\r\n        duration: \"5min\",\r\n        available: consulta.av_band[0].available\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"1d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"3d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"7d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"14d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n    ]\r\n\r\n    this.setState({\r\n      available_bandwidth: band,\r\n      available_energy: energi,\r\n      total_bandwidth_pool: consulta.total_bandwidth_pool,\r\n      total_energy_pool: consulta.total_energy_pool,\r\n      energyOn,\r\n      bandOn\r\n    });\r\n\r\n    return energyOn\r\n  }\r\n\r\n  async calcularRecurso() {\r\n\r\n    let { recurso, montoMin, precio, available_bandwidth, available_energy } = this.state\r\n\r\n    let cantidad = this.updateAmount()\r\n    let time = document.getElementById(\"periodo\").value\r\n    this.setState({ duration: time })\r\n\r\n    console.log(time, available_energy)\r\n\r\n    let av_energy = available_energy.find(obj => obj.duration === time)\r\n    av_energy = new BigNumber(av_energy.available)\r\n\r\n    this.setState({ av_energy })\r\n\r\n    let av_band = available_bandwidth.find(obj => obj.duration === time)\r\n    av_band = new BigNumber(av_band.available)\r\n\r\n    this.setState({ av_band })\r\n\r\n\r\n    let ok = true;\r\n\r\n    if (time.indexOf(\"d\") >= 0) {\r\n\r\n      if (parseInt(time[0]) < 1 || parseInt(time[0]) > 14) {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[1]\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      time = time.split(\"d\")[0]\r\n\r\n    }\r\n\r\n    if (time.indexOf(\"h\") >= 0) {\r\n\r\n      if (parseInt(time[0]) !== 1) {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.eRange2\"),\r\n          periodo: \"1\"\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      time = \"1h\"\r\n\r\n    }\r\n\r\n    if (time.indexOf(\"m\") >= 0) {\r\n\r\n      if (parseInt(time[0]) !== 5) {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.eRange2\"),\r\n          periodo: \"5\"\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      time = \"5min\"\r\n\r\n    }\r\n\r\n    let priceList = this.state.precios[recurso]\r\n\r\n    if (ok && priceList.length > 0) {\r\n\r\n      const foundPrice = priceList.find(price => price.duration === time);\r\n\r\n      //console.log(cantidad, time, recurso)\r\n\r\n      precio = new BigNumber(foundPrice.UE).times(cantidad)\r\n      // cobro adicional para aumentar la reserva de trx === 10_000 SUN\r\n      precio = precio.plus(0)\r\n\r\n      precio = precio.shiftedBy(-6).dp(6)\r\n\r\n      this.setState({ unitEnergyPrice: foundPrice.UE })\r\n\r\n      if (parseInt(cantidad) <= montoMin) {\r\n        this.setState({ minPrice: precio })\r\n      }\r\n\r\n    } else {\r\n      precio = \"**.**\"\r\n\r\n    }\r\n\r\n    this.setState({\r\n      precio: precio\r\n    })\r\n\r\n    return precio\r\n  }\r\n\r\n  async calcularPrecios() {\r\n\r\n    //let url = \"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices\"\r\n\r\n    let consulta = {}\r\n\r\n\r\n    let url2 = \"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices/all\"\r\n\r\n    consulta = await fetch(url2, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(async (r) => await r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return []\r\n      })\r\n\r\n    let { precios } = this.state\r\n\r\n    precios[\"energy\"] = [\r\n      {\r\n        duration: \"5min\",\r\n        UE: new BigNumber(consulta.energy_minutes_100K).shiftedBy(1).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        UE: new BigNumber(consulta.energy_hour_100K).shiftedBy(1).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"1\",\r\n        UE: new BigNumber(consulta.energy_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"3\",\r\n        UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"7\",\r\n        UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(7 / 3).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"14\",\r\n        UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(14 / 3).dp(6).toNumber()\r\n      },\r\n    ]\r\n\r\n    precios[\"bandwidth\"] = [\r\n      {\r\n        duration: \"5min\",\r\n        UE: new BigNumber(consulta.band_minutes_1000).times(1000).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        UE: new BigNumber(consulta.band_hour_1000).times(1000).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"1\",\r\n        UE: new BigNumber(consulta.band_one_day_1000).times(1000).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"3\",\r\n        UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"7\",\r\n        UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(7 / 3).dp(6).toNumber()\r\n      },\r\n      {\r\n        duration: \"14\",\r\n        UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(14 / 3).dp(6).toNumber()\r\n      },\r\n    ]\r\n\r\n    this.setState({ precios })\r\n\r\n    return precios\r\n  }\r\n\r\n  async preCompra() {\r\n\r\n    await this.recursos();\r\n\r\n    let { wallet_orden, cantidad, periodo, temporalidad, recurso, energyOn, bandOn, av_energy, av_band, total_energy_pool, total_bandwidth_pool } = this.state\r\n    let { accountAddress, tronWeb, i18n } = this.props\r\n\r\n    if (!energyOn || !bandOn) {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.eResource\", { returnObjects: true })[0],\r\n        body: (<span>{i18n.t(\"ebot.alert.eResource\", { returnObjects: true })[1]}\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (av_energy.toNumber() < total_energy_pool * 0.005) {\r\n      energyOn = false;\r\n\r\n      if (recurso === \"energy\") {\r\n        this.setState({\r\n          titulo: <>{this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[0]}</>,\r\n          body: <> <img src=\"/images/alerts/recarge_energy.jpeg\" alt=\"Energy sold out\" style={{ borderRadius: \"15px\", width: \"100%\" }}></img> <br></br><br></br>{this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[1]}</>,\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n    }\r\n\r\n\r\n    if (av_band.toNumber() < total_bandwidth_pool * 0.005) {\r\n      bandOn = false;\r\n      if (recurso !== \"energy\") {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[1],\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n    }\r\n\r\n    let pagas = (await this.calcularRecurso()).toNumber()\r\n\r\n    if (isNaN(pagas)) {\r\n      this.setState({\r\n        titulo: \"Error\",\r\n        body: \"error to calculating price of resource\"\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n    if (wallet_orden === \"\" || !tronWeb.isAddress(wallet_orden)) {\r\n      this.setState({\r\n        wallet_orden: accountAddress\r\n      })\r\n    }\r\n\r\n    if (parseFloat(pagas) > new BigNumber(await tronWeb.trx.getBalance(accountAddress)).shiftedBy(-6).toNumber()) {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.noFounds\", { returnObjects: true })[0],\r\n        body: (<span>{i18n.t(\"ebot.alert.noFounds\", { returnObjects: true })[1]}\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (wallet_orden === \"\" || !tronWeb.isAddress(wallet_orden)) {\r\n      this.setState({\r\n        wallet_orden: accountAddress\r\n      })\r\n    }\r\n\r\n    if (wallet_orden === \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.eTronlink\", { returnObjects: true })[0],\r\n        body: (<span>\r\n          {i18n.t(\"ebot.alert.eTronlink\", { returnObjects: true })[1]}\r\n          <br ></br>\r\n          <button className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Ok</button>\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (recurso === \"energy\") {\r\n      if (cantidad > av_energy.toNumber()) {\r\n        this.setState({\r\n          titulo: \"Error\",\r\n          body: \"insufficient resources to cover this order try a lower value or try again later.\"\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n        return;\r\n      }\r\n    } else {\r\n      if (cantidad > av_band.toNumber()) {\r\n        this.setState({\r\n          titulo: \"Error\",\r\n          body: \"insufficient resources to cover this order try a lower value or try again later.\"\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    this.setState({\r\n      titulo: <>Confirm order information</>,\r\n      body: (<span>\r\n        <b>Buy: </b> {cantidad + \" \" + recurso + \" \" + periodo + temporalidad}<br></br>\r\n        <b>For: </b> {pagas} TRX<br></br>\r\n        <b>To: </b> {this.state.wallet_orden}<br></br>\r\n        <br ></br><br ></br>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-ebot\").modal(\"hide\") }}>Cancel <i className=\"bi bi-x-circle\"></i></button>\r\n        {\" \"}\r\n        <button type=\"button\" className=\"btn btn-success\" onClick={() => { this.compra(cantidad, periodo, temporalidad, recurso, wallet_orden, pagas) }}>Confirm <i className=\"bi bi-bag-check\"></i></button>\r\n      </span>)\r\n    })\r\n\r\n    window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n\r\n  }\r\n\r\n  async compra() {\r\n\r\n    let { cantidad, periodo, temporalidad, recurso, wallet_orden, precio } = this.state\r\n\r\n    const imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" ></img>\r\n\r\n    this.setState({\r\n      titulo: <>Confirm transaction {imgLoading}</>,\r\n      body: <>Please confirm the transaction from your wallet </>\r\n    })\r\n\r\n    window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    const unSignedTransaction = await this.props.tronWeb.transactionBuilder.sendTrx(process.env.REACT_APP_WALLET_API, this.props.tronWeb.toSun(precio), this.props.accountAddress);\r\n    // using adapter to sign the transaction\r\n    const signedTransaction = await window.tronWeb.trx.sign(unSignedTransaction)\r\n      .catch((e) => {\r\n        this.setState({\r\n          ModalTitulo: \"Transaction failed\",\r\n          ModalBody: <>{e.toString()}\r\n            <br ></br><br ></br>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>Close</button>\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false;\r\n      })\r\n\r\n    if (!signedTransaction) { return false; }\r\n\r\n    this.setState({\r\n      titulo: <>Your order is being processed {imgLoading}</>,\r\n      body: \"Wait while one of our robots attends to your recharge, we try to be as fast as possible.\"\r\n    })\r\n\r\n    let consulta2 = await utils.rentResource(wallet_orden, recurso, cantidad, periodo, temporalidad, precio, signedTransaction);\r\n\r\n    if (consulta2.result) {\r\n\r\n      this.setState({\r\n        titulo: \"Completed successfully\",\r\n        body: <>Energy rental completed successfully.<br ></br><br ></br> <button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-success\">Thank you!</button></>\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    } else {\r\n\r\n      console.log(consulta2)\r\n\r\n      this.setState({\r\n        titulo: \"Contact support\",\r\n        body: \"Support hash: \" + consulta2.hash + \" | \" + consulta2.msg\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    let { unitEnergyPrice, amounts, recurso, av_energy, av_band } = this.state\r\n    const amountButtons = amounts.map(amounts => <button key={\"Amb-\" + amounts.text} id=\"ra1\" type=\"button\" className=\"btn btn-primary\"\r\n      style={{ margin: \"auto\" }} onClick={() => { this.updateAmount(amounts.amount); this.estado() }}>{amounts.text}</button>)\r\n\r\n    let texto = <>Bandwidth Pool: {av_band.toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</>\r\n    let porcentaje = av_band.toNumber() * 100 / this.state.total_bandwidth_pool\r\n\r\n    if (recurso === \"energy\") {\r\n      texto = <>Energy Pool: {av_energy.toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</>\r\n      porcentaje = av_energy.toNumber() * 100 / this.state.total_energy_pool\r\n    }\r\n\r\n    if (isNaN(porcentaje)) porcentaje = 0\r\n\r\n\r\n    let medidor = (<>\r\n      <p className=\"font-14\">{texto} ({new BigNumber(porcentaje).dp(2).toString(10)}%)</p>\r\n      <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n        <div className=\"progress-bar\" role=\"progressbar\" style={{ \"width\": porcentaje + \"%\" }}\r\n          aria-valuenow={porcentaje} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n        </div>\r\n      </div></>)\r\n\r\nfunction capitalizarPrimeraLetra(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n\r\n    return (<>\r\n\r\n      <div className=\"row \">\r\n\r\n        <div className=\"col-md-12 text-center\">\r\n          <h1>{this.props.i18n.t(\"ebot.subTittle\")}</h1>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 col-sm-12\">\r\n          <div className=\"contact-box\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"mb-4\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <h4>Rental {this.state.recurso}</h4>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"d-flex justify-content-sm-end\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                          <button id=\"btnGroupDrop1\" type=\"button\"\r\n                            className=\"btn btn-primary dropdown-toggle\"\r\n                            data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Resource\r\n                          </button>\r\n                          <ul className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n                            <li onClick={async () => {\r\n                              await this.setState({\r\n                                cantidad: 32000,\r\n                                recurso: \"energy\",\r\n                                amounts: amountsE\r\n                              });\r\n\r\n                              this.updateAmount(32000)\r\n\r\n                              await this.estado();\r\n\r\n                            }}>\r\n                              <button className=\"dropdown-item\" >Energy</button>\r\n                            </li>\r\n\r\n                            <li onClick={async () => {\r\n                              await this.setState({\r\n                                cantidad: 1000,\r\n                                recurso: \"bandwidth\",\r\n                                amounts: amountB\r\n                              });\r\n                              this.updateAmount(1000);\r\n                              await this.estado();\r\n\r\n                            }}>\r\n                              <button className=\"dropdown-item\" >Bandwidth</button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <form className=\"dzForm\" method=\"\" action=\"\">\r\n                      <div className=\"dzFormMsg\"></div>\r\n                      <input type=\"hidden\" className=\"form-control\" name=\"dzToDo\" value=\"Contact\" ></input>\r\n                      {medidor}\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 d-flex justify-content-center align-items-center\">\r\n                        <p style={{ \"marginTop\": \"auto\", \"marginRight\": \"10px\" }} className=\"font-14\">Amount</p>\r\n                        <input style={{ \"textAlign\": \"end\", border: \"lightgray  solid\" }} id=\"amount\" name=\"dzLastName\" type=\"text\" onInput={() => this.calcularRecurso()} className=\"form-control mb-1\" placeholder={this.state.montoMin} ></input>\r\n\r\n                      </div>\r\n                      <div className=\"col-xl-12 mt-2 mb-2\">\r\n                        <div className=\"d-flex justify-content-xl-center\">\r\n                          {amountButtons}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 d-flex justify-content-center align-items-center\">\r\n                        <p style={{ \"marginTop\": \"auto\", \"marginRight\": \"10px\" }} className=\"font-14\">Duration</p>\r\n                        <input style={{ \"textAlign\": \"end\", border: \"lightgray  solid\", cursor: \"not-allowed\" }} id=\"periodo\" required type=\"text\" className=\"form-control mb-1\" onChange={this.handleChangePeriodo} placeholder={\"Default: 5m (five minutes)\"} defaultValue=\"5min\" readOnly></input>\r\n\r\n                      </div>\r\n                      <div className=\"col-12 mt-2 mb-2 \">\r\n                        <div className=\"d-flex justify-content-xl-center\">\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"5min\" } }) }}>5min</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"1h\" } }) }}>1h</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"1d\" } }) }}>1d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"3d\" } }) }}>3d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"7d\" } }) }}>7d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"14d\" } }) }}>14d</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 justify-content-center align-items-center\">\r\n                        {capitalizarPrimeraLetra(this.state.recurso)} Unit: {unitEnergyPrice.toString(10)} SUN<br></br>\r\n\r\n                        <button name=\"submit\" type=\"button\" value=\"Submit\"\r\n                          className=\"btn btn-secondary\"\r\n                          style={{ width: \"100%\", height: \"40px\", marginTop: \"5px\" }} onClick={() => this.preCompra()}> Complete Purchase - Total: {this.state.precio.toString(10)} TRX\r\n                        </button>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"col-xl-12 mb-3 mb-md-4\">\r\n                        <p className=\"font-14\">Send resources for another wallet</p>\r\n\r\n                        <input name=\"dzFirstName\" required type=\"text\"\r\n                          className=\"form-control\" placeholder={this.props.accountAddress} onChange={this.handleChangeWallet} ></input>\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 pt-4 mt-5 col-sm-12 m-b30\">\r\n          <div className=\"info-box text-center\">\r\n            <img src=\"images/ebot.png\" width=\"170px\" className=\"figure-img img-fluid rounded\" alt=\"resource rental energy\" ></img>\r\n\r\n            <div className=\"info\">\r\n              <p className=\"font-20\">In Brutus Energy Bot, we've developed a app for a faster and secure resource rental experience on the Tron network. <br></br> <br></br> Innovatively simplifying the process, we ensure efficient management at competitive prices. Explore further through our <a href=\"https://t.me/BRUTUS_energy_bot\">Telegram bot</a> or API for added accessibility. <br></br> <br></br>For additional information, reach out to us at <a href=\"mailto:support@brutus.finance\">support@brutus.finance</a></p>\r\n            </div>\r\n\r\n            <div className=\"widget widget_about\">\r\n              <div className=\"widget widget_getintuch\">\r\n              </div>\r\n            </div>\r\n            <div className=\"social-box dz-social-icon style-3\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>rental operator:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + process.env.REACT_APP_WALLET_API + \"/code\"}>{process.env.REACT_APP_WALLET_API}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div >\r\n\r\n      <div className=\"modal fade\" id=\"mensaje-ebot\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">{this.state.titulo}</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>{this.state.body}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nimport { TronWeb } from \"tronweb\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\n\r\nimport CsvDownloader from 'react-csv-downloader';\r\n\r\nconst env = process.env\r\n\r\nvar moment = require('moment-timezone');\r\nconst BigNumber = require('bignumber.js');\r\n\r\nexport default class ProviderPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      provider: false,\r\n      firma: false,\r\n      rent: false,\r\n      elegible: false,\r\n      sellband: false,\r\n      bandover: \"0\",\r\n      sellener: false,\r\n      enerover: \"0\",\r\n      burn: false,\r\n      noti: false,\r\n      autofreeze: \"off\",\r\n      paymenthour: \"Loading...\",\r\n      maxdays: \"Loading...\",\r\n      ongoins: [],\r\n      nexpayment: \"Loading...\",\r\n      payoutRatio: 0,\r\n      ratioEnergy: new BigNumber(0),\r\n      ratioEnergyPool: new BigNumber(0),\r\n      paymentPoints: 0,\r\n      voteSR: \"\",\r\n      newVoteSR: \"\",\r\n      proEnergyTotal: 0,\r\n      proEnergy: 0,\r\n      proBand: 0,\r\n      proBandTotal: 0,\r\n      noregist: [],\r\n      historic: [],\r\n      dataHistoric: [],\r\n      alturaGrafico: \"0px\",\r\n      tiempo: \"\",\r\n      payment: \"0\",\r\n      payhere: \">>>>>>>>>>>>>>>Loading<<<<<<<<<<<<<<<\",\r\n      payHere: \"*************************************\",\r\n      completed: [],\r\n      totalPayed30: \"Loading...\",\r\n      allPayed: \"Loading...\",\r\n      coin: \"Loading...\",\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.setConfig = this.setConfig.bind(this);\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.title = \"Provider Panel | Brutus.Finance\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"Provider Panel\")\r\n\r\n    function esDispositivoMovil() {\r\n      return /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n    }\r\n\r\n    if (esDispositivoMovil()) {\r\n      console.log(\"movil: true\")\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 3 * 1000)\r\n\r\n    setInterval(() => {\r\n      this.estado()\r\n    }, 20 * 1000)\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    const { accountAddress } = this.props\r\n\r\n    this.setState({\r\n      tiempo: moment.tz.guess(true)\r\n    })\r\n\r\n    let url = utils.apiProviders;\r\n\r\n    let provider = { result: false };\r\n\r\n    try {\r\n      provider = await fetch(url + \"provider?wallet=\" + accountAddress)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.setState({\r\n      provider: provider.result\r\n    })\r\n\r\n    let auth = false\r\n\r\n    if (provider.result && this.props.tronlink.adapter.connected) {\r\n\r\n      let firma = localStorage.getItem('firma-tron')\r\n      let fecha = new Date(Date.now())\r\n      let messge = \"https://brutus.finance - \" + fecha.getFullYear()\r\n\r\n      if ((firma === null || firma === undefined) || await window.tronWeb.trx.verifyMessageV2(messge, firma) !== this.props.tronlink.adapter.address) {\r\n        firma = await this.props.tronlink.adapter.signMessage(messge);\r\n        //cookies.set('firma-tron', firma, { maxAge: 86400 });\r\n\r\n        localStorage.setItem('firma-tron', firma);\r\n      } else {\r\n        firma = localStorage.getItem('firma-tron')\r\n      }\r\n\r\n      try {\r\n        if (await window.tronWeb.trx.verifyMessageV2(messge, firma) === this.props.tronlink.adapter.address) {\r\n          auth = true\r\n        } else {\r\n          auth = false\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n        auth = true\r\n      }\r\n\r\n      this.setState({ firma: auth })\r\n\r\n      if (firma !== undefined && auth) {\r\n\r\n        let info = {}\r\n\r\n        try {\r\n\r\n          info = await fetch(url + \"status?wallet=\" + accountAddress)\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n        console.log(info)\r\n\r\n        let naranja = new BigNumber((info.ratio_e - info.ratio_e_pool) * 100).dp(3).toNumber()\r\n\r\n        if (naranja >= 0) {\r\n          naranja = \"+\" + naranja\r\n        }\r\n\r\n        info.naranja = naranja\r\n\r\n        if (info.freez) {\r\n          info.freez = (info.freez).toLowerCase()\r\n\r\n        }\r\n\r\n        if (info.freez === \"no\") {\r\n          info.freez = \"Off\"\r\n\r\n        }\r\n\r\n\r\n        let cuenta = await this.props.tronWeb.trx.getAccountResources(accountAddress);\r\n\r\n        let providerEnergy = 0\r\n        let providerEnergyTotal = 0\r\n\r\n        let providerBand = 0\r\n        let providerBandTotal = 0\r\n\r\n\r\n        if (cuenta.EnergyLimit) {\r\n          providerEnergy = cuenta.EnergyLimit\r\n          providerEnergyTotal = cuenta.EnergyLimit\r\n        }\r\n\r\n        if (cuenta.EnergyUsed) {\r\n          providerEnergy -= cuenta.EnergyUsed\r\n        }\r\n\r\n        if (cuenta.freeNetLimit) {\r\n          providerBandTotal = cuenta.freeNetLimit\r\n        }\r\n\r\n        if (cuenta.NetLimit) {\r\n          providerBandTotal += cuenta.NetLimit\r\n        }\r\n\r\n        providerBand = providerBandTotal\r\n\r\n        if (cuenta.freeNetUsed) {\r\n          providerBand -= cuenta.freeNetUsed\r\n\r\n        }\r\n\r\n        if (cuenta.NetUsed) {\r\n          providerBand -= cuenta.NetUsed\r\n        }\r\n\r\n        if (info.allow_notifications === 1) {\r\n          info.allow_notifications = true\r\n        } else {\r\n          info.allow_notifications = false\r\n\r\n        }\r\n\r\n        let sellener = false\r\n\r\n        if (info.energyover > 0) {\r\n          sellener = true\r\n        }\r\n\r\n        info.coin = info.currency\r\n\r\n        console.log(info)\r\n\r\n        this.setState({\r\n          ...info,\r\n          rent: info.activo,\r\n          sellener: sellener,\r\n          enerover: info.energyover,\r\n          noti: info.allow_notifications,\r\n          autofreeze: info.freez,\r\n          paymentPoints: info.payout_ratio * 100,\r\n          payoutRatio: info.payout_ratio,\r\n          ratioEnergy: new BigNumber(info.ratio_e * 100),\r\n          ratioEnergyPool: new BigNumber(info.ratio_e_pool * 100),\r\n          cNaranja: naranja,\r\n          voteSR: info.srVote,\r\n          proEnergy: providerEnergy,\r\n          proEnergyTotal: providerEnergyTotal,\r\n\r\n          proBand: providerBand,\r\n          proBandTotal: providerBandTotal,\r\n\r\n        })\r\n\r\n        let allPayed = await fetch(url + \"acum_payments\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.data;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return 0\r\n          })\r\n\r\n        allPayed = (new BigNumber(allPayed).dp(3).toNumber()).toLocaleString('en-US')\r\n        this.setState({ allPayed: allPayed })\r\n\r\n\r\n        let dataHistoric = await fetch(url + \"historic_payments\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.data;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n        let totalPayed30 = new BigNumber(0)\r\n\r\n        dataHistoric = dataHistoric.map((item, index) => {\r\n          totalPayed30 = totalPayed30.plus(item.amount)\r\n\r\n          return { index, date: moment.utc(item.date * 1000).tz(this.state.tiempo).format(\"lll\"), amount: new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber(), coin: item.coin }\r\n        })\r\n\r\n        this.setState({\r\n          dataHistoric,\r\n          totalPayed30: (totalPayed30.shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US') + \" TRX\"\r\n        })\r\n\r\n        let ongoins = await fetch(url + \"ongoingdeals\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.ongoing_deals;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n\r\n        let listWallets = []\r\n\r\n        ongoins = ongoins.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          item.lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            item.lock = \"unlock\"\r\n          } else {\r\n            item.lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          item.confirm = moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.unfreeze = moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.time = item.confirm+\" -> \"+item.unfreeze\r\n\r\n          return { index, ...item }\r\n\r\n        });\r\n\r\n\r\n        let completed = await fetch(url + \"completed_deals\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.completed_deals;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n\r\n        completed = completed.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          item.lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            item.lock = \"unlock\"\r\n          } else {\r\n            item.lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          item.confirm = moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.unfreeze = moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.time = item.confirm+\" -> \"+item.unfreeze\r\n          return { index, ...item }\r\n\r\n        });\r\n\r\n\r\n        const delegationInfo = await this.props.tronWeb.trx.getDelegatedResourceAccountIndexV2(accountAddress)\r\n\r\n        let noregist = []\r\n\r\n        if (delegationInfo.toAccounts) {\r\n\r\n          for (let index = 0; index < delegationInfo.toAccounts.length; index++) {\r\n            delegationInfo.toAccounts[index] = this.props.tronWeb.address.fromHex(delegationInfo.toAccounts[index])\r\n\r\n            if (listWallets.indexOf(delegationInfo.toAccounts[index]) === -1) {\r\n              let info = await this.props.tronWeb.trx.getDelegatedResourceV2(accountAddress, delegationInfo.toAccounts[index])\r\n\r\n              //console.log(info.delegatedResource)\r\n\r\n              for (let index2 = 0; index2 < info.delegatedResource.length; index2++) {\r\n\r\n                let order = {\r\n                  wallet: delegationInfo.toAccounts[index],\r\n                  resource: \"ENERGY\",\r\n                  trx: 0,\r\n                  sun: \"0\",\r\n                  expire: \"--/--/-- 00:00 --\",\r\n                  ownerAddress: accountAddress\r\n                }\r\n\r\n                if (info.delegatedResource[index2].frozen_balance_for_energy) {\r\n\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_energy / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_energy\r\n                  if (info.delegatedResource[index2].expire_time_for_energy) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_energy)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n                  }\r\n                } else {\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_bandwidth / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_bandwidth\r\n                  if (info.delegatedResource[index2].expire_time_for_bandwidth) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_bandwidth)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n\r\n                  }\r\n\r\n\r\n                  order.resource = \"BANDWIDTH\"\r\n                }\r\n\r\n\r\n                noregist.push(order)\r\n\r\n\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        this.setState({\r\n          ongoins,\r\n          completed,\r\n          noregist,\r\n\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async handleChange(event) {\r\n\r\n    let elemento = event.target\r\n\r\n    //console.log(elemento.id)\r\n\r\n    switch (elemento.id) {\r\n      case \"rent\":\r\n\r\n        if (elemento.value !== this.state.rent) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = 1\r\n          if (this.state.rent) {\r\n            activate = 0\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, active: activate }\r\n            fetch(utils.apiProviders + \"set/active\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            rent: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"band\":\r\n\r\n        if (elemento.value !== this.state.sellband) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let over = 0\r\n          let activate = \"0\"\r\n          if (!this.state.sellband) {\r\n            activate = \"1\"\r\n            over = parseInt(prompt(\"sell band over, leave \", this.state.bandover))\r\n\r\n            console.log(over)\r\n            if (!isNaN(over)) {\r\n              let body = { wallet: this.props.accountAddress, sellbandover: over }\r\n\r\n              fetch(utils.apiProviders + \"set/sellbandover\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  'token-api': process.env.REACT_APP_TOKEN,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n              })\r\n            }\r\n\r\n\r\n          }\r\n          // activar renta\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, sellband: activate }\r\n            fetch(utils.apiProviders + \"set/sellband\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"ener\":\r\n\r\n        if (elemento.value !== this.state.sellener) {\r\n\r\n          let over = 0\r\n          if (!this.state.sellener) {\r\n            over = parseInt(prompt(\"sell energy over, leave \", 32000))\r\n\r\n          }\r\n\r\n          //console.log(over)\r\n\r\n          if (!isNaN(over)) {\r\n            let body = { wallet: this.props.accountAddress, sellenergyover: over }\r\n\r\n            fetch(utils.apiProviders + \"set/sellenergyover\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n          }\r\n\r\n\r\n\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"burn\":\r\n\r\n        if (elemento.value !== this.state.burn) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.burn) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, burn: activate }\r\n            fetch(utils.apiProviders + \"set/burn\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          //console.log(elemento.value)\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n\r\n          this.setState({\r\n            burn: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"voteSR\":\r\n\r\n        this.setState({\r\n          newVoteSR: elemento.value\r\n        })\r\n\r\n        break;\r\n\r\n      case \"noti\":\r\n\r\n        if (elemento.value !== this.state.noti) {\r\n          //alert(\"diferentes: \" + this.state.noti) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.noti) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, allow_notifications: activate }\r\n            fetch(utils.apiProviders + \"set/allow_notifications\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            noti: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async grafico(external_data) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    const root = am5.Root.new(\"chartdiv\");\r\n    root._logo.dispose();\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    // Define data\r\n    let data = [{\r\n      date: new Date(1712953610 * 1000),\r\n      amount: 1000,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712780810 * 1000),\r\n      amount: 1300,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 1200,\r\n      coin: \"trx\"\r\n    },\r\n    {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 250,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712521610 * 1000),\r\n      amount: 200,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712435210 * 1000),\r\n      amount: 500,\r\n      coin: \"brst\"\r\n    }];\r\n\r\n    data = external_data\r\n\r\n    // Create Y-axis\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        categoryField: \"date\"\r\n      })\r\n    );\r\n    xAxis.data.setAll(data);\r\n\r\n    // Create series\r\n\r\n    let series1 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"TRX\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"amount\",\r\n        categoryXField: \"date\",\r\n        fill: am5.color(0x7135ff),\r\n        stroke: am5.color(0x7135ff)\r\n      })\r\n    );\r\n    series1.data.setAll(data);\r\n\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  async setConfig(target, info) {\r\n    const { accountAddress } = this.props\r\n    let { ModalTitulo, ModalBody } = this.state\r\n\r\n    let msg = false\r\n\r\n    async function setFreez(data) {\r\n      try {\r\n        let body = { wallet: accountAddress, autofreeze: data }\r\n        await fetch(utils.apiProviders + \"set/autofreeze\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setPaymentHour(hour) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, paymenthour: hour }\r\n        let consulta = await fetch(utils.apiProviders + \"set/paymenthour\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        }).then((r) => r.json())\r\n\r\n        if (!consulta.result && consulta.data) {\r\n\r\n          msg = true\r\n          ModalTitulo = \"Operation not executed\"\r\n          ModalBody = consulta.data\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setMaxDays(days) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, maxdays: days }\r\n        await fetch(utils.apiProviders + \"set/maxdays\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setWalletSr(wallet) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, sr: wallet }\r\n        await fetch(utils.apiProviders + \"set/sr\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setCoin(coin) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, currency: coin.toUpperCase() }\r\n        let consulta = await fetch(utils.apiProviders + \"set/change_currency\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        }).then((r) => r.json())\r\n\r\n        console.log(consulta)\r\n\r\n        if (consulta.result) {\r\n          if (consulta.data.msg) {\r\n            msg = true\r\n            ModalTitulo = \"Operation Alert\"\r\n            ModalBody = consulta.data.msg\r\n          }\r\n\r\n        } else {\r\n\r\n          msg = true\r\n          ModalTitulo = \"Operation not executed\"\r\n          ModalBody = consulta.data\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    switch (target) {\r\n      case \"setFreez\":\r\n        await setFreez(info)\r\n        break;\r\n\r\n      case \"setPaymentHour\":\r\n        await setPaymentHour(info)\r\n        break;\r\n\r\n      case \"setMaxDays\":\r\n        await setMaxDays(info)\r\n        break;\r\n\r\n      case \"setWalletSr\":\r\n        await setWalletSr(info)\r\n        break;\r\n\r\n      case \"setCoin\":\r\n        await setCoin(info)\r\n        break;\r\n\r\n      default:\r\n        alert(\"no asigned\")\r\n        break;\r\n    }\r\n\r\n    if (msg) {\r\n      this.setState({\r\n        ModalTitulo,\r\n        ModalBody\r\n      })\r\n      window.$(\"#alert\").modal(\"show\");\r\n    }\r\n\r\n\r\n    this.estado();\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    let { provider, firma, autofreeze, coin, dataHistoric } = this.state\r\n\r\n    if (provider) {\r\n\r\n      if (!firma) {\r\n\r\n        return (<>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card exchange\">\r\n                      <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n                        <h2 className=\"heading\">Status: you are a provider</h2>\r\n\r\n                        <p>\r\n                          <button className=\"btn btn-warning\" onClick={() => this.estado()}>Login</button>\r\n                        </p>\r\n\r\n                        <p>There seems to be problems when performing signature verification please contact support</p>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </>);\r\n\r\n      } else {\r\n\r\n\r\n        let estatus = <button className=\"btn btn-outline-danger btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-sign-stop-fill\"></i> Stopped</button>\r\n\r\n        if (this.state.rent) {\r\n\r\n          estatus = <button className=\"btn btn-outline-info btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-arrow-clockwise\"></i> Recharging</button>\r\n\r\n          if (this.state.elegible) {\r\n            estatus = <button className=\"btn btn-outline-success btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-check-circle-fill\"></i> Active</button>\r\n          }\r\n\r\n        }\r\n\r\n\r\n        let campoFreeze = <></>\r\n\r\n        if (autofreeze !== \"Off\") {\r\n\r\n          campoFreeze = <div className=\"container mt-1\">\r\n            <div className=\"row mt-1\">\r\n              <div className=\"col-12\">Wallet of SR to vote (default: Brutus)</div>\r\n              <div className=\"col-11\">\r\n                <input type=\"text\" className=\"form-control\" id=\"voteSR\" style={{ borderColor: \"#c3c3c3\" }} placeholder={this.state.voteSR} onChange={this.handleChange} disabled={false} ></input>\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <i className=\"bi bi-question-circle-fill\" title=\"You can set by which super representative wallet the automatic votes will be made\" onClick={() => {\r\n\r\n                  this.setState({\r\n                    ModalTitulo: \"Info\",\r\n                    ModalBody: \"You can set by which super representative wallet the automatic votes will be made\"\r\n                  })\r\n\r\n                  window.$(\"#alert\").modal(\"show\");\r\n                }}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          if (this.state.voteSR !== \"\" && TronWeb.isAddress(this.state.newVoteSR) && this.state.voteSR !== this.state.newVoteSR) {\r\n\r\n            campoFreeze = (<>\r\n              {campoFreeze}\r\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => {\r\n                this.setWalletSr(this.state.newVoteSR)\r\n              }}>Update Wallet to Vote</button>\r\n\r\n            </>)\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return (<>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-8 col-sm-12\">\r\n                    <div className=\"card exchange\">\r\n                      <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n\r\n\r\n                        <div className=\"container-fluid\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-sm-12 mb-2 text-center\">\r\n                              <img height=\"15px\" src=\"images/energy.png\" alt=\"\" ></img> Energy ({(this.state.proEnergy).toLocaleString('en-US')}/{(this.state.proEnergyTotal).toLocaleString(\"en-us\")})\r\n                              <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                                <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{ \"width\": ((this.state.proEnergy / this.state.proEnergyTotal) * 100) + \"%\" }}\r\n                                  aria-valuenow={(this.state.proEnergy / this.state.proEnergyTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-sm-12 mb-2 text-center\">\r\n                              <span role=\"img\">{\"🌐\"}</span> Bandwidth ({(this.state.proBand).toLocaleString(\"en-us\")}/{(this.state.proBandTotal).toLocaleString(\"en-us\")})\r\n                              <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                                <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ \"width\": ((this.state.proBand / this.state.proBandTotal) * 100) + \"%\" }}\r\n                                  aria-valuenow={(this.state.proBand / this.state.proBandTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\">{estatus} </h2>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\"><button type=\"button\" className=\"btn btn-outline-warning btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><img height=\"15px\" src=\"images/naranja.png\" alt=\"\" ></img> {this.state.ratioEnergy.dp(3).toString(10)} /  {this.state.ratioEnergyPool.dp(3).toString(10)} </button></h2>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\"><button className=\"btn btn-outline-secondary btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}> <span role=\"img\" aria-label=\"$\">💲</span> Payout %{this.state.paymentPoints} </button></h2>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Pay hour: {this.state.payhour} GMT</button> {\"  \"} <span role=\"img\"><i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Set the time you want to receive your daily payments\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></span>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"130\")}>1:30 GMT</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"930\")}>9:30 GMT</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"1730\")}>17:30 GMT</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Coin: {coin} </button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Set the time you want to receive your daily payments\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"trx\")}>TRX</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"usdd\")}>USDD</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"usdt\")}>USDT</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu2\">Max Days: {this.state.maxdays}</button> <i className=\"bi bi-question-circle-fill\" title=\"Establish the max. duration of the orders you want to accept\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Establish the max. duration of the orders you want to accept\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu2\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", '1h')}>1h</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 3)} >3 days</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 7)}>7 days</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 14)}>14 days</button>\r\n                              </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\" >\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu\" >Autofreeze: {this.state.autofreeze}</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"no\")}>Off</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"bandwidth\")}>Bandwidth</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"energy\")}>Energy</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                              {campoFreeze}\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \">\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"rent\" style={{ backgroundColor: this.state.rent ? \"#9568FF\" : \"lightgray\" }} checked={this.state.rent} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Rent <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume the bot\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Pause/Resume the bot\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \" style={{ textAlign: \"center\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"burn\" style={{ backgroundColor: this.state.burn ? \"#9568FF\" : \"lightgray\" }} checked={this.state.burn} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Burn <i className=\"bi bi-question-circle-fill\" title=\"Allow TRX burn to accept new orders when you run out of bandwidth\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Allow TRX burn to accept new orders when you run out of bandwidth\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \" style={{ textAlign: \"right\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"noti\" style={{ backgroundColor: this.state.noti ? \"#9568FF\" : \"lightgray\" }} checked={this.state.noti} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Notify <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume notifications from the telegram bot\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Pause/Resume notifications from the telegram bot\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-6  \">\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"band\" style={{ backgroundColor: this.state.sellband ? \"#9568FF\" : \"lightgray\" }} checked={this.state.sellband} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Band over: <br></br>{(this.state.bandover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked bandwidth over the amount you establish\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Sell your staked bandwidth over the amount you establish\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-6 \" style={{ textAlign: \"right\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"ener\" style={{ backgroundColor: this.state.sellener ? \"#9568FF\" : \"lightgray\" }} checked={this.state.sellener} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Energy over: <br></br> {(this.state.enerover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked energy over the amount you establish\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Sell your staked energy over the amount you establish\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-sm-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header border-0 pb-0\">\r\n                        <h2 className=\"heading mb-0 m-auto\">Next Payment</h2>\r\n                      </div>\r\n                      <div className=\"card-body text-center pt-3\">\r\n                        <div className=\"mt-1\">Hour {this.state.payhour} GMT</div>\r\n                        <hr></hr>\r\n                        <div className=\"count-num mt-1\">{(this.state.payment).toLocaleString(\"en-US\")} TRX</div>\r\n                        <hr></hr>\r\n\r\n                        <div className=\"mt-1\">that will be paid here:<br></br> <u onMouseEnter={() => { this.setState({ payHere: this.state.payhere }) }} onMouseLeave={() => { this.setState({ payHere: \"*************************************\" }) }}>{this.state.payHere}</u></div>\r\n\r\n                        <hr></hr>\r\n\r\n                        <div className=\"mt-1\">\r\n                          Total earned all time:<br></br>\r\n                          <b>{this.state.allPayed} TRX</b> <br></br>\r\n                          <button className=\"btn btn-danger\" onClick={() => { localStorage.removeItem(\"firma-tron\"); this.setState({ firma: false }) }}>LogOut <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\r\n                            <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z\" />\r\n                            <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z\" />\r\n                          </svg></button>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">last {dataHistoric.length} payments = {this.state.totalPayed30}</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-8 col-sm-12\">\r\n                            <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                              <table className=\"table verticle-middle table-responsive-md \" >\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th scope=\"col\" style={{ textAlign: \"right\" }}>Amount</th>\r\n                                    <th scope=\"col\">Currency</th>\r\n                                    <th scope=\"col\">Date</th>\r\n\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {\r\n                                    dataHistoric.toReversed().map((item, index) => {\r\n\r\n                                      return (\r\n                                        <tr key={index}>\r\n                                          <td align=\"right\">{(item.amount).toLocaleString('en-US')}\r\n                                          </td>\r\n                                          <td>{item.coin}</td>\r\n                                          <td>{item.date}</td>\r\n\r\n                                        </tr>\r\n                                      )\r\n                                    })\r\n                                  }\r\n\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12\">\r\n                            <div className=\"mb-3\" id=\"chartdiv\" style={{ height: this.state.alturaGrafico, backgroundColor: \"white\" }}></div>\r\n                            <button className=\"btn btn-success\" onClick={() => { if (this.state.alturaGrafico === \"0px\") { this.setState({ alturaGrafico: \"350px\" }); this.grafico(this.state.dataHistoric) } else { this.setState({ alturaGrafico: \"0px\" }); this.root.dispose(); } }}>Graphic (Open / Close)</button>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"Last_30_payments\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'amount',\r\n                            displayName: 'Amount'\r\n                          }, {\r\n                            id: 'coin',\r\n                            displayName: 'Currency'\r\n                          }, {\r\n                            id: 'date',\r\n                            displayName: 'Date'\r\n                          }]}\r\n                          datas={dataHistoric}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Ongoing deals ({this.state.ongoins.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md \" >\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">Resource / Period</th>\r\n                                <th scope=\"col\">Buyer / Time</th>\r\n                                <th scope=\"col\">Payout</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.ongoins.map((item) => {\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + item.lock + \"-fill\"}></i></td>\r\n                                    <td>{item.customer}<br ></br>\r\n                                      {item.confirm}{\" -> \"}{item.unfreeze}<br ></br>\r\n\r\n                                    </td>\r\n                                    <td>{item.payout} TRX</td>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n\r\n                              }\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"ongoing_deals\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'resource',\r\n                            displayName: 'Resource'\r\n                          }, {\r\n                            id: 'order_type',\r\n                            displayName: 'Period'\r\n                          }, {\r\n                            id: 'customer',\r\n                            displayName: 'Buyer'\r\n                          }, {\r\n                            id: 'time',\r\n                            displayName: 'Time'\r\n                          }, {\r\n                            id: 'payout',\r\n                            displayName: 'Payout'\r\n                          }]}\r\n                          datas={this.state.ongoins}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Completed deals ({this.state.completed.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md \" >\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">Resource / Period</th>\r\n                                <th scope=\"col\">Buyer / Time</th>\r\n                                <th scope=\"col\">Payout</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.completed.map((item) => {\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + item.lock + \"-fill\"}></i></td>\r\n                                    <td>{item.customer}<br ></br>\r\n                                      {item.confirm}{\" -> \"}{item.unfreeze}<br ></br>\r\n\r\n                                    </td>\r\n                                    <td>{item.payout} TRX</td>\r\n                                  </tr>\r\n                                )\r\n                              })}\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"completed_deals\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'resource',\r\n                            displayName: 'Resource'\r\n                          }, {\r\n                            id: 'order_type',\r\n                            displayName: 'Period'\r\n                          }, {\r\n                            id: 'customer',\r\n                            displayName: 'Buyer'\r\n                          }, {\r\n                            id: 'time',\r\n                            displayName: 'Time'\r\n                          }, {\r\n                            id: 'payout',\r\n                            displayName: 'Payout'\r\n                          }]}\r\n                          datas={this.state.completed}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Other delegations ({this.state.noregist.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\"></th>\r\n\r\n                                <th scope=\"col\">Resource</th>\r\n                                <th scope=\"col\">TRX</th>\r\n                                <th scope=\"col\">Wallet / Expire Time</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.noregist.map((item)=>{\r\n                                let amount = item.sun;\r\n                                let receiverAddress = item.wallet;\r\n                                let resource = item.resource;\r\n                                let ownerAddress = item.ownerAddress;\r\n\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td className=\"text-end\">\r\n                                      <div className=\"dropdown custom-dropdown mb-0\">\r\n                                        <div className=\"btn sharp btn-primary tp-btn\" data-bs-toggle=\"dropdown\">\r\n                                          <i className=\"bi bi-three-dots-vertical\"></i>\r\n                                        </div>\r\n                                        <div className=\"dropdown-menu dropdown-menu-end\">\r\n                                          <a className=\"dropdown-item text-info\" href=\"https://tronscan.org/#/wallet/resources\" target=\"_blank\" rel=\"noopener noreferrer\">View on TronScan</a>\r\n                      \r\n                                          <button className=\"dropdown-item text-danger\" onClick={async () => {\r\n                                            let transaction = await this.props.tronWeb.transactionBuilder.undelegateResource(amount, receiverAddress, resource, ownerAddress);\r\n                                            transaction = await window.tronWeb.trx.sign(transaction)\r\n                                            transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n                      \r\n                                            this.setState({\r\n                                              ModalTitulo: \"Result: \" + transaction.result,\r\n                                              ModalBody: <a className=\"btn btn-primary\" href={\"https://tronscan.org/#/transaction/\" + transaction.txid} target=\"_blank\" rel=\"noopener noreferrer\">see result in TronScan</a>\r\n                                            })\r\n                      \r\n                                            window.$(\"#alert\").modal(\"show\");\r\n                                            this.estado();\r\n                      \r\n                                          }}>Reclaim Resource</button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>{item.resource} </td>\r\n                                    <td>{(item.trx).toLocaleString('en-US')} </td>\r\n                      \r\n                                    <td>{item.wallet}<br ></br>\r\n                                      {item.expire}\r\n                                    </td>\r\n                      \r\n                                  </tr>\r\n                                )\r\n                              })}\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n\r\n          <div className=\"modal fade\" id=\"alert\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p>{this.state.ModalBody}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </>);\r\n      }\r\n    } else {\r\n\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n                      <h2 className=\"heading\">Ready for rent your energy</h2>\r\n\r\n                      <p>\r\n                        You are not a supplier? if you want to become one read the following article <br></br>\r\n                        <a className=\"btn btn-primary\" href=\"https://brutus.finance/brutusprovider.html\">Become a supplier</a>\r\n                      </p>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>);\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Cookies from 'universal-cookie';\r\nimport utils from \"../utils\";\r\n\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\n\r\nvar moment = require('moment-timezone');\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst cookies = new Cookies(null, { path: '/' });\r\n\r\nexport default class ProviderPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      provider: false,\r\n      rent: false,\r\n      elegible: false,\r\n      sellband: false,\r\n      bandover: \"0\",\r\n      burn: false,\r\n      noti: false,\r\n      autofreeze: \"off\",\r\n      paymenthour: \"Loading...\",\r\n      maxdays: \"Loading...\",\r\n      ongoins: [],\r\n      nexpayment: \"Loading...\",\r\n      payoutRatio: 0,\r\n      ratioEnergy: 0,\r\n      ratioEnergyPool: 0,\r\n      paymentPoints: 0,\r\n      voteSR: \"\",\r\n      newVoteSR: \"\",\r\n      proEnergyTotal: 0,\r\n      proEnergy: 0,\r\n      proBand: 0,\r\n      proBandTotal: 0,\r\n      noregist: [],\r\n      historic: [],\r\n      dataHistoric: [],\r\n      alturaGrafico: \"0px\",\r\n      tiempo: \"\",\r\n      payment: \"0\",\r\n      completed: [],\r\n      totalPayed30: \"Loading...\",\r\n      allPayed: \"Loading...\"\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setPaymentHour = this.setPaymentHour.bind(this);\r\n    this.setMaxDays = this.setMaxDays.bind(this);\r\n    this.setFreez = this.setFreez.bind(this);\r\n    this.setWalletSr = this.setWalletSr.bind(this);\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.title = \"B.F | Provider Panel\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"Provider Panel\")\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 3 * 1000)\r\n\r\n    setInterval(() => {\r\n      this.estado()\r\n    }, 30 * 1000)\r\n\r\n\r\n  }\r\n\r\n\r\n  async handleChange(event) {\r\n\r\n    let elemento = event.target\r\n\r\n    //console.log(elemento.id)\r\n\r\n    switch (elemento.id) {\r\n      case \"rent\":\r\n\r\n        if (elemento.value !== this.state.rent) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = 1\r\n          if (this.state.rent) {\r\n            activate = 0\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, active: activate }\r\n            fetch(utils.apiProviders + \"set/active\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            rent: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"band\":\r\n\r\n        if (elemento.value !== this.state.sellband) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let over = 0\r\n          let activate = \"0\"\r\n          if (!this.state.sellband) {\r\n            activate = \"1\"\r\n            over = parseInt(prompt(\"sell band over, leave \", this.state.bandover))\r\n\r\n            console.log(over)\r\n            let body = { wallet: this.props.accountAddress, sellbandover: over }\r\n\r\n            fetch(utils.apiProviders + \"set/sellbandover\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n          }\r\n          // activar renta\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, sellband: activate }\r\n            fetch(utils.apiProviders + \"set/sellband\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"burn\":\r\n\r\n        if (elemento.value !== this.state.burn) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.burn) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, burn: activate }\r\n            fetch(utils.apiProviders + \"set/burn\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          //console.log(elemento.value)\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n\r\n          this.setState({\r\n            burn: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"voteSR\":\r\n\r\n        this.setState({\r\n          newVoteSR: elemento.value\r\n        })\r\n\r\n        break;\r\n\r\n      case \"noti\":\r\n\r\n        if (elemento.value !== this.state.noti) {\r\n          //alert(\"diferentes: \" + this.state.noti) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.noti) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, allow_notifications: activate }\r\n            fetch(utils.apiProviders + \"set/allow_notifications\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            noti: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async grafico(external_data) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    const root = am5.Root.new(\"chartdiv\");\r\n    root._logo.dispose();\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    // Define data\r\n    let data = [{\r\n      date: new Date(1712953610 * 1000),\r\n      amount: 1000,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712780810 * 1000),\r\n      amount: 1300,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 1200,\r\n      coin: \"trx\"\r\n    },\r\n    {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 250,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712521610 * 1000),\r\n      amount: 200,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712435210 * 1000),\r\n      amount: 500,\r\n      coin: \"brst\"\r\n    }];\r\n\r\n    data = external_data\r\n\r\n    // Create Y-axis\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        categoryField: \"date\"\r\n      })\r\n    );\r\n    xAxis.data.setAll(data);\r\n\r\n    // Create series\r\n\r\n    let series1 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"TRX\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"amount\",\r\n        categoryXField: \"date\",\r\n        fill: am5.color(0x7135ff),\r\n        stroke: am5.color(0x7135ff)\r\n      })\r\n    );\r\n    series1.data.setAll(data);\r\n\r\n\r\n    // Create series\r\n    /*\r\n    let series2 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"Payed in BRST\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        categoryXField: \"date\"\r\n      })\r\n    );\r\n    series2.data.setAll(data);\r\n*/\r\n\r\n    // Add legend\r\n    /*\r\n    let legend = chart.children.push(am5.Legend.new(root, {}));\r\n    legend.data.setAll(chart.series.values);\r\n    */\r\n\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  async setFreez(data) {\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, autofreeze: data }\r\n      await fetch(utils.apiProviders + \"set/autofreeze\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setPaymentHour(hour) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, paymenthour: hour }\r\n      await fetch(utils.apiProviders + \"set/paymenthour\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setMaxDays(days) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, maxdays: days }\r\n      await fetch(utils.apiProviders + \"set/maxdays\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setWalletSr(wallet) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, sr: wallet }\r\n      await fetch(utils.apiProviders + \"set/sr\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n  }\r\n\r\n  async estado() {\r\n\r\n    this.setState({\r\n      tiempo: moment.tz.guess(true)\r\n    })\r\n\r\n    var url = utils.apiProviders;\r\n\r\n    let provider = { result: false };\r\n\r\n    try {\r\n      provider = await fetch(url + \"provider?wallet=\" + this.props.accountAddress)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    //firmar mensaje brutus.finance->\r\n    //console.log(this.props.tronlink.adapter)\r\n\r\n    if (provider.result && this.props.tronlink.adapter.connected) {\r\n\r\n      let firma = await cookies.get('firma-tron')\r\n      let messge = \"brutus.finance 2024\"\r\n\r\n      if (firma === undefined) {\r\n        firma = await this.props.tronlink.adapter.signMessage(messge);\r\n        cookies.set('firma-tron', firma, { maxAge: 86400 });\r\n      } else {\r\n        firma = await cookies.get('firma-tron');\r\n      }\r\n\r\n      let auth = false\r\n      try {\r\n        if (await window.tronWeb.trx.verifyMessageV2(messge, firma) === this.props.tronlink.adapter.address || firma) {\r\n          auth = true\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n      if (firma !== undefined && auth) {\r\n\r\n        this.setState({\r\n          provider: true,\r\n        })\r\n\r\n        let info = {}\r\n\r\n        try {\r\n\r\n          info = await fetch(url + \"status?wallet=\" + this.props.accountAddress)\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n        let naranja = new BigNumber((info.ratio_e - info.ratio_e_pool) * 100).dp(3).toNumber()\r\n\r\n        if (naranja >= 0) {\r\n          naranja = \"+\" + naranja\r\n        }\r\n\r\n        if (info.freez) {\r\n          info.freez = (info.freez).toLowerCase()\r\n\r\n        }\r\n\r\n        if (info.freez === \"no\") {\r\n          info.freez = \"Off\"\r\n\r\n        }\r\n\r\n\r\n        var cuenta = await this.props.tronWeb.trx.getAccountResources(this.props.accountAddress);\r\n\r\n\r\n        var providerEnergy = 0\r\n        var providerEnergyTotal = 0\r\n\r\n        var providerBand = 0\r\n        var providerBandTotal = 0\r\n\r\n\r\n        if (cuenta.EnergyLimit) {\r\n          providerEnergy = cuenta.EnergyLimit\r\n          providerEnergyTotal = cuenta.EnergyLimit\r\n        }\r\n\r\n        if (cuenta.EnergyUsed) {\r\n          providerEnergy -= cuenta.EnergyUsed\r\n        }\r\n\r\n        if (cuenta.freeNetLimit) {\r\n          providerBandTotal = cuenta.freeNetLimit\r\n        }\r\n\r\n        if (cuenta.NetLimit) {\r\n          providerBandTotal += cuenta.NetLimit\r\n        }\r\n\r\n        providerBand = providerBandTotal\r\n\r\n        if (cuenta.freeNetUsed) {\r\n          providerBand -= cuenta.freeNetUsed\r\n\r\n        }\r\n\r\n        if (cuenta.NetUsed) {\r\n          providerBand -= cuenta.NetUsed\r\n        }\r\n\r\n        if (info.allow_notifications === 1) {\r\n          info.allow_notifications = true\r\n        } else {\r\n          info.allow_notifications = false\r\n\r\n        }\r\n\r\n        this.setState({\r\n          rent: info.activo,\r\n          elegible: info.elegible,\r\n          sellband: info.sellband,\r\n          bandover: info.bandover,\r\n          burn: info.burn,\r\n          noti: info.allow_notifications,\r\n          autofreeze: info.freez,\r\n          payhour: info.payhour,\r\n          payment: info.payment,\r\n          paymentPoints: info.payout_ratio * 100,\r\n          maxdays: info.maxdays,\r\n          payhere: info.payhere,\r\n          payoutRatio: info.payout_ratio,\r\n          ratioEnergy: new BigNumber(info.ratio_e * 100).dp(3).toString(10),\r\n          ratioEnergyPool: new BigNumber(info.ratio_e_pool * 100).dp(3).toString(10),\r\n          cNaranja: naranja,\r\n          voteSR: info.srVote,\r\n          proEnergy: providerEnergy,\r\n          proEnergyTotal: providerEnergyTotal,\r\n\r\n          proBand: providerBand,\r\n          proBandTotal: providerBandTotal,\r\n\r\n        })\r\n\r\n        let historic = {}\r\n        try {\r\n\r\n          historic = await fetch(url + \"historic_payments\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ wallet: this.props.accountAddress })\r\n\r\n          }\r\n          )\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n\r\n\r\n        let allPayed = 0\r\n\r\n        try {\r\n\r\n          allPayed = await fetch(url + \"acum_payments\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ wallet: this.props.accountAddress })\r\n\r\n          }\r\n          )\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n\r\n\r\n        allPayed = (new BigNumber(allPayed).dp(3).toNumber()).toLocaleString('en-US')\r\n\r\n        this.setState({ allPayed: allPayed })\r\n\r\n        let dataHistoric = []\r\n        let totalPayed30 = new BigNumber(0)\r\n\r\n        historic = historic.toReversed().map((item, index) => {\r\n\r\n          dataHistoric.unshift({ date: new Date(item.date * 1000), amount: new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber(), coin: item.coin })\r\n\r\n          totalPayed30 = totalPayed30.plus(item.amount)\r\n          return (\r\n            <tr key={index}>\r\n              <td>{moment.utc(item.date * 1000).tz(this.state.tiempo).format(\"lll\")}</td>\r\n              <td>{(new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US')}\r\n              </td>\r\n              <td>{item.coin}</td>\r\n            </tr>\r\n          )\r\n        })\r\n\r\n\r\n        this.setState({\r\n          historic: historic,\r\n          dataHistoric: dataHistoric,\r\n          totalPayed30: (totalPayed30.shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US') + \" TRX\"\r\n        })\r\n\r\n        let ongoins = []\r\n\r\n        try {\r\n\r\n          let body = { wallet: this.props.accountAddress }\r\n\r\n          ongoins = await fetch(url + \"ongoingdeals\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.ongoing_deals;\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        let listWallets = []\r\n\r\n        const ordenesActivas = ongoins.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          let lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            lock = \"unlock\"\r\n          } else {\r\n            lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + lock + \"-fill\"}></i></td>\r\n              <td>{item.customer}<br></br>\r\n                {moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")}{\" -> \"}{moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")}<br></br>\r\n\r\n              </td>\r\n              <td>{item.payout} TRX</td>\r\n            </tr>\r\n          )\r\n        });\r\n\r\n\r\n        let completed = []\r\n\r\n        try {\r\n\r\n          let body = { wallet: this.props.accountAddress }\r\n\r\n          completed = await fetch(url + \"completed_deals\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.completed_deals;\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n        const ordenesCompletadas = completed.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          let lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            lock = \"unlock\"\r\n          } else {\r\n            lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + lock + \"-fill\"}></i></td>\r\n              <td>{item.customer}<br></br>\r\n                {moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")}{\" -> \"}{moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")}<br></br>\r\n\r\n              </td>\r\n              <td>{item.payout} TRX</td>\r\n            </tr>\r\n          )\r\n        });\r\n\r\n\r\n        const delegationInfo = await this.props.tronWeb.trx.getDelegatedResourceAccountIndexV2(this.props.accountAddress)\r\n\r\n        let delegatedExternal = []\r\n\r\n        if (delegationInfo.toAccounts) {\r\n\r\n          for (let index = 0; index < delegationInfo.toAccounts.length; index++) {\r\n            delegationInfo.toAccounts[index] = this.props.tronWeb.address.fromHex(delegationInfo.toAccounts[index])\r\n\r\n            if (listWallets.indexOf(delegationInfo.toAccounts[index]) === -1) {\r\n              let info = await this.props.tronWeb.trx.getDelegatedResourceV2(this.props.accountAddress, delegationInfo.toAccounts[index])\r\n\r\n              //console.log(info.delegatedResource)\r\n\r\n              for (let index2 = 0; index2 < info.delegatedResource.length; index2++) {\r\n\r\n                let order = {\r\n                  wallet: delegationInfo.toAccounts[index],\r\n                  resource: \"ENERGY\",\r\n                  trx: 0,\r\n                  sun: \"0\",\r\n                  expire: \"--/--/-- 00:00 --\"\r\n                }\r\n\r\n                if (info.delegatedResource[index2].frozen_balance_for_energy) {\r\n\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_energy / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_energy\r\n                  if (info.delegatedResource[index2].expire_time_for_energy) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_energy)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n                  }\r\n                } else {\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_bandwidth / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_bandwidth\r\n                  if (info.delegatedResource[index2].expire_time_for_bandwidth) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_bandwidth)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n\r\n                  }\r\n\r\n\r\n                  order.resource = \"BANDWIDTH\"\r\n                }\r\n\r\n\r\n                delegatedExternal.push(order)\r\n\r\n\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        const ordenesNoregistradas = delegatedExternal.map((item, index) => {\r\n\r\n\r\n          let amount = item.sun;\r\n          let receiverAddress = item.wallet\r\n          let resource = item.resource\r\n          let ownerAddress = this.props.accountAddress\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td className=\"text-end\">\r\n                <div className=\"dropdown custom-dropdown mb-0\">\r\n                  <div className=\"btn sharp btn-primary tp-btn\" data-bs-toggle=\"dropdown\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                  </div>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <a className=\"dropdown-item text-info\" href=\"https://tronscan.org/#/wallet/resources\" >View on TronScan</a>\r\n\r\n                    <button className=\"dropdown-item text-danger\" onClick={async () => {\r\n                      let transaction = await this.props.tronWeb.transactionBuilder.undelegateResource(amount, receiverAddress, resource, ownerAddress);\r\n                      transaction = await this.props.tronWeb.trx.sign(transaction)\r\n                      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n                      this.setState({\r\n                        ModalTitulo: \"Result: \" + transaction.result,\r\n                        ModalBody: <a href={\"https://tronscan.org/#/transaction/\" + transaction.txid}>see result in TronScan</a>\r\n                      })\r\n\r\n                      window.$(\"#alert\").modal(\"show\");\r\n\r\n                    }}>Reclaim Resource</button>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>{item.resource} </td>\r\n              <td>{(item.trx).toLocaleString('en-US')} </td>\r\n\r\n              <td>{item.wallet}<br></br>\r\n                {item.expire}\r\n              </td>\r\n\r\n            </tr>\r\n          )\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n          ongoins: ordenesActivas,\r\n          noregist: ordenesNoregistradas,\r\n          completed: ordenesCompletadas,\r\n        })\r\n\r\n      }\r\n    } else {\r\n      this.setState({\r\n        provider: false\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    if (this.state.provider) {\r\n\r\n\r\n      let estatus = <button className=\"btn btn-outline-danger btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-sign-stop-fill\"></i> Stopped</button>\r\n\r\n      if (this.state.rent) {\r\n\r\n        estatus = <button className=\"btn btn-outline-info btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-arrow-clockwise\"></i> Recharging</button>\r\n\r\n        if (this.state.elegible) {\r\n          estatus = <button className=\"btn btn-outline-success btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-check-circle-fill\"></i> Active</button>\r\n        }\r\n\r\n      }\r\n\r\n\r\n      let campoFreeze = <></>\r\n\r\n      if (this.state.autofreeze !== \"Off\") {\r\n\r\n        campoFreeze = <div className=\"container mt-1\">\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col-12\">Wallet of SR to vote (default: Brutus)</div>\r\n            <div className=\"col-11\">\r\n              <input type=\"text\" className=\"form-control\" id=\"voteSR\" style={{ borderColor: \"#c3c3c3\" }} placeholder={this.state.voteSR} onChange={this.handleChange} disabled={false} ></input>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <i className=\"bi bi-question-circle-fill\" title=\"You can set by which super representative wallet the automatic votes will be made\" onClick={() => {\r\n\r\n                this.setState({\r\n                  ModalTitulo: \"Info\",\r\n                  ModalBody: \"You can set by which super representative wallet the automatic votes will be made\"\r\n                })\r\n\r\n                window.$(\"#alert\").modal(\"show\");\r\n              }}></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        if (this.state.voteSR !== \"\" && TronWeb.isAddress(this.state.newVoteSR) && this.state.voteSR !== this.state.newVoteSR) {\r\n\r\n          campoFreeze = (<>\r\n            {campoFreeze}\r\n            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => {\r\n              this.setWalletSr(this.state.newVoteSR)\r\n            }}>Update Wallet to Vote</button>\r\n\r\n          </>)\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-sm-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\">\r\n\r\n\r\n                      <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\">Status </h2>\r\n\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\">{estatus} </h2>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\"><button type=\"button\" className=\"btn btn-outline-warning btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><img height=\"15px\" src=\"images/naranja.png\" alt=\"\"></img> {this.state.ratioEnergy} /  {this.state.ratioEnergyPool} </button></h2>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\"><button className=\"btn btn-outline-secondary btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}> <span role=\"img\" aria-label=\"$\">💲</span> Payout %{this.state.paymentPoints} </button></h2>\r\n\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 mb-2\">\r\n                            Energy ({(this.state.proEnergy).toLocaleString('en-US')}/{(this.state.proEnergyTotal).toLocaleString(\"en-us\")}) <img height=\"15px\" src=\"images/energy.png\" alt=\"\" ></img>\r\n                            <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                              <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{ \"width\": ((this.state.proEnergy / this.state.proEnergyTotal) * 100) + \"%\" }}\r\n                                aria-valuenow={(this.state.proEnergy / this.state.proEnergyTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 mb-2\">\r\n                            Bandwidth ({(this.state.proBand).toLocaleString(\"en-us\")}/{(this.state.proBandTotal).toLocaleString(\"en-us\")}) 🌐\r\n                            <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                              <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ \"width\": ((this.state.proBand / this.state.proBandTotal) * 100) + \"%\" }}\r\n                                aria-valuenow={(this.state.proBand / this.state.proBandTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"rent\" checked={this.state.rent} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Rent <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume the bot\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Pause/Resume the bot\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"burn\" checked={this.state.burn} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Burn <i className=\"bi bi-question-circle-fill\" title=\"Allow TRX burn to accept new orders when you run out of bandwidth\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Allow TRX burn to accept new orders when you run out of bandwidth\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"noti\" checked={this.state.noti} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Notifications <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume notifications from the telegram bot\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Pause/Resume notifications from the telegram bot\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"band\" checked={this.state.sellband} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Band over: {(this.state.bandover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked bandwidth over the amount you establish\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Sell your staked bandwidth over the amount you establish\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row mt-3\">\r\n\r\n                          <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Payment hour: {this.state.payhour} GMT</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Set the time you want to receive your daily payments\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"130\")}>1:30 GMT</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"930\")}>9:30 GMT</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"1730\")}>17:30 GMT</button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu2\">Max Days: {this.state.maxdays}</button> <i className=\"bi bi-question-circle-fill\" title=\"Establish the max. duration of the orders you want to accept\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Establish the max. duration of the orders you want to accept\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu2\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays('1h')}>1h</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(3)} >3 days</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(7)}>7 days</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(14)}>14 days</button>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"95.33%\" }} data-bs-toggle=\"dropdown\" id=\"menu\" >Autofreeze: {this.state.autofreeze}</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"no\")}>Off</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"bandwidth\")}>Bandwidth</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"energy\")}>Energy</button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            {campoFreeze}\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-4 col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header border-0 pb-0\">\r\n                      <h2 className=\"heading mb-0 m-auto\">Next Payment</h2>\r\n                    </div>\r\n                    <div className=\"card-body text-center pt-3\">\r\n                      <div className=\"mt-1\">Hour {this.state.payhour} GMT</div>\r\n                      <hr></hr>\r\n                      <div className=\"count-num mt-1\">{(this.state.payment).toLocaleString(\"en-US\")} TRX</div>\r\n                      <hr></hr>\r\n\r\n                      <div className=\"mt-1\">that will be paid here: <u>{this.state.payhere}</u></div>\r\n\r\n                      <hr></hr>\r\n\r\n                      <div className=\"mt-1\">Total earned all time:<br>\r\n                      </br><b>{this.state.allPayed} TRX</b> </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">last {this.state.historic.length} payments = {this.state.totalPayed30}</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-sm-12\">\r\n                          <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                            <table className=\"table verticle-middle table-responsive-md \" >\r\n                              <thead>\r\n                                <tr>\r\n                                  <th scope=\"col\">Date</th>\r\n                                  <th scope=\"col\">Amount</th>\r\n                                  <th scope=\"col\">Coin</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {this.state.historic}\r\n\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-sm-12\">\r\n                          <div className=\"mb-3\" id=\"chartdiv\" style={{ height: this.state.alturaGrafico, backgroundColor: \"white\" }}></div>\r\n                          <button className=\"btn btn-success\" onClick={() => { if (this.state.alturaGrafico === \"0px\") { this.setState({ alturaGrafico: \"350px\" }); this.grafico(this.state.dataHistoric) } else { this.setState({ alturaGrafico: \"0px\" }); this.root.dispose(); } }}>Graphic (Open / Close)</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Ongoing deals ({this.state.ongoins.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md \" >\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Resource / Period</th>\r\n                              <th scope=\"col\">Buyer / Time</th>\r\n                              <th scope=\"col\">Payout</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.ongoins}\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Completed deals ({this.state.completed.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md \" >\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Resource / Period</th>\r\n                              <th scope=\"col\">Buyer / Time</th>\r\n                              <th scope=\"col\">Payout</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.completed}\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Other delegations ({this.state.noregist.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\"></th>\r\n\r\n                              <th scope=\"col\">Resource</th>\r\n                              <th scope=\"col\">TRX</th>\r\n                              <th scope=\"col\">Wallet / Expire Time</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.noregist}\r\n\r\n\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div >\r\n\r\n        <div className=\"modal fade\" id=\"alert\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>{this.state.ModalBody}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>);\r\n    } else {\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\">\r\n                      <h2 className=\"heading\">Status</h2>\r\n\r\n                      <p>you are not a supplier, if you want to become one read the following <a className=\"btn btn-primary\" href=\"https://brutus.finance/brutusprovider.html\">article</a></p>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>);\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","import en from \"./en.json\"\r\nimport { es } from \"./es.json\"\r\nimport { pt } from \"./pt.json\"\r\n\r\nexport default { en, es, pt }","import React, { Component } from \"react\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport utils from \"./utils/index.jsx\";\r\nimport { TronLinkAdapter } from '@tronweb3/tronwallet-adapters';\r\n\r\nimport abi_PROXY from \"./assets/abi/Proxy\";\r\nimport abi_POOLBRST from \"./assets/abi/PoolBRSTv4\";\r\nimport abi_SimpleSwap from \"./assets/abi/SimpleSwapV2\";\r\nimport abi_LOTERIA from \"./assets/abi/Lottery\";\r\n\r\nimport Alert from \"./components/Alert.jsx\";\r\n\r\nimport Home from \"./pages/Home.jsx\";\r\n\r\nimport Brut from \"./components/BRUT.jsx\";\r\nimport Brst from \"./components/BRST-Proxy.jsx\";\r\nimport Nft from \"./components/BRGY.jsx\";\r\nimport LOTERIA from \"./components/BRLT.jsx\";\r\nimport EBOT from \"./components/EBOT.jsx\";\r\nimport PRO from \"./components/PRO.jsx\";\r\nimport API from \"./components/API.jsx\";\r\n\r\nimport i18next from 'i18next';\r\nimport lng from \"./locales/langs.js\"\r\n\r\nconst striptags = require('striptags');\r\n\r\n\r\nlet lenguaje = navigator.language || navigator.userLanguage\r\n\r\ni18next.init({\r\n  fallbackLng: 'en',\r\n  lng: lenguaje, // if you're using a language detector, do not define the lng option\r\n  debug: false,\r\n  resources: lng\r\n\r\n});\r\n\r\nlet lgSelector = \"en\";\r\n\r\nconst tronWeb = {}\r\n\r\nconst adapter = new TronLinkAdapter();\r\n\r\nconst adressDefault = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\r\n\r\nconst imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" />\r\n\r\nconst cookies = new Cookies(null, { path: '/', maxAge: 60 * 60 * 24 * 30 });\r\n\r\nlet theme = cookies.get('theme') || \"light\";\r\ndocument.documentElement.setAttribute(\"data-theme-version\", theme);\r\n\r\nlet tryes = 2\r\nfunction setDarkTheme() {\r\n\r\n  if (theme === \"light\") {\r\n    theme = \"dark\";\r\n  } else {\r\n    theme = \"light\";\r\n  }\r\n\r\n  document.documentElement.setAttribute(\"data-theme-version\", theme);\r\n  cookies.set('theme', theme);\r\n\r\n}\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ruta: \"\",\r\n      accountAddress: adressDefault,\r\n      tronlink: {\r\n        installed: false,\r\n        loggedIn: false,\r\n        viewer: false,\r\n        adapter: {}\r\n      },\r\n      tronWeb: tronWeb,\r\n      contrato: {\r\n        ready: false,\r\n        BRUT_USDT: null,\r\n        BRUT: null,\r\n        MBOX: null,\r\n        loteria: null,\r\n        BRLT: null,\r\n        USDT: null,\r\n        BRGY: null,\r\n        BRST: null,\r\n        BRST_TRX: null,\r\n        BRST_TRX_Proxy: null,\r\n        BRST_TRX_Proxy_fast: null,\r\n\r\n      },\r\n      conexion: false,\r\n      walletConect: \"Conect Wallet\",\r\n      msj: {},\r\n    };\r\n\r\n    this.conectar = this.conectar.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.route = this.route.bind(this);\r\n    this.loadContracts = this.loadContracts.bind(this);\r\n    this.selecionarIdioma = this.selecionarIdioma.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    document.documentElement.setAttribute(\"data-theme-version\", theme);\r\n\r\n    let { walletConect } = this.state;\r\n\r\n    document.getElementById(\"login\").innerHTML = '<span id=\"conectTL\" class=\"btn btn-primary\" style=\"cursor:pointer\" title=\"' + striptags(walletConect) + '\"> Conect Wallet </span> <img src=\"images/TronLinkLogo.png\" height=\"40px\" alt=\"TronLink logo\" />';\r\n    document.getElementById(\"conectTL\").onclick = () => { this.conectar(true); }\r\n\r\n    intervalId = setInterval(() => {\r\n      this.route();\r\n      this.selecionarIdioma();\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (this.state.tronlink.installed && !this.state.tronlink.loggedIn) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado(true);\r\n      }\r\n\r\n    }, 3 * 1000);\r\n\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n\r\n  async selecionarIdioma() {\r\n    try {\r\n      lgSelector = document.getElementById(\"selectLng\").value\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n    if (i18next.resolvedLanguage !== lgSelector) {\r\n      i18next.changeLanguage(lgSelector);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async conectar(billetera) {\r\n\r\n    if (!this.state.conexion && !adapter.connected && tryes > 0) {\r\n      this.setState({ conexion: true })\r\n\r\n      await adapter.connect()\r\n        .catch((e) => {\r\n          console.log(e.toString())\r\n          this.setState({ msj: { title: \"Wallet connection error\", message: e.toString() } })\r\n          tryes--;\r\n\r\n        })\r\n\r\n      if (adapter.connected) this.estado();\r\n\r\n      this.setState({ conexion: false })\r\n\r\n\r\n    }\r\n\r\n    return adapter.connected;\r\n\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { tronlink, accountAddress, walletConect } = this.state;\r\n\r\n    if (window.tronWeb) {\r\n      tronlink['installed'] = true;\r\n    }\r\n\r\n    if (!adapter.address) {\r\n      await this.conectar(true)\r\n    }\r\n\r\n    if (adapter.address) {\r\n      tronlink['loggedIn'] = true;\r\n      tronlink['adapter'] = adapter;\r\n      accountAddress = adapter.address\r\n\r\n    }\r\n\r\n    if (accountAddress !== adressDefault) {\r\n      let vierWallet = accountAddress.substring(0, 6) + \"***\" + accountAddress.substring(accountAddress.length - 6, accountAddress.length)\r\n      document.getElementById(\"login\").innerHTML = '<span class=\"btn gradient-btn\" title=\"' + striptags(accountAddress) + '\" >' + striptags(vierWallet) + '</span>';\r\n\r\n    } else {\r\n      document.getElementById(\"login\").innerHTML = '<span id=\"conectTL\" class=\"btn btn-primary\" style=\"cursor:pointer\" title=\"' + striptags(walletConect) + '\"> Conect Wallet </span> <img src=\"images/TronLinkLogo.png\" height=\"40px\" alt=\"TronLink logo\" />';\r\n      document.getElementById(\"conectTL\").onclick = () => { this.conectar(true); }\r\n    }\r\n\r\n    this.setState({\r\n      accountAddress,\r\n      tronlink: tronlink,\r\n      tronWeb: await utils.getTronweb(accountAddress)\r\n\r\n    });\r\n\r\n    this.loadContracts()\r\n\r\n\r\n  }\r\n\r\n  route() {\r\n    let url = window.location.href;\r\n    if (url.indexOf(\"/?\") >= 0) {\r\n      url = (url.split(\"/?\"))[1];\r\n      if (url.indexOf(\"#\") >= 0) url = (url.split(\"#\"))[0];\r\n      if (url.indexOf(\"&\") >= 0) url = (url.split(\"&\"))[0];\r\n      if (url.indexOf(\"=\") >= 0) url = (url.split(\"=\"))[0];\r\n      if (url === window.location.origin + \"/\" || url === \"utum_source\") url = \"\"\r\n      url = `/#/${url}`\r\n      window.location.replace(url);\r\n    }\r\n\r\n    if (url.indexOf(\"/#/\") >= 0) url = (url.split(\"/#/\"))[1];\r\n    if (url.indexOf(\"?\") >= 0) url = (url.split(\"?\"))[0];\r\n    if (url.indexOf(\"&\") >= 0) url = (url.split(\"&\"))[0];\r\n    if (url.indexOf(\"=\") >= 0) url = (url.split(\"=\"))[0];\r\n    if (url === window.location.origin + \"/\" || url === \"utum_source\") url = \"\"\r\n\r\n    this.setState({ ruta: url })\r\n    return url\r\n  }\r\n\r\n  async loadContracts() {\r\n    let { accountAddress, contrato } = this.state;\r\n\r\n    let web3Contracts = await utils.getTronweb(accountAddress);\r\n\r\n    if (contrato.BRUT === null && utils.BRUT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.BRUT = await web3Contracts.contract().at(utils.BRUT);\r\n    }\r\n\r\n    if (contrato.USDT === null && utils.USDT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.USDT = await web3Contracts.contract().at(utils.USDT);\r\n    }\r\n\r\n    if (contrato.BRUT_USDT === null && utils.SC !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.BRUT_USDT = await web3Contracts.contract().at(utils.SC);\r\n    }\r\n\r\n    if (contrato.BRST_TRX === null && utils.SC2 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX = await web3Contracts.contract().at(utils.SC2);\r\n    }\r\n\r\n    if (contrato.BRST_TRX_Proxy === null && utils.ProxySC2 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.Proxy = web3Contracts.contract(abi_PROXY, utils.ProxySC2);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX_Proxy = web3Contracts.contract(abi_POOLBRST, utils.ProxySC2);\r\n    }\r\n\r\n    if (contrato.BRST_TRX_Proxy_fast === null && utils.ProxySC3 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.Proxy_fast = web3Contracts.contract(abi_PROXY, utils.ProxySC3);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX_Proxy_fast = web3Contracts.contract(abi_SimpleSwap, utils.ProxySC3);\r\n    }\r\n\r\n    if (contrato.BRST === null && utils.BRST !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST = await web3Contracts.contract().at(utils.BRST);\r\n    }\r\n\r\n    if (contrato.BRGY === null && utils.BRGY !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRGY = await web3Contracts.contract().at(utils.BRGY);\r\n    }\r\n\r\n    if (contrato.MBOX === null && utils.SC3 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.MBOX = await web3Contracts.contract().at(utils.SC3);\r\n    }\r\n\r\n    if (contrato.BRLT === null && utils.BRLT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.BRLT = await web3Contracts.contract().at(utils.BRLT);\r\n    }\r\n\r\n    if (contrato.loteria === null && utils.SC4 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.ProxyLoteria = web3Contracts.contract(abi_PROXY, utils.SC4);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.loteria = web3Contracts.contract(abi_LOTERIA, utils.SC4);\r\n    }\r\n\r\n    contrato.ready = true;\r\n\r\n    this.setState({\r\n      contrato: contrato,\r\n    })\r\n\r\n    return contrato\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let { tronlink, contrato, accountAddress, tronWeb, msj, ruta } = this.state\r\n\r\n    let Retorno = <></>\r\n\r\n    if (window.tronLink === undefined) {\r\n      tronlink.loggedIn = true\r\n    }\r\n\r\n    if (!contrato.ready && !tronlink.loggedIn) {\r\n      Retorno = (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"card\">\r\n                <div className='row' style={{ 'padding': '3em', 'decoration': 'none' }} >\r\n                  <div className='col-sm-8'>\r\n                    <h1>{i18next.t(\"preLoad\", { returnObjects: true })[0]}{imgLoading}</h1>\r\n                    <p>\r\n                      {i18next.t(\"preLoad\", { returnObjects: true })[1]}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n\r\n      let url = ruta\r\n\r\n      switch (url) {\r\n\r\n        case \"brut\":\r\n          Retorno = <Brut accountAddress={accountAddress}  contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"brst\":\r\n          Retorno = <Brst accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"brgy\":\r\n          Retorno = <Nft accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"brlt\":\r\n          Retorno = <LOTERIA accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"ebot\":\r\n          Retorno = <EBOT accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"pro\":\r\n          Retorno = <PRO accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} tronlink={tronlink} i18n={i18next} />\r\n          break;\r\n        case \"api\":\r\n          Retorno = <API accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} tronlink={tronlink} i18n={i18next} />\r\n          break;\r\n        default:\r\n          Retorno = <Home accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    return (<>\r\n      {Retorno}\r\n      <Alert {...msj} />\r\n      <button id=\"theme-switch\" onClick={() => { setDarkTheme() }}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\"><path d=\"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Z\" /></svg>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\"><path d=\"M480-280q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Z\" /></svg>\r\n      </button>\r\n    </>)\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from \"./App.jsx\";\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\r\n\r\nroot.render(<App />);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}