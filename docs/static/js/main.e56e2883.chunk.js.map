{"version":3,"sources":["utils/index.jsx","components/Alert.jsx","pages/Home.jsx","components/BRUT.jsx","components/BRST-Proxy.jsx","components/BRGY.jsx","components/BRLT.jsx","components/EBOT.jsx","components/PRO.jsx","components/API.jsx","locales/langs.js","App.jsx","index.js"],"names":["abi_TOKEN","require","abi_SUNSWAP","BigNumber","env","process","CryptoJS","constantes","getRed","index","parseInt","tokenList","REACT_APP_LIST_TRONQL","split","length","proxy","BRUTUS_API","REACT_APP_API_URL","apiProviders","PRICE","market_brut","RED","SC","SC2","ProxySC2","ProxySC3","SC3","SC4","USDT","USDD","BRUT","BRST","APENFT","BRGY","BRLT","TOKEN_ABI","SUNSWAPV3","SUNSWAPV3_ABI","testnet","_objectSpread","keyQuery","async","fetch","then","response","json","data","API_KEY","ok","apikey","catch","err","console","log","getTronweb","wallet","red","arguments","undefined","tronWeb","TronWeb","fullHost","setAddress","delay","s","Promise","res","setTimeout","rentResource","wallet_orden","recurso","cantidad","periodo","temporalidad","precio","signedTransaction","time","REACT_APP_WALLET_API","toSun","Date","now","REACT_APP_USER_ID","REACT_APP_TOKEN","AES","encrypt","JSON","stringify","REACT_APP_SECRET","toString","consulta","method","headers","body","user","REACT_APP_USER_C","r","error","result","hash","txID","msg","normalizarNumero","n","shiftedBy","toNumber","numberToStringCero","dp","inter","Alert","_Component","props","_this","_classCallCheck","state","title","message","mostrarMensaje","bind","_inherits","_createClass","key","value","_this2","setInterval","clearInterval","this","setState","window","$","modal","verMensaje","React","createElement","Fragment","type","className","onClick","id","role","Component","nextUpdate","intervalId","Inicio","precioTRX","precioBrut","varBrut","precioBrst","varBrst","misBRUT","misBRST","misBRGY","misBRLT","precioBrstUSD","imagerobots","consultaPrecios","subeobaja","textoE","estado","document","getElementById","innerText","i18n","t","contrato","ready","valor","resultado","width","height","viewBox","fill","xmlns","filter","d","stroke","strokeWidth","strokeLinecap","x","y","filterUnits","colorInterpolationFilters","floodOpacity","in","values","dy","stdDeviation","mode","in2","_this3","Data","usd","v24h","trx","_this4","accountAddress","utils","BRST_TRX_Proxy","RATE","call","balanceOf","cellStyle","borderBottom","borderRight","padding","lastCellStyle","style","minWidth","borderCollapse","href","src","alt","paddingLeft","color","fontSize","toFixed","toLocaleString","options","label","options2","Home","minCompra","minventa","deposito","valueBRUT","valueUSDT","tiempo","enBrutus","tokensEmitidos","totalCirculando","enPool","solicitado","cantidadDatos","cambio24h","msj","grafico","compra","venta","handleChange","handleChange2","handleChangeBRUT","handleChangeUSDT","consultarPrecio","e","evento","target","event","parseFloat","precioBRUT","toPrecision","proxyUrl","apiUrl","cambio","market","tokens","marketcap","usdt","circulatingSupply","aprovadoUSDT","allowance","BRUT_USDT","address","remaining","balanceUSDT","aprovadoBRUT","balanceBRUT","supplyBRUT","totalSupply","depositoUSDT","depositoBRUT","amount","replace","aprovado","inputs","funcion","trigger","transactionBuilder","triggerSmartContract","toHex","transaction","extendExpiration","tronLink","sign","sendRawTransaction","txid","alert","root","dispose","am5","new","setThemes","am5themes_Animated","chart","container","children","push","am5xy","panX","panY","wheelX","wheelY","pinchZoomX","set","behavior","lineY","previousColor","previousDataObj","previousValue","downColor","interfaceColors","get","upColor","generateData","date","dataObj","strokeSettings","xAxis","xAxes","baseInterval","timeUnit","count","renderer","tooltip","yAxis","yAxes","series","name","valueYField","valueXField","strokes","template","labelText","on","background","adapters","add","dataItem","dataContext","scrollbar","orientation","sbDateAxis","sbValueAxis","sbSeries","i","generateDatas","setAll","appear","_this5","tabIndex","defaultValue","backgroundColor","onChange","map","option","placeholder","min","max","step","htmlFor","cursor","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_HALF_DOWN","imgLoading","optionsHours","earnings","iniciado","Staking","_defineProperty","to","selectedCurrency","from","par","calcExchange","valueBRST","valueTRX","solicitudes","solicitudesV3","dias","days","APY","dataBRST","contractEnergy","userEnergy","ModalTitulo","ModalBody","tiempoPromediado","promE7to1day","resultCalc","diasCalc","brutCalc","balanceBRST","balanceTRX","balanceUSDD","globDepositos","eenergy","energyOn","total_required","isOwner","isAdmin","interesCompuesto","crecimientoPorcentual","precioUSDT","precioUSDD","retiroRapido","penalty","selector","rapida","valueFrom","valueTo","consultaPrecio","retiro","preClaim","handleChangeDias","handleChangeCalc","llenarBRST","llenarTRX","rentEnergy","handleCurrencyChangeFrom","handleCurrencyChangeTo","exchangeTokens","suawpTokenFromTRX","calculoEnergy","preExchange","costEnergy","dato","oper","out","swap","element","salida","entrada","div","times","isNaN","TRON_BALANCE","TRON_PAY_BALANCE","TRON_SOLICITADO","balance","getUnconfirmedBalance","getBalance","cuenta","getAccountResources","BRST_TRX_Proxy_fast","descuentoRapido","precision","loteria","_premio","balance_token_1","minus","EnergyLimit","EnergyUsed","useTrx","reduce","acc","item","valorInicial","consultaData","diario","MIN_DEPOSIT","price_in_trx","todasSolicitudes","myids","deposits","solicitudesPendientesGlobales","TIEMPO","diasDeEspera","balance_Pool","espera","fromHex","owner","indexOf","pen","verSolicitudPendiente","inicio","pv","diasrestantes","boton","cantidadTrx","brst","plus","includes","disabled","extraData","rel","number","ownerPanel","TRON_RR","energi","available","av_energy","total_energy_pool","transaccion","triggerConstantContract","energy_used","requerido","price","textoModal","returnObjects","energyRequired","token","tokenSelector","sunswapRouter","accept","visible","energyFactor","consume_user_resource_percent","contract_base_token","contract","decimals_base","decimals","aprove","monto","distributeTokens","totalTokens","versions","Array","remainingTokens","poolVersions","poolFees","amountIn","amountOut","feeLimit","callValue","AddressContract","_this6","retorno","unSignedTransaction","sendTrx","consulta2","_this7","_this8","select","currentPrice","balance_usdt","_this9","_this10","scrollIntoView","concat","_this11","prompt","_logo","encontrado","valor_alt","find","obj","coin","lastPrice","lastData","_this12","opciones","toUpperCase","retiradas","checked","readOnly","swapButton","onInput","donacion","currency","send","paddingRight","borderRadius","justifyContent","e1","objeto","daysProm","marginTop","border","unshift","nfts","robots","MBOX","entregaNFT","conteo","estonuevo","ownerOf","URI","tokenURI","metadata","numero","recBotton","claimNFT_especifico","image","mc","mb","totalNFT","premio","LastWiner","proximoSorteo","modalTitulo","modalBody","contarSegundos","restanteSegundos","porcentaje","comprarBRLT","precioUnidad","total","moneda","tikets","hours","minutes","seconds","deadline","onSale","preCompra","sunSwap","sorteo","handleChangeSelect","updateCountdown","getTime","timeToLive","Math","floor","lastWiner","onSaleURI","onSalemetadata","parse","text","proximaRonda","prosort","minutos","getMinutes","getDate","getHours","myTikets","globalId","tokenOfOwnerByIndex","button","valueNFT","feelimit","TRON_PAY_BALANCE_WHITE","swapContract","trxAddress","at","amount_base_token","contract_result_token","amount_result_token","dividedBy","abi_SUNSAWPv2","approve","tokenMax","balanceDCT","decimalesDCT","intercam","open","amountsE","amountB","EnergyRental","montoMin","minPrice","duration","av_band","available_bandwidth","available_energy","total_bandwidth_pool","titulo","amounts","bandOn","fromUrl","unitEnergyPrice","precios","energy","bandwidth","handleChangePeriodo","handleChangeWallet","updateAmount","recursos","calcularRecurso","calcularPrecios","toLowerCase","tmp","loc","location","GET","l","unescape","decodeURI","band","URL","priceList","foundPrice","UE","energy_minutes_100K","energy_hour_100K","energy_one_day_100K","energy_over_one_day_100K","band_minutes_1000","band_hour_1000","band_one_day_1000","band_over_one_day_1000","pagas","isAddress","amountButtons","margin","texto","medidor","action","required","str","charAt","slice","moment","ProviderPanel","provider","firma","rent","elegible","sellband","bandover","sellener","enerover","burn","noti","autofreeze","paymenthour","maxdays","ongoins","nexpayment","payoutRatio","ratioEnergy","ratioEnergyPool","paymentPoints","voteSR","newVoteSR","proEnergyTotal","proEnergy","proBand","proBandTotal","noregist","historic","dataHistoric","alturaGrafico","payment","payhere","payHere","completed","totalPayed30","allPayed","setConfig","test","navigator","userAgent","tz","guess","url","auth","tronlink","adapter","connected","localStorage","getItem","messge","getFullYear","verifyMessageV2","signMessage","setItem","info","naranja","ratio_e","ratio_e_pool","freez","providerEnergy","providerEnergyTotal","providerBand","providerBandTotal","freeNetLimit","NetLimit","freeNetUsed","NetUsed","allow_notifications","energyover","activo","payout_ratio","cNaranja","srVote","utc","format","ongoing_deals","listWallets","customer","lock","order_type","confirm","unfreeze","completed_deals","delegationInfo","getDelegatedResourceAccountIndexV2","toAccounts","getDelegatedResourceV2","index2","delegatedResource","order","resource","sun","expire","ownerAddress","frozen_balance_for_energy","expire_time_for_energy","frozen_balance_for_bandwidth","expire_time_for_bandwidth","elemento","activate","active","over","sellbandover","sellenergyover","external_data","layout","verticalLayout","categoryField","categoryXField","setFreez","hour","setPaymentHour","setMaxDays","sr","setWalletSr","setCoin","estatus","maxHeight","campoFreeze","borderColor","payhour","textAlign","onMouseEnter","onMouseLeave","removeItem","fillRule","scope","toReversed","align","CsvDownloader","filename","suffix","extension","separator","wrapColumnChar","columns","displayName","datas","payout","receiverAddress","undelegateResource","cookies","Cookies","path","maxAge","ordenesActivas","ordenesCompletadas","delegatedExternal","ordenesNoregistradas","en","es","pt","striptags","lenguaje","language","userLanguage","i18next","init","fallbackLng","lng","debug","resources","lgSelector","TronLinkAdapter","adressDefault","theme","documentElement","setAttribute","tryes","App","ruta","installed","loggedIn","viewer","BRST_TRX","conexion","walletConect","conectar","route","loadContracts","selecionarIdioma","innerHTML","onclick","resolvedLanguage","changeLanguage","billetera","connect","vierWallet","substring","origin","web3Contracts","Proxy","abi_PROXY","abi_POOLBRST","Proxy_fast","abi_SimpleSwap","ProxyLoteria","abi_LOTERIA","Retorno","Brut","Brst","Nft","LOTERIA","EBOT","PRO","API","createRoot","render"],"mappings":"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","file":"static/js/main.e56e2883.chunk.js","sourcesContent":["import { TronWeb } from 'tronweb';\r\n\r\nconst abi_TOKEN = require(\"../assets/abi/TRC20-USDT.json\")\r\nconst abi_SUNSWAP = require(\"../assets/abi/SunswapV3.json\")\r\n\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst env = process.env;\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nlet constantes = {}\r\nconstantes.proxy = \"https://cors.brutusservices.com/\";\r\nconstantes.BRUTUS_API = constantes.proxy + env.REACT_APP_API_URL + \"api/v1/\"\r\nconstantes.apiProviders = constantes.proxy + \"https://api-providers.brutusservices.com/main/\"\r\n\r\nconstantes.PRICE = constantes.BRUTUS_API + \"precio/BRUT\"; //API de precio\r\nconstantes.market_brut = constantes.BRUTUS_API + \"consulta/marketcap/brut\"; //API de capitalizacion de mercado\r\n\r\nconstantes.RED = \"https://iujetrtxbxoskh9l1cidv7clngnjnm.mainnet.tron.tronql.com/\"\r\n\r\nconstantes.SC = \"TBRVNF2YCJYGREKuPKaP7jYYP9R1jvVQeq\";//contrato BRUT/USDT\r\nconstantes.SC2 = \"TMzxRLeBwfhm8miqm5v2qPw3P8rVZUa3x6\";//contrato N°2 POOL Staking  BRST/TRX\r\nconstantes.ProxySC2 = \"TRSWzPDgkEothRpgexJv7Ewsqo66PCqQ55\";// POOL Staking  BRST/TRX Proxy\r\nconstantes.ProxySC3 = \"TKSpw8UXhJYL2DGdBNPZjBfw3iRrVFAxBr\";// Pool brst/trx retiradas rapidas\r\nconstantes.SC3 = \"TV2oWfCNLtLDxu1AGJ2D4QJhdWagJN5Xqk\";//contrato Mixtery box\r\nconstantes.SC4 = \"TKghr3aZvCbo41c8y5vUXofChF1gMmjTHr\";//contrato sorteo de loteria 15 dias Proxy\r\n\r\nconstantes.USDT = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\";//token trc20 USDT\r\nconstantes.USDD = \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\";//token trc20 USDD\r\nconstantes.BRUT = \"TLGhEHUevHsfExxm4miyMxfmT5xumNr4BU\";//token trc20 BRUT\r\nconstantes.BRST = \"TF8YgHqnJdWzCbUyouje3RYrdDKJYpGfB3\";//token trc20 BRST\r\nconstantes.APENFT = \"TFczxzPhnThNSqr5by8tvxsdCFRRz6cPNq\";//token de venta de mixtery box\r\nconstantes.BRGY = \"TGpQ3qap18rN1vMJj3pveMfqTeXDaKaDE7\";//token NFT  BRGY \r\nconstantes.BRLT = \"TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU\";//token NFT LOTERIA \r\nconstantes.TOKEN_ABI = abi_TOKEN;\r\n\r\nconstantes.SUNSWAPV3 = \"TXF1xDbVGdxFGbovmmmXvBGu8ZiE3Lq4mR\";\r\nconstantes.SUNSWAPV3_ABI = abi_SUNSWAP;\r\n\r\nif (constantes.testnet) {\r\n\r\n  constantes.RED = \"https://nile.trongrid.io\"\r\n\r\n  constantes.SC = \"TADgHFAqjTeTRthrkGcP1m7TtX221pmPH1\";//pool USDT_BUT\r\n  constantes.SC2 = \"TMt5zzCgpWDUVpw3fiqBZgqQDYCYViZCVC\"; //Pool BRST_TRX\r\n  constantes.ProxySC2 = \"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE\"; // Pool_BRST_TRX Prox\r\n  constantes.ProxySC3 = \"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE----\"; // Pool_BRST_TRX Prox retiradas rapidas \r\n\r\n  constantes.SC3 = \"\";//pool APENFT_NFT\r\n  constantes.SC4 = \"TYtAGrdr6VDopFqrWRbZPXYT9yyMXsZ4zR\";// Loteria Contract NFT_BRST_TRX PROXY\r\n\r\n  constantes.USDT = \"TXYZopYRdj2D9XRtbG411XZZ3kM5VkAeBf\";//token USDT\r\n  constantes.BRUT = \"TTBZHmxP5H2FW8zaJgCR2x2WeB82rJo3xb\";//token trc20 BRUT\r\n  constantes.BRST = \"TVF78ZDkPL2eJgUqs7pDusTgyMtw9WA4tq\";//token trc20 BRST\r\n  constantes.APENFT = \"TMaG566bcktJkjxQpQxshewfTqATzxmtPX\";//token de venta de mixtery box\r\n  constantes.BRGY = \"TMEmo4xexAEu3zSmSrzPJoA1FE6AEfgVyW\";//token NFT  BRGY \r\n  constantes.BRLT = \"TPJ8chq5pHGkWsyDrrVVKQQbS2ECK5UZd5\";//NFT LOTERIA\r\n\r\n}\r\n\r\nfunction delay(s) { return new Promise(res => setTimeout(res, s * 1000)); }\r\n\r\n\r\nasync function keyQuery() {\r\n\r\n  let KEY = await fetch(constantes.BRUTUS_API + 'selector/apikey')\r\n    .then(response => { return response.json(); })\r\n    .then(data => {\r\n      let API_KEY = \"\"\r\n\r\n      if (data.ok) {\r\n        if (data.apikey) {\r\n          API_KEY = data.apikey\r\n        }\r\n\r\n      }\r\n      return API_KEY\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n      return \"\"\r\n    });\r\n\r\n  return KEY\r\n\r\n}\r\n\r\nfunction getRed(index) {\r\n  index = parseInt(index)\r\n  let tokenList = env.REACT_APP_LIST_TRONQL;\r\n  tokenList = tokenList.split(\",\")\r\n\r\n  if (index > tokenList.length) index = tokenList.length - 1;\r\n\r\n  let url = \"https://\" + tokenList[index] + \".mainnet.tron.tronql.com/\"\r\n\r\n  return url;\r\n}\r\n\r\nasync function getTronweb(wallet, red = 0) {\r\n\r\n  const tronWeb = new TronWeb({\r\n    fullHost: getRed(red),\r\n    //headers: { \"TRON-PRO-API-KEY\": await keyQuery() }\r\n  })\r\n\r\n  tronWeb.setAddress(wallet)\r\n\r\n  return tronWeb\r\n\r\n}\r\n\r\nasync function rentResource(wallet_orden, recurso, cantidad, periodo, temporalidad, precio, signedTransaction) {\r\n\r\n  if (recurso === \"bandwidth\" || recurso === \"band\") {\r\n    recurso = \"band\"\r\n  } else {\r\n    recurso = \"energy\"\r\n  }\r\n\r\n  let time = periodo\r\n\r\n  if (temporalidad === \"h\" || temporalidad === \"hour\" || temporalidad === \"hora\") {\r\n    time = periodo + temporalidad\r\n  }\r\n\r\n  if (temporalidad === \"m\" || temporalidad === \"min\" || temporalidad === \"minutes\" || temporalidad === \"minutos\") {\r\n    time = periodo + \"min\"\r\n  }\r\n\r\n  let data = {\r\n    \"wallet\": wallet_orden,\r\n    \"resource\": recurso,\r\n    \"amount\": cantidad,\r\n    \"duration\": time,\r\n\r\n    \"transaction\": signedTransaction,\r\n    \"to_address\": env.REACT_APP_WALLET_API,\r\n    \"precio\": TronWeb.toSun(precio),\r\n\r\n    \"expire\": Date.now() + (500 * 1000),\r\n\r\n    \"id_api\": env.REACT_APP_USER_ID,\r\n    \"token\": env.REACT_APP_TOKEN,\r\n  }\r\n\r\n  // Encrypt\r\n  data = CryptoJS.AES.encrypt(JSON.stringify(data), env.REACT_APP_SECRET).toString();\r\n\r\n  let consulta = {}\r\n\r\n  try {\r\n\r\n    consulta = await fetch(constantes.BRUTUS_API + \"rent/energy\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ user: env.REACT_APP_USER_C, data })\r\n    }).then((r) => r.json())\r\n    \r\n  } catch (error) {\r\n\r\n    console.log(error.toString());\r\n    consulta = { result: false, hash: signedTransaction.txID, msg: \"API-Error: \"+ error.toString() }\r\n    \r\n  }\r\n   \r\n  return consulta\r\n\r\n}\r\n\r\nfunction normalizarNumero(n, s = 6) {\r\n  return new BigNumber(n).shiftedBy(-s).toNumber();\r\n}\r\n\r\nfunction numberToStringCero(n, s = 6) {\r\n  return new BigNumber(n).shiftedBy(s).dp(0).toString(10);\r\n}\r\n\r\nexport default { ...constantes, keyQuery, getTronweb, delay, rentResource, normalizarNumero, numberToStringCero };\r\n","import React, {Component} from \"react\";\r\n\r\nlet inter = null\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"Alert\",\r\n            message: \"\",\r\n            //...this.props\r\n        }\r\n\r\n        this.mostrarMensaje = this.mostrarMensaje.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        inter = setInterval(()=>{\r\n            this.mostrarMensaje()\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    async componentWillUnmount(){\r\n        clearInterval(inter)\r\n    }\r\n\r\n    async mostrarMensaje(){\r\n\r\n        let {message} = this.state\r\n\r\n        if(this.props.message){\r\n            if(message !== this.props.message){\r\n                this.setState({\r\n                    ...this.props,\r\n                })\r\n                window.$(\"#alert\").modal(\"show\");\r\n            }\r\n        }\r\n       \r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        let {title, message} = this.state\r\n\r\n        let verMensaje = <></>\r\n        if(message !== \"\") {\r\n            verMensaje = (<button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                window.$(\"#alert\").modal(\"show\");\r\n            }}>See last Message</button>)\r\n        }\r\n\r\n        return(<>\r\n            {verMensaje}\r\n    \r\n            <div className=\"modal fade\" id=\"alert\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{title}</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>{message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\nexport default class Inicio extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tprecioTRX: 0.1594,\r\n\r\n\t\t\tprecioBrut: 0,\r\n\t\t\tvarBrut: 0,\r\n\t\t\tprecioBrst: 0,\r\n\t\t\tvarBrst: 0,\r\n\t\t\tmisBRUT: 0,\r\n\t\t\tmisBRST: 0,\r\n\t\t\tmisBRGY: 0,\r\n\t\t\tmisBRLT: 0,\r\n\t\t\tprecioBrstUSD: 0,\r\n\r\n\t\t\timagerobots: []\r\n\r\n\t\t};\r\n\r\n\t\tthis.consultaPrecios = this.consultaPrecios.bind(this);\r\n\t\tthis.subeobaja = this.subeobaja.bind(this);\r\n\t\tthis.textoE = this.textoE.bind(this);\r\n\t\tthis.estado = this.estado.bind(this);\r\n\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.getElementById(\"tittle\").innerText = this.props.i18n.t(\"inicio.tittle\")\r\n\r\n\t\tintervalId = setInterval(() => {\r\n\r\n\t\t\tif (Date.now() >= nextUpdate) {\r\n\r\n\t\t\t\tif (!this.props.contrato.ready) {\r\n\t\t\t\t\tnextUpdate = Date.now() + 3 * 1000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextUpdate = Date.now() + 60 * 1000;\r\n\t\t\t\t}\r\n\t\t\t\tthis.estado();\r\n\t\t\t}\r\n\r\n\t\t}, 3 * 1000);\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(intervalId)\r\n\t}\r\n\r\n\tsubeobaja(valor) {\r\n\t\tvar imgNPositivo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t<g filter=\"url(#filter0_d2)\">\r\n\t\t\t\t<path d=\"M5 16C5.91797 14.9157 8.89728 11.7277 10.5 10L16.5 13L23.5 4\"\r\n\t\t\t\t\tstroke=\"#2BC155\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<filter id=\"filter0_d2\" x=\"-3.05176e-05\" y=\"-6.10352e-05\" width=\"28.5001\"\r\n\t\t\t\t\theight=\"22.0001\" filterUnits=\"userSpaceOnUse\"\r\n\t\t\t\t\tcolorInterpolationFilters=\"sRGB\">\r\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n\t\t\t\t\t<feOffset dy=\"1\" />\r\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"0 0 0 0 0.172549 0 0 0 0 0.72549 0 0 0 0 0.337255 0 0 0 0.61 0\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\"\r\n\t\t\t\t\t\tresult=\"effect1_dropShadow\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\"\r\n\t\t\t\t\t\tresult=\"shape\" />\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\t\t</svg>);\r\n\t\tvar imgNegativo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t<g filter=\"url(#filter0_d)\">\r\n\t\t\t\t<path d=\"M5 4C5.91797 5.08433 8.89728 8.27228 10.5 10L16.5 7L23.5 16\" stroke=\"#FF2E2E\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"28.5001\" height=\"22.0001\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n\t\t\t\t\t<feOffset dy=\"1\" />\r\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.180392 0 0 0 0 0.180392 0 0 0 0.61 0\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\t\t</svg>);\r\n\r\n\t\tvar resultado = imgNPositivo;\r\n\r\n\t\tif (valor < 0) {\r\n\t\t\tresultado = imgNegativo\r\n\t\t}\r\n\r\n\t\treturn resultado;\r\n\t}\r\n\r\n\ttextoE(valor) {\r\n\r\n\t\tvar resultado = \"success\";\r\n\r\n\t\tif (valor < 0) {\r\n\t\t\tresultado = \"danger\"\r\n\t\t}\r\n\r\n\t\treturn resultado;\r\n\r\n\t}\r\n\r\n\tasync consultaPrecios() {\r\n\t\tawait fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brut')\r\n\t\t\t.then(response => { return response.json(); })\r\n\t\t\t.then(data => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprecioBrut: data.Data.usd,\r\n\t\t\t\t\tvarBrut: data.Data.v24h,\r\n\t\t\t\t})\r\n\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\r\n\t\t\t});\r\n\r\n\t\tawait fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brst')\r\n\t\t\t.then(async (r) => (await r.json()).Data)\r\n\t\t\t.then((r) => {\r\n\t\t\t\t//console.log(r)\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprecioTRX: r.usd / r.trx,\r\n\t\t\t\t\tvarBrst: r.v24h,\r\n\t\t\t\t\tprecioBrstUSD: r.usd\r\n\t\t\t\t})\r\n\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tasync estado() {\r\n\r\n\t\tawait this.consultaPrecios();\r\n\r\n\t\tlet { contrato, accountAddress } = this.props\r\n\r\n\t\tif (!contrato.ready) return;\r\n\r\n\t\t//console.log(this.props.tronWeb.createRandom({path: \"m/44'/195'/0'/0/0\", extraEntropy: 'alajuacdand', locale: 'en'}))\r\n\t\tlet precioBrst = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.RATE().call());\r\n\t\tthis.setState({\r\n\t\t\tprecioBrst: precioBrst,\r\n\t\t})\r\n\r\n\t\tcontrato.BRST.balanceOf(accountAddress).call()\r\n\t\t\t.then((result) => { this.setState({ misBRST: utils.normalizarNumero(result) }) })\r\n\t\t\t.catch(console.error)\r\n\r\n\t\tcontrato.BRUT.balanceOf(accountAddress).call()\r\n\t\t\t.then((result) => { this.setState({ misBRUT: utils.normalizarNumero(result) }) })\r\n\t\t\t.catch(console.error)\r\n\r\n\t\tif (accountAddress !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n\t\t\tcontrato.BRGY.balanceOf(accountAddress).call()\r\n\t\t\t\t.then((result) => { this.setState({ misBRGY: utils.normalizarNumero(result, 0) }) })\r\n\t\t\t\t.catch(console.error)\r\n\r\n\t\t\tcontrato.BRLT.balanceOf(accountAddress).call()\r\n\t\t\t\t.then((result) => { this.setState({ misBRLT: utils.normalizarNumero(result, 0) }) })\r\n\t\t\t\t.catch(console.error)\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * <div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t<div className=\"profile card card-body px-3 pt-3\">\r\n\t\t\t\t\t\t\t<div className=\"profile-head\">\r\n\t\t\t\t\t\t\t\t<div className=\"photo-content\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"/#/ebot\" title={this.props.i18n.t('inicio.try')}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"rounded\"><img style={{ borderRadius: \"1%\" }}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"images/banner.jpg\" alt=\"tron energy rental\" width=\"100%\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t * \r\n\t\t */\r\n\r\n\t\t\t\tconst tableStyle = {\r\n\t\t\t\t\tminWidth: \"425px\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tborderCollapse: \"collapse\",\r\n\t\t\t\t  };\r\n\t\t\t\t  \r\n\t\t\t\t  const cellStyle = {\r\n\t\t\t\t\tborderBottom: \"1px solid #ddd\", // Solo bordes internos horizontales\r\n\t\t\t\t\tborderRight: \"1px solid #ddd\", // Solo bordes internos verticales\r\n\t\t\t\t\tpadding: \"8px\",\r\n\t\t\t\t  };\r\n\r\n\t\t\t\t  const lastCellStyle = {\r\n\t\t\t\t\t...cellStyle,\r\n\t\t\t\t\tborderRight: \"none\",\r\n\t\t\t\t  };\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body pt-0\">\r\n\t\t\t\t\t\t\t\t<div className=\"tab-content\" id=\"pills-tabContent\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"tab-pane fade show active\" id=\"pills-crypto\" role=\"tabpanel\"\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"pills-crypto-tab\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive dataTablemarket\">\r\n\t\t\t\t\t\t\t\t\t\t\t<table id=\"example\" style={tableStyle} className=\"table shadow-hover display\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{this.props.i18n.t('inicio.name')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t('inicio.tokenB')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t(\"inicio.totalB\")}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{this.props.i18n.t(\"inicio.usdValue\")}</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={cellStyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brut\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brut.png\" width=\"50px\" alt=\"brutus token\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRUT</b> Brutus Token<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.precioBrut} USDT {this.subeobaja(this.state.varBrut)}<span className={\"text-\" + this.textoE(this.state.varBrut)}>{(this.state.varBrut).toFixed(3)}%</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{this.state.misBRUT}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{(this.state.misBRUT * this.state.precioBrut).toFixed(3)} USDT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={lastCellStyle}>{(this.state.misBRUT * this.state.precioBrut).toFixed(3)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"href=\"/#/brst\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brst.png\" width=\"50px\" alt=\"brutus tron staking\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRST</b> Brutus Tron Staking<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(this.state.precioBrst).toFixed(6)} TRX {this.subeobaja(this.state.varBrst)}<span className={\"text-\" + this.textoE(this.state.varBrst)}>{(this.state.varBrst).toFixed(3)}%</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{(this.state.misBRST).toLocaleString(\"en-US\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{(this.state.misBRST * this.state.precioBrst).toLocaleString(\"en-US\")} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={lastCellStyle}>{(this.state.misBRST * this.state.precioBrstUSD).toLocaleString(\"en-US\")} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brgy\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brgy.png\" width=\"50px\" alt=\"brutus gallery\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRGY</b> Brutus {this.props.i18n.t(\"gallery\")}<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t10,000 NFT\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{this.state.misBRGY}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{this.state.misBRGY*10000} NFT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={lastCellStyle}>-0-</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={{...cellStyle, borderBottom: \"none\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brlt\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brlt.png\" width=\"50px\" alt=\"brutus lottery\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRLT</b> Brutus {this.props.i18n.t(\"lottery\")}<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100 TRX\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{...cellStyle, borderBottom: \"none\"}}>{this.state.misBRLT}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{...cellStyle, borderBottom: \"none\"}}>{this.state.misBRLT * 100} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{...lastCellStyle, borderBottom: \"none\"}}>{(this.state.misBRLT * 100 * this.state.precioTRX).toFixed(1)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div >\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport const Head = () => <>\r\n\r\n\t<meta property=\"og:image\" content=\"brutusimage\" />\r\n</>","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\nimport Alert from \"./Alert\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nconst BigNumber = require(\"bignumber.js\");\r\n\r\nconst options = [\r\n  {\r\n    label: \"Hours\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    label: \"Days\",\r\n    value: \"day\",\r\n  }\r\n];\r\n\r\nconst options2 = [\r\n  {\r\n    label: \"Last 7 \",\r\n    value: \"7\",\r\n  },\r\n  {\r\n    label: \"Last 30 \",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"Last 90 \",\r\n    value: \"90\",\r\n  },\r\n  {\r\n    label: \"Last 180 \",\r\n    value: \"180\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      minCompra: 10,\r\n      minventa: 1,\r\n      deposito: \"Loading...\",\r\n      wallet: \"Loading...\",\r\n      valueBRUT: \"\",\r\n      valueUSDT: \"\",\r\n      value: \"\",\r\n      cantidad: 0,\r\n      tiempo: 0,\r\n      enBrutus: 0,\r\n      tokensEmitidos: 0,\r\n      totalCirculando: 0,\r\n      enPool: 0,\r\n      solicitado: 0,\r\n      data: [],\r\n      temporalidad: \"day\",\r\n      cantidadDatos: 30,\r\n      cambio24h: 0,\r\n\r\n      msj: {},\r\n\r\n    };\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n    this.compra = this.compra.bind(this);\r\n    this.venta = this.venta.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n\r\n    this.handleChangeBRUT = this.handleChangeBRUT.bind(this);\r\n    this.handleChangeUSDT = this.handleChangeUSDT.bind(this);\r\n    this.consultarPrecio = this.consultarPrecio.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"BRUT | Brutus Token\";\r\n    this.grafico(1000, \"day\", 30);\r\n    this.consultarPrecio();\r\n\r\n    intervalId = setInterval(() => {\r\n\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (!this.props.contrato.ready) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado();\r\n      }\r\n\r\n    }, 3 * 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n  handleChange(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, evento, this.state.cantidadDatos);\r\n    this.setState({ temporalidad: evento });\r\n  }\r\n\r\n  handleChange2(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, this.state.temporalidad, evento);\r\n    this.setState({ cantidadDatos: evento });\r\n  }\r\n\r\n  async handleChangeBRUT(event) {\r\n    this.consultarPrecio();\r\n    await this.setState({ valueBRUT: event.target.value });\r\n\r\n    this.setState({ valueUSDT: parseFloat((this.state.valueBRUT * this.state.precioBRUT).toPrecision(8)) });\r\n\r\n  }\r\n\r\n  async handleChangeUSDT(event) {\r\n    this.consultarPrecio();\r\n\r\n    await this.setState({ valueUSDT: event.target.value });\r\n\r\n    this.setState({ valueBRUT: parseFloat((this.state.valueUSDT / this.state.precioBRUT).toPrecision(8)) });\r\n\r\n\r\n  }\r\n\r\n  async consultarPrecio() {\r\n\r\n    var proxyUrl = utils.proxy;\r\n    var apiUrl = utils.PRICE;\r\n\r\n    var response;\r\n    var cambio = 0;\r\n\r\n    let precio;\r\n    try {\r\n      response = await fetch(proxyUrl + apiUrl).then((res) => { return res.json() }).catch(error => { console.error(error) })\r\n      precio = response.Data.usd;\r\n      cambio = response.Data.v24h\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      precio = this.state.precioBRUT;\r\n      cambio = this.state.cambio24h\r\n\r\n    }\r\n\r\n\r\n    let market = 0;\r\n    let tokens = 0;\r\n\r\n    try {\r\n      response = await fetch(proxyUrl + utils.market_brut).then((res) => { return res.json() }).catch(error => { console.error(error) })\r\n      market = response.marketcap.usdt;\r\n      tokens = response.circulatingSupply;\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      market = this.state.enBrutus;\r\n      tokens = this.state.tokensEmitidos\r\n\r\n    }\r\n\r\n    this.setState({\r\n      cambio24h: new BigNumber(cambio).dp(3).toString(10),\r\n      precioBRUT: new BigNumber(precio).dp(2).toString(10),\r\n      enBrutus: market,\r\n      tokensEmitidos: tokens\r\n\r\n    })\r\n\r\n\r\n    return response;\r\n\r\n  };\r\n\r\n  async estado() {\r\n\r\n    let { accountAddress, contrato } = this.props;\r\n\r\n    if (!contrato.ready) return;\r\n\r\n    let aprovadoUSDT = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    if (aprovadoUSDT.remaining) aprovadoUSDT = aprovadoUSDT.remaining;\r\n    aprovadoUSDT = utils.normalizarNumero(aprovadoUSDT)\r\n\r\n    let balanceUSDT = await contrato.USDT.balanceOf(accountAddress).call();\r\n    balanceUSDT = utils.normalizarNumero(balanceUSDT)\r\n\r\n    if (aprovadoUSDT >= balanceUSDT) {\r\n      aprovadoUSDT = \"Buy \";\r\n    } else {\r\n      aprovadoUSDT = \"Approve Purchases\";\r\n      this.setState({\r\n        valueUSDT: \"\"\r\n      })\r\n    }\r\n\r\n    let aprovadoBRUT = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    if (aprovadoBRUT.remaining) aprovadoBRUT = aprovadoBRUT.remaining;\r\n    aprovadoBRUT = utils.normalizarNumero(aprovadoBRUT);\r\n\r\n    let balanceBRUT = await contrato.BRUT.balanceOf(accountAddress).call();\r\n    balanceBRUT = utils.normalizarNumero(balanceBRUT);\r\n\r\n    if (aprovadoBRUT >= balanceBRUT) {\r\n      aprovadoBRUT = \"Sell \";\r\n    } else {\r\n      aprovadoBRUT = \"Approve Sales\";\r\n      this.setState({\r\n        valueBRUT: \"\"\r\n      })\r\n    }\r\n\r\n    let supplyBRUT = await contrato.BRUT.totalSupply().call();\r\n    supplyBRUT = utils.normalizarNumero(supplyBRUT);\r\n\r\n    this.setState({\r\n      depositoUSDT: aprovadoUSDT,\r\n      depositoBRUT: aprovadoBRUT,\r\n      balanceBRUT,\r\n      balanceUSDT,\r\n      wallet: accountAddress,\r\n      totalCirculando: supplyBRUT\r\n    });\r\n\r\n  }\r\n\r\n  async compra() {\r\n\r\n    let { minCompra } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let amount = document.getElementById(\"amountUSDT\").value;\r\n    amount = utils.normalizarNumero(amount.replace(/,/g, \".\"), 0);\r\n\r\n    let aprovado = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    if (aprovado <= 0) {\r\n      let inputs = [\r\n        { type: 'address', value: contrato.BRUT_USDT.address },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"allowance(address,uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction hash: {r.txid}</> } })\r\n\r\n        })\r\n      //await contrato.USDT.approve(contrato.USDT, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n      aprovado = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    }\r\n\r\n    if (aprovado.remaining) aprovado = aprovado.remaining;\r\n    aprovado = utils.normalizarNumero(aprovado);\r\n\r\n    if (aprovado >= amount) {\r\n      if (amount >= minCompra) {\r\n\r\n        let inputs = [\r\n          //{ type: 'address', value: AddressContract },\r\n          { type: 'uint256', value: utils.numberToStringCero(amount) }\r\n        ]\r\n\r\n        let funcion = \"comprar(uint256)\"\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n            return false;\r\n          })\r\n        if (!transaction) return;\r\n        await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then((r) => {\r\n\r\n            this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n          })\r\n\r\n        document.getElementById(\"amountUSDT\").value = \"\";\r\n\r\n\r\n      } else {\r\n        window.alert(\"Enter an amount greater than \" + minCompra + \" USDT\");\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n      }\r\n\r\n    } else {\r\n\r\n\r\n      if (aprovado <= 0) {\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n        window.alert(\"Not enough USDT\");\r\n      } else {\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n        window.alert(\"invalid value\");\r\n      }\r\n\r\n    }\r\n\r\n    this.estado();\r\n  };\r\n\r\n  async venta() {\r\n\r\n    const { minventa, balanceBRUT } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let amount = document.getElementById(\"amountBRUT\").value;\r\n    amount = utils.normalizarNumero(amount.replace(/,/g, \".\"), 0)\r\n\r\n    let aprovado = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    if (aprovado <= 0) {\r\n      let inputs = [\r\n        { type: 'address', value: contrato.BRUT_USDT.address },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"allowance(address,uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction hash: {r.txid}</> } })\r\n\r\n        })\r\n      aprovado = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    }\r\n\r\n    if (aprovado.remaining) aprovado = aprovado.remaining;\r\n    aprovado = utils.normalizarNumero(aprovado);\r\n\r\n    if (amount < minventa) {\r\n      document.getElementById(\"amountBRUT\").value = minventa;\r\n      this.setState({ msj: { title: \"Error\", message: \"Place an amount greater than \" + minventa + \" BRUT\" } })\r\n      return;\r\n    }\r\n\r\n    if (amount > balanceBRUT) {\r\n      document.getElementById(\"amountBRUT\").value = minventa;\r\n      this.setState({ msj: { title: \"Error\", message: \"Insuficient BRUT\" } })\r\n      return;\r\n    }\r\n\r\n\r\n    if (aprovado >= amount) {\r\n\r\n      let inputs = [\r\n        //{ type: 'address', value: AddressContract },\r\n        { type: 'uint256', value: utils.numberToStringCero(amount) }\r\n      ]\r\n\r\n      let funcion = \"vender(uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n        })\r\n\r\n      document.getElementById(\"amountBRUT\").value = \"\";\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async grafico(time, temporalidad, cantidad) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n\r\n    const root = am5.Root.new(\"chartdiv\");\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        pinchZoomX: true\r\n      })\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"none\"\r\n    }));\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    // Generate random data\r\n    let value = 0;\r\n    let previousValue = value;\r\n    let downColor = root.interfaceColors.get(\"negative\");\r\n    let upColor = root.interfaceColors.get(\"positive\");\r\n    let color;\r\n    let previousColor;\r\n    let previousDataObj;\r\n\r\n    function generateData(data) {\r\n      value = data.value;\r\n      let date = data.date\r\n\r\n      if (value >= previousValue) {\r\n        color = upColor;\r\n      } else {\r\n        color = downColor;\r\n      }\r\n      previousValue = value;\r\n\r\n      let dataObj = { date , value, color }; // color will be used for tooltip background\r\n\r\n      // only if changed\r\n      if (color !== previousColor) {\r\n        if (!previousDataObj) {\r\n          previousDataObj = dataObj;\r\n        }\r\n        previousDataObj.strokeSettings = { stroke: color };\r\n      }\r\n\r\n      previousDataObj = dataObj;\r\n      previousColor = color;\r\n\r\n      return dataObj;\r\n    }\r\n\r\n    async function generateDatas(count) {\r\n      let consulta = (await (await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brut?temporalidad=\" + temporalidad + \"&limite=\" + count)).json()).Data\r\n      let data = []\r\n\r\n      for (var i = consulta.length - 1; i >= 0; --i) {\r\n        data.push(generateData(consulta[i]));\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"Series\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\"\r\n      })\r\n    );\r\n\r\n    series.strokes.template.set(\"templateField\", \"strokeSettings\");\r\n\r\n    let tooltip = series.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      labelText: \"{valueY}\"\r\n    }));\r\n\r\n    // this is added in ored adapter to be triggered each time position changes\r\n    tooltip.on(\"pointTo\", function () {\r\n      let background = tooltip.get(\"background\");\r\n      background.set(\"fill\", background.get(\"fill\"));\r\n    });\r\n\r\n    // tooltip bacground takes color from data item\r\n    tooltip.get(\"background\").adapters.add(\"fill\", function (fill) {\r\n      if (tooltip.dataItem) {\r\n        return tooltip.dataItem.dataContext.color;\r\n      }\r\n      return fill;\r\n    });\r\n\r\n    // Add scrollbar\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n    //scrollbar.parent = chart.bottomAxesContainer;\r\n    let scrollbar = chart.set(\r\n      \"scrollbarX\",\r\n      am5xy.XYChartScrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n        height: 30\r\n      })\r\n    );\r\n\r\n    let sbDateAxis = scrollbar.chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: {\r\n          timeUnit: temporalidad,\r\n          count: 1\r\n        },\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbValueAxis = scrollbar.chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbSeries = scrollbar.chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        xAxis: sbDateAxis,\r\n        yAxis: sbValueAxis,\r\n\r\n      })\r\n    );\r\n\r\n    // Generate and set data  | \r\n    let data = await generateDatas(cantidad);\r\n    series.data.setAll(data);\r\n    sbSeries.data.setAll(data);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n\r\n\r\n    series.appear(time);\r\n    chart.appear(time, time / 10);\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  render() {\r\n\r\n    let { minCompra, minventa, msj } = this.state;\r\n\r\n    minCompra = \"Min. \" + minCompra + \" USDT\";\r\n    minventa = \"Min. \" + minventa + \" BRUT\";\r\n\r\n    return (<>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"nav-bitcoin\" role=\"tabpanel\" aria-labelledby=\"nav-bitcoin-tab\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-xxl-9 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                  <div className=\"card coin-content\">\r\n                    <div className=\"card-header border-0 flex-wrap\">\r\n                      <div className=\"mb-2\">\r\n                        <h4 className=\"heading m-0\">BRUT Chart</h4>\r\n                        <span className=\"fs-16\">Brutus Algorithmic Trading Robot </span>\r\n                      </div>\r\n                      <div className=\"dropdown bootstrap-select\">\r\n                        <select className=\"image-select default-select dashboard-select\" aria-label=\"Default\" tabIndex=\"0\" defaultValue=\"usdt\" style={{ background: \"rgb(3 0 8 / 49%)\"}}>\r\n                          <option value={\"usdt\"}>USD₮ (Tether)</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-18 d-block mb-2\">Price</span>\r\n                            <h4 className=\"fs-20 font-w600\">${this.state.precioBRUT}</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">24h% change</span>\r\n                            <h4 className=\"font-w600 text-success\">{this.state.cambio24h}<i className=\"fa-solid fa-caret-up ms-1 text-success\"></i></h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">Circulating</span>\r\n                            <h4 className=\"font-w600\">{(this.state.tokensEmitidos * 1).toFixed(2)}</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">Market Cap</span>\r\n                            <h4 className=\"font-w600\">${(this.state.enBrutus * 1).toFixed(2)}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\" id=\"chartdiv\" style={{ height: \"400px\", backgroundColor: \"white\" }}></div>\r\n\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: \"white\" }} value={this.state.cantidadDatos} onChange={this.handleChange2}>\r\n                        {options2.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      {\" | \"}\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: \"white\" }} value={this.state.temporalidad} onChange={this.handleChange}>\r\n                        {options.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-xxl-3 col-sm-6 wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                  <div className=\"card  digital-cash\">\r\n\r\n                    <div className=\"card-body \">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"media d-block\">\r\n                          <img src=\"images/brut.png\" width=\"100%\" alt=\"brutus token\" ></img>\r\n                          <div className=\"media-content\">\r\n                            <h4 className=\"mt-0 mt-md-4 fs-20 font-w700 text-black mb-0\">Automated Trading</h4>\r\n                            <span className=\"font-w600 text-black\">Brutus</span>\r\n                            <span className=\"my-4 fs-16 font-w600 d-block\">1 BRUT = {this.state.precioBRUT} USD</span>\r\n                            <p className=\"text-start\">The Brutus Token is a Tron-based token whose value is backed by an automated trading strategy that uses backtesting and capital management to maximize profits and minimize losses. The value of the Brutus Token is pegged to USDT, so its value remains stable in USD terms.</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer p-2 border-0\">\r\n                      <a href=\"https://brutus.finance/brutusblog.html\" className=\"btn btn-link text-primary\">Read more</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-6 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                  <div className=\"card quick-trade\">\r\n                    <div className=\"card-header pb-0 border-0 flex-wrap\">\r\n                      <div>\r\n                        <h4 className=\"heading mb-0\">Quick Trade</h4>\r\n                        <p className=\"mb-0 fs-14\">without fees</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body pb-0\">\r\n                      <div className=\"basic-form\">\r\n                        <form className=\"form-wrapper trade-form\">\r\n                          <div className=\"input-group mb-3 \">\r\n                            <span className=\"input-group-text\">BRUT</span>\r\n                            <input className=\"form-control form-control text-end\" type=\"number\" id=\"amountBRUT\" onChange={this.handleChangeBRUT} placeholder={minventa} min={this.state.minventa} max={this.state.balanceBRUT} value={this.state.valueBRUT} step={0.5} ></input>\r\n                          </div>\r\n                          <div className=\"input-group mb-3 \">\r\n                            <span className=\"input-group-text\">USDT</span>\r\n                            <input className=\"form-control form-control text-end\" type=\"number\" id=\"amountUSDT\" onChange={this.handleChangeUSDT} placeholder={minCompra} min={this.state.minCompra} max={this.state.balanceUSDT} value={this.state.valueUSDT} ></input>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer border-0\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button className=\"btn d-flex  btn-success justify-content-between w-100\" onClick={() => this.compra()}>\r\n                            BUY\r\n                            <svg className=\"ms-4 scale5\" width=\"16\" height=\"16\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M5.35182 13.4965L5.35182 13.4965L5.33512 6.58823C5.33508 6.5844 5.3351 6.58084 5.33514 6.57759M5.35182 13.4965L5.83514 6.58306L5.33514 6.58221C5.33517 6.56908 5.33572 6.55882 5.33597 6.5545L5.33606 6.55298C5.33585 6.55628 5.33533 6.56514 5.33516 6.57648C5.33515 6.57684 5.33514 6.57721 5.33514 6.57759M5.35182 13.4965C5.35375 14.2903 5.99878 14.9324 6.79278 14.9305C7.58669 14.9287 8.22874 14.2836 8.22686 13.4897L8.22686 13.4896L8.21853 10.0609M5.35182 13.4965L8.21853 10.0609M5.33514 6.57759C5.33752 5.789 5.97736 5.14667 6.76872 5.14454C6.77041 5.14452 6.77217 5.14451 6.77397 5.14451L6.77603 5.1445L6.79319 5.14456L13.687 5.16121L13.6858 5.66121L13.687 5.16121C14.4807 5.16314 15.123 5.80809 15.1211 6.6022C15.1192 7.3961 14.4741 8.03814 13.6802 8.03626L13.6802 8.03626L10.2515 8.02798L23.4341 21.2106C23.9955 21.772 23.9955 22.6821 23.4341 23.2435C22.8727 23.8049 21.9625 23.8049 21.4011 23.2435L8.21853 10.0609M5.33514 6.57759C5.33513 6.57959 5.33514 6.58159 5.33514 6.5836L8.21853 10.0609M6.77407 5.14454C6.77472 5.14454 6.77537 5.14454 6.77603 5.14454L6.77407 5.14454Z\" fill=\"white\" stroke=\"white\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button className=\"btn d-flex  btn-danger justify-content-between w-100\" onClick={() => this.venta()}>\r\n                            SELL\r\n                            <svg className=\"ms-4 scale3\" width=\"16\" height=\"16\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M16.9638 11.5104L16.9721 14.9391L3.78954 1.7565C3.22815 1.19511 2.31799 1.19511 1.75661 1.7565C1.19522 2.31789 1.19522 3.22805 1.75661 3.78943L14.9392 16.972L11.5105 16.9637L11.5105 16.9637C10.7166 16.9619 10.0715 17.6039 10.0696 18.3978C10.0677 19.1919 10.7099 19.8369 11.5036 19.8388L11.5049 19.3388L11.5036 19.8388L18.3976 19.8554L18.4146 19.8555L18.4159 19.8555C18.418 19.8555 18.42 19.8555 18.422 19.8555C19.2131 19.8533 19.8528 19.2114 19.8555 18.4231C19.8556 18.4196 19.8556 18.4158 19.8556 18.4117L19.8389 11.5035L19.8389 11.5035C19.8369 10.7097 19.1919 10.0676 18.3979 10.0695C17.604 10.0713 16.9619 10.7164 16.9638 11.5103L16.9638 11.5104Z\" fill=\"white\" stroke=\"white\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex mt-3 align-items-center\">\r\n                        <div className=\"form-check custom-checkbox me-3\">\r\n                          <label className=\"form-check-label fs-14 font-w400\" htmlFor=\"customCheckBox1\">We recommend keeping ~ 21 TRX for transactions.</label>\r\n                        </div>\r\n                        <p className=\"mb-0\"></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-12 wow fadeInUp\" data-wow-delay=\"0.6s\">\r\n                  <div className=\"card price-list\">\r\n                    <div className=\"card-header border-0 pb-2\">\r\n                      <div className=\"chart-title\">\r\n                        <h4 className=\"text-warning mb-0\">My Assets</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body p-3 py-0\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table text-center bg-warning-hover order-tbl\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"text-left\">Token</th>\r\n                              <th className=\"text-center\">Amount</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.handleChangeBRUT({ target: { value: this.state.balanceBRUT } }) }}>\r\n                              <td className=\"text-left\">BRUT</td>\r\n                              <td>{this.state.balanceBRUT}</td>\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.handleChangeUSDT({ target: { value: this.state.balanceUSDT } }) }}>\r\n                              <td className=\"text-left\">USDT</td>\r\n                              <td>{this.state.balanceUSDT}</td>\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-center py-3 border-0\">\r\n                      <a href=\"/\" className=\"btn-link text-black\">Show more <i className=\"fa fa-caret-right\"></i></a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert {...msj} />\r\n    </>);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\nBigNumber.config({ DECIMAL_PLACES: 6, ROUNDING_MODE: BigNumber.ROUND_HALF_DOWN });\r\n\r\nconst imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" ></img>\r\n\r\nconst options = [\r\n  {\r\n    label: \"Hours\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    label: \"Days\",\r\n    value: \"day\",\r\n  }\r\n];\r\n\r\n/*\r\n\r\n  {\r\n    label: \"Semanal\",\r\n    value: \"week\",\r\n  },\r\n  {\r\n    label: \"Mensual\",\r\n    value: \"month\",\r\n  }\r\n*/\r\n\r\nconst options2 = [\r\n  {\r\n    label: \"Last 7 \",\r\n    value: \"7\",\r\n  },\r\n  {\r\n    label: \"Last 30 \",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"Last 90 \",\r\n    value: \"90\",\r\n  },\r\n  {\r\n    label: \"Last 180 \",\r\n    value: \"180\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nconst optionsHours = [\r\n  {\r\n    label: \"Last 6 \",\r\n    value: \"6\",\r\n  },\r\n  {\r\n    label: \"Last 12 \",\r\n    value: \"12\",\r\n  },\r\n  {\r\n    label: \"Last 24 \",\r\n    value: \"24\",\r\n  },\r\n  {\r\n    label: \"Last 48 \",\r\n    value: \"48\",\r\n  },\r\n  {\r\n    label: \"Last 72 \",\r\n    value: \"72\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nlet earnings = []\r\nlet iniciado = 0;\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nexport default class Staking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      minCompra: 1,\r\n      minventa: 1,\r\n      deposito: props.i18n.t(\"loading\") + \"...\",\r\n      valueBRST: \"\",\r\n      valueTRX: \"\",\r\n      cantidad: 0,\r\n      tiempo: 0,\r\n      enBrutus: 0,\r\n      tokensEmitidos: 0,\r\n      enPool: 0,\r\n      solicitado: 0,\r\n      data: [],\r\n      solicitudes: 0,\r\n      solicitudesV3: 0,\r\n      temporalidad: props.i18n.t(\"day\"),\r\n      cantidadDatos: 30,\r\n      dias: props.i18n.t(\"loading\") + \"...\",\r\n      days: [{ days: 30, amount: 0, time: 0, APY: 0 }, { days: 90, amount: 0, time: 0, APY: 0 }, { days: 180, amount: 0, time: 0, APY: 0 }, { days: 360, amount: 0, time: 0, APY: 0 }],\r\n      varBrut: 0,\r\n      precioBrst: 0,\r\n      varBrst: 0,\r\n      misBRST: 0,\r\n      dataBRST: [],\r\n      contractEnergy: 0,\r\n      userEnergy: 0,\r\n      ModalTitulo: \"\",\r\n      ModalBody: \"\",\r\n      tiempoPromediado: 30,\r\n      promE7to1day: 0,\r\n      resultCalc: 0,\r\n      diasCalc: 360,\r\n      brutCalc: 1000,\r\n      balanceBRST: 0,\r\n      balanceTRX: 0,\r\n      balanceUSDT: new BigNumber(0),\r\n      balanceUSDD: new BigNumber(0),\r\n      globDepositos: [],\r\n      eenergy: 62000,\r\n      energyOn: false,\r\n      total_required: 0,\r\n      isOwner: false,\r\n      isAdmin: false,\r\n      interesCompuesto: 0,\r\n      crecimientoPorcentual: 0,\r\n      precioUSDT: new BigNumber(0),\r\n      precioUSDD: new BigNumber(0),\r\n      retiroRapido: new BigNumber(0),\r\n      penalty: 0,\r\n      from: \"trx\",\r\n      to: \"brst\",\r\n      par: \"trx_brst\",\r\n      selector: \"trx\",\r\n      rapida: true,\r\n      valueFrom: new BigNumber(0),\r\n      valueTo: new BigNumber(0),\r\n\r\n    };\r\n\r\n\r\n    this.subeobaja = this.subeobaja.bind(this);\r\n    this.textoE = this.textoE.bind(this);\r\n    this.consultaPrecio = this.consultaPrecio.bind(this);\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n    this.compra = this.compra.bind(this);\r\n\r\n    this.venta = this.venta.bind(this);\r\n\r\n    this.retiro = this.retiro.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.preClaim = this.preClaim.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n\r\n    this.handleChangeDias = this.handleChangeDias.bind(this);\r\n    this.handleChangeCalc = this.handleChangeCalc.bind(this);\r\n\r\n    this.llenarBRST = this.llenarBRST.bind(this);\r\n    this.llenarTRX = this.llenarTRX.bind(this);\r\n\r\n    this.rentEnergy = this.rentEnergy.bind(this);\r\n\r\n    this.handleCurrencyChangeFrom = this.handleCurrencyChangeFrom.bind(this);\r\n    this.handleCurrencyChangeTo = this.handleCurrencyChangeTo.bind(this);\r\n\r\n    this.calcExchange = this.calcExchange.bind(this);\r\n    this.exchangeTokens = this.exchangeTokens.bind(this);\r\n    this.suawpTokenFromTRX = this.suawpTokenFromTRX.bind(this);\r\n\r\n    this.calculoEnergy = this.calculoEnergy.bind(this);\r\n\r\n    this.preExchange = this.preExchange.bind(this);\r\n\r\n    this.costEnergy = this.costEnergy.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    document.title = \"BRST | Brutus.Finance\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"brst.tittle\")\r\n    intervalId = setInterval(() => {\r\n\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (!this.props.contrato.ready) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado();\r\n      }\r\n\r\n    }, 3 * 1000);\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    clearInterval(intervalId)\r\n\r\n  }\r\n\r\n  handleCurrencyChangeFrom = (event) => {\r\n    let { to } = this.state\r\n    const selectedCurrency = event.target.value;\r\n    if (selectedCurrency === \"usdt\") to = \"brst\"\r\n    if (selectedCurrency === \"usdd\") to = \"brst\"\r\n\r\n    if (selectedCurrency === to) {\r\n      if (selectedCurrency === \"trx\") {\r\n        to = \"brst\"\r\n      } else {\r\n        to = \"trx\"\r\n      }\r\n    }\r\n    document.getElementById('currencySelectTo').value = to\r\n    this.setState({\r\n      from: selectedCurrency,\r\n      to,\r\n      par: selectedCurrency + \"_\" + to\r\n    }); // Guarda la moneda seleccionada en el estado\r\n    this.calcExchange(false, selectedCurrency + \"_\" + to)\r\n\r\n  };\r\n\r\n  handleCurrencyChangeTo = (event) => {\r\n    let { from } = this.state\r\n    const selectedCurrency = event.target.value;\r\n\r\n    if (selectedCurrency === \"trx\") from = \"brst\"\r\n    if (selectedCurrency === \"brst\") from = \"trx\"\r\n\r\n    document.getElementById('currencySelectFrom').value = from\r\n\r\n    this.setState({\r\n      from,\r\n      to: selectedCurrency,\r\n      par: from + \"_\" + selectedCurrency\r\n    }); // Guarda la cantidad ingresada en el estado\r\n    this.calcExchange(true, selectedCurrency + \"_\" + from)\r\n  };\r\n\r\n  handleChange(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, evento, this.state.cantidadDatos, document.getElementById(\"selector\").value);\r\n    this.setState({ temporalidad: evento });\r\n  }\r\n\r\n  handleChange2(e) {\r\n    let evento = parseInt(e.target.value);\r\n    this.grafico(500, this.state.temporalidad, evento, document.getElementById(\"selector\").value);\r\n    this.setState({ cantidadDatos: evento });\r\n  }\r\n\r\n  handleChangeDias(event) {\r\n    let dato = event.target.value;\r\n\r\n    let oper = ((this.state.brutCalc * this.state.precioBrst * ((this.state.promE7to1day) / 100))).toFixed(6)\r\n    oper = oper * parseInt(dato)\r\n    this.setState({\r\n      diasCalc: parseInt(dato),\r\n      resultCalc: oper\r\n    });\r\n  }\r\n\r\n  handleChangeCalc(event) {\r\n    let dato = event.target.value;\r\n    let oper = ((dato * this.state.precioBrst * ((this.state.promE7to1day) / 100))).toFixed(6)\r\n    oper = oper * parseInt(this.state.diasCalc)\r\n\r\n    this.setState({\r\n      brutCalc: dato,\r\n      resultCalc: oper\r\n    });\r\n  }\r\n\r\n  calcExchange(out = false, swap = \"trx_brst\") {\r\n    let { precioBrst, precioUSDT, precioUSDD } = this.state\r\n    let element = out ? \"amountTo\" : \"amountFrom\"\r\n\r\n    let salida = new BigNumber(0)\r\n\r\n    if (precioUSDT.toNumber() <= 0 || precioUSDD.toNumber() <= 0) return salida;\r\n\r\n    let entrada = (document.getElementById(element).value).replace(/,/g, \".\")\r\n    entrada = new BigNumber(parseFloat(entrada))\r\n\r\n    if (out) {\r\n      this.setState({ valueTo: entrada })\r\n    } else {\r\n      this.setState({ valueFrom: entrada })\r\n    }\r\n\r\n    switch (swap) {\r\n      case \"usdt_brst\":\r\n        salida = entrada.div(precioUSDT)\r\n        salida = salida.div(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_usdt\":\r\n        salida = entrada.times(precioUSDT)\r\n        salida = salida.times(precioBrst)\r\n        break;\r\n\r\n      case \"usdd_brst\":\r\n        salida = entrada.div(precioUSDD)\r\n        salida = salida.div(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_usdd\":\r\n        salida = entrada.times(precioUSDD)\r\n        salida = salida.times(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_trx\":\r\n        salida = entrada.times(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"trx_brst\":\r\n        salida = entrada.div(precioBrst)\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n    element = !out ? \"amountTo\" : \"amountFrom\"\r\n\r\n    if (!isNaN(salida.toString(10))) {\r\n      document.getElementById(element).value = salida.toString(10)\r\n    }\r\n\r\n    //console.log(swap, entrada.toString(10), salida.toString(10))\r\n\r\n    if (!out) {\r\n      this.setState({ valueTo: salida })\r\n    } else {\r\n      this.setState({ valueFrom: salida })\r\n    }\r\n\r\n    return salida\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { tiempoPromediado, rapida } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    if (!contrato.ready) return;\r\n\r\n\r\n    let precio = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.RATE().call())\r\n\r\n    this.setState({\r\n      precioBrst: precio\r\n    });\r\n\r\n    contrato.BRST_TRX_Proxy.TRON_BALANCE().call()\r\n      .then((enBrutus) => {\r\n        this.setState({ enBrutus: utils.normalizarNumero(enBrutus) })\r\n      })\r\n\r\n    contrato.BRST_TRX_Proxy.TRON_PAY_BALANCE().call()\r\n      .then((enPool) => {\r\n        this.setState({ enPool: utils.normalizarNumero(enPool) })\r\n      })\r\n\r\n    contrato.BRST_TRX_Proxy.TRON_SOLICITADO().call()\r\n      .then((solicitado) => {\r\n        this.setState({ solicitado: utils.normalizarNumero(solicitado) })\r\n      })\r\n\r\n    contrato.BRST.totalSupply().call()\r\n      .then((tokensEmitidos) => {\r\n        this.setState({ tokensEmitidos: utils.normalizarNumero(tokensEmitidos) })\r\n      })\r\n\r\n    let misBRST = await contrato.BRST.balanceOf(accountAddress).call()\r\n      .then((balanceBRST) => {\r\n        balanceBRST = utils.normalizarNumero(balanceBRST)\r\n        this.setState({\r\n          balanceBRST: balanceBRST,\r\n          misBRST: balanceBRST\r\n        })\r\n        return balanceBRST\r\n      })\r\n\r\n    contrato.USDT.balanceOf(accountAddress).call()\r\n      .then((balanceUSDT) => {\r\n        this.setState({ balanceUSDT: utils.normalizarNumero(balanceUSDT) })\r\n      })\r\n\r\n    contrato.USDD.balanceOf(accountAddress).call()\r\n      .then((balanceUSDD) => {\r\n        this.setState({ balanceUSDD: utils.normalizarNumero(balanceUSDD, 18) })\r\n      })\r\n\r\n    this.consultaPrecio();\r\n\r\n    if (iniciado === 0) {\r\n      this.grafico(1000, \"day\", 90, \"trx\");\r\n      iniciado++;\r\n    }\r\n\r\n\r\n    if (parseInt(this.state.resultCalc) === 1000) {\r\n      this.handleChangeCalc({ target: { value: misBRST } })\r\n    }\r\n\r\n    if (parseInt(document.getElementById(\"hold\").value) === 0) {\r\n      document.getElementById(\"hold\").value = misBRST\r\n\r\n    }\r\n\r\n    //let balance = await tronWeb.trx.getBalance() / 10 ** 6;\r\n    let balance = await tronWeb.trx.getUnconfirmedBalance(accountAddress)\r\n      .catch(async (e) => {\r\n        console.log(e.toString())\r\n        return await tronWeb.trx.getBalance(accountAddress)\r\n      })\r\n\r\n    balance = balance / 10 ** 6;\r\n    this.setState({\r\n      balanceTRX: balance,\r\n    })\r\n\r\n    let cuenta = await tronWeb.trx.getAccountResources(accountAddress)\r\n      .catch((e) => {\r\n        console.log(e.toString())\r\n        return {};\r\n      })\r\n\r\n    let penalty = (parseInt(await contrato.BRST_TRX_Proxy_fast.descuentoRapido().call()) / parseInt(await contrato.BRST_TRX_Proxy_fast.precision().call())) * 100\r\n    this.setState({ penalty })\r\n    let loteria = utils.normalizarNumero((await contrato.loteria._premio().call())[0])\r\n    let retiroRapido = parseInt(await contrato.BRST_TRX_Proxy_fast.balance_token_1().call())\r\n    retiroRapido = new BigNumber(retiroRapido).shiftedBy(-6).minus(loteria)\r\n    if (retiroRapido < 0) retiroRapido = new BigNumber(0)\r\n    this.setState({ retiroRapido })\r\n\r\n    let userEnergy = 0\r\n\r\n    if (cuenta.EnergyLimit) {\r\n      userEnergy = cuenta.EnergyLimit\r\n    }\r\n\r\n    if (cuenta.EnergyUsed) {\r\n      userEnergy -= cuenta.EnergyUsed\r\n    }\r\n    this.setState({ userEnergy })\r\n\r\n    let eenergy = 65000;\r\n\r\n    if (balance >= 1) {\r\n      eenergy = (await this.calculoEnergy(rapida)).dp(0).toNumber()\r\n    }\r\n\r\n    this.setState({ eenergy })\r\n\r\n    let useTrx = (await this.costEnergy(eenergy)).toString(10)\r\n    this.setState({ useTrx })\r\n\r\n    fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=day&limite=\" + tiempoPromediado)\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then((consulta) => {\r\n        if (consulta.length > 0) {\r\n\r\n          let promE7to1day = consulta.reduce((acc, item) => acc + item.value, 0);\r\n          promE7to1day = new BigNumber(promE7to1day / consulta.length).toNumber();\r\n\r\n          let crecimientoPorcentual = this.state.varBrst;\r\n\r\n          if (consulta.length >= 2) {\r\n            const valorInicial = consulta[consulta.length - 1].value; // Primer valor del rango\r\n            const valorFinal = consulta[0].value; // Ultimo valor del rango\r\n\r\n            crecimientoPorcentual = ((valorFinal - valorInicial) / valorInicial) * 100;\r\n            crecimientoPorcentual = crecimientoPorcentual / consulta.length;\r\n          }\r\n\r\n          let interesCompuesto = (1 + crecimientoPorcentual / 100) ** tiempoPromediado;\r\n\r\n          this.setState({\r\n            promE7to1day,\r\n            crecimientoPorcentual,\r\n            interesCompuesto,\r\n          })\r\n        }\r\n\r\n      })\r\n      .catch((e) => { return false })\r\n\r\n\r\n    fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=day&limite=361\")\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then((consultaData) => {\r\n        if (consultaData.length > 0) {\r\n\r\n          earnings = [];\r\n\r\n          let dias = [1, 15, 30, 90, 180, 360]\r\n\r\n          for (let index = 0; index < dias.length; index++) {\r\n            earnings.push({\r\n              dias: dias[index],\r\n              trx: (misBRST * consultaData[0].value) - (misBRST * consultaData[dias[index]].value),\r\n              diario: ((misBRST * consultaData[0].value) - (misBRST * consultaData[dias[index]].value)) / dias[index]\r\n            })\r\n\r\n          }\r\n\r\n          this.setState({\r\n            dataBRST: consultaData\r\n          })\r\n        }\r\n      })\r\n      .catch((e) => { return [] })\r\n\r\n    contrato.BRST_TRX_Proxy.MIN_DEPOSIT().call()\r\n      .then((minCompra) => {\r\n        this.setState({ minCompra: utils.normalizarNumero(minCompra) })\r\n      })\r\n\r\n    contrato.BRST.allowance(accountAddress, contrato.BRST_TRX_Proxy.address).call()\r\n      .then((depositoBRUT) => {\r\n        this.setState({ depositoBRUT: utils.normalizarNumero(depositoBRUT) })\r\n      })\r\n\r\n    fetch(\"https://apilist.tronscanapi.com/api/token/price?token=usdt\")\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({ precioUSDT: new BigNumber(1 / r.price_in_trx) })\r\n      })\r\n      .catch((e) => { console.log(e) })\r\n\r\n    fetch(\"https://apilist.tronscanapi.com/api/token/price?token=usdd\")\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({ precioUSDD: new BigNumber(1 / r.price_in_trx) })\r\n      })\r\n      .catch((e) => { console.log(e) })\r\n\r\n\r\n    let deposito = await contrato.BRST_TRX_Proxy.todasSolicitudes(accountAddress).call();\r\n    let myids = []\r\n\r\n    for (let index = 0; index < deposito.length; index++) {\r\n      myids.push(parseInt(deposito[index]));\r\n    }\r\n\r\n    let deposits = await contrato.BRST_TRX_Proxy.solicitudesPendientesGlobales().call();\r\n    deposits = deposits[0];\r\n\r\n    let globDepositos = [];\r\n\r\n    let tiempo = parseInt(await contrato.BRST_TRX_Proxy.TIEMPO().call()) * 1000;\r\n\r\n    let diasDeEspera = (tiempo / (86400 * 1000)).toPrecision(2)\r\n\r\n    let adminsBrst = [\"TWVVi4x2QNhRJyhqa7qrwM4aSXnXoUDDwY\", \"TWqsREyZUtPkBNrzSSCZ9tbzP3U5YUxppf\", \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"]\r\n\r\n    let balance_Pool = new BigNumber(await tronWeb.trx.getBalance(contrato.BRST_TRX_Proxy.address)).shiftedBy(-6)\r\n\r\n    let total_required = new BigNumber(0)\r\n\r\n    this.setState({\r\n      espera: tiempo,\r\n      solicitudes: globDepositos.length,\r\n      dias: diasDeEspera,\r\n\r\n    })\r\n\r\n\r\n    let isOwner = accountAddress === tronWeb.address.fromHex((await contrato.BRST_TRX_Proxy.owner().call()))\r\n    let isAdmin = false;\r\n\r\n    if (adminsBrst.indexOf(accountAddress) >= 0) {\r\n      isAdmin = true;\r\n    }\r\n\r\n    this.setState({ isOwner, isAdmin })\r\n\r\n    for (let index = 0; index < deposits.length; index++) {\r\n\r\n      let pen = await contrato.BRST_TRX_Proxy.verSolicitudPendiente(deposits[index]).call();\r\n      pen = pen[0];\r\n      let inicio = parseInt(pen.tiempo) * 1000\r\n\r\n      let pv = new Date(inicio + tiempo)\r\n\r\n      let diasrestantes = ((inicio + tiempo - Date.now()) / (86400 * 1000)).toPrecision(2)\r\n\r\n      let boton = <b>login with an authorized account</b>\r\n\r\n      let cantidadTrx = new BigNumber(parseInt(pen.brst)).times(parseInt(pen.precio)).shiftedBy(-6)\r\n      total_required = total_required.plus(cantidadTrx.dp(0))\r\n\r\n      if (myids.includes(parseInt(deposits[index])) && diasrestantes > 0) {\r\n        boton = (\r\n          <button className=\"btn btn-info ms-4 disabled\" disabled aria-disabled=\"true\" >\r\n            {\"Processing Unfreeze TRX \"} <i className=\"bi bi-exclamation-circle\"></i>\r\n          </button>\r\n        )\r\n      }\r\n\r\n      if ((myids.includes(parseInt(deposits[index])) && diasrestantes <= 0) || isOwner) {\r\n\r\n\r\n        if (balance_Pool.toNumber() < cantidadTrx.shiftedBy(-6).dp(6).toNumber()) {\r\n\r\n          boton = (\r\n            <button className=\"btn btn-info ms-4 disabled\" disabled aria-disabled=\"true\" >\r\n              {this.props.i18n.t(\"We continue to unfreeze TRX\") + \" \"} <i className=\"bi bi-exclamation-circle\"></i>\r\n            </button>\r\n          )\r\n\r\n        } else {\r\n\r\n          boton = (\r\n            <button className=\"btn btn-primary ms-4\" onClick={async () => {\r\n              await this.preClaim(parseInt(deposits[index]));\r\n              this.estado()\r\n            }}>\r\n              {this.props.i18n.t(\"claim\") + \" \"} <i className=\"bi bi-award\"></i>\r\n            </button>\r\n          )\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      if (diasrestantes <= 0) {\r\n        diasrestantes = 0\r\n      }\r\n\r\n      if (myids.includes(parseInt(deposits[index])) || isOwner || isAdmin) {\r\n        let extraData = <></>\r\n\r\n        if (isOwner || isAdmin) {\r\n          extraData = <><b>Wallet: </b><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/address/\" + tronWeb.address.fromHex(pen.wallet)}>{tronWeb.address.fromHex(pen.wallet)}</a><br></br></>\r\n        }\r\n\r\n        globDepositos[index] = (\r\n\r\n          <div className=\"row mt-4\" id={\"sale-\" + parseInt(deposits[index])} key={\"glob\" + parseInt(deposits[index])}>\r\n            <div className=\"col-12 mb-2\">\r\n\r\n              <h4 className=\"fs-20 text-black\">{this.props.i18n.t(\"brst.sale\", { number: parseInt(deposits[index]) })} {\" -> \"}{parseInt(pen.brst) / 10 ** 6} BRST</h4>\r\n\r\n            </div>\r\n            <div className=\"col-sm-6 mb-2\">\r\n              <p className=\"mb-0 fs-14\">\r\n                {extraData}\r\n                <b>Total: </b>{cantidadTrx.shiftedBy(-6).dp(6).toString(10)} TRX<br></br>\r\n                <b>{this.props.i18n.t(\"brst.price\")}</b> {(parseInt(pen.precio) / 10 ** 6)} TRX<br></br>\r\n                <b>{this.props.i18n.t(\"brst.available\")}</b> {pv.toString()}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-sm-6 mb-2\">\r\n              <p className=\"mb-0 fs-14\">{this.props.i18n.t(\"brst.unStaking\", { days: diasrestantes })}{cantidadTrx.shiftedBy(-6).dp(6).toString(10)} TRX</p>\r\n              <br></br>\r\n              {boton}\r\n            </div>\r\n            <div className=\"col-12 mb-2\">\r\n\r\n              <hr></hr>\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    total_required = total_required.shiftedBy(-6).toString(10)\r\n\r\n    let ownerPanel = (<><input type=\"text\" id=\"wallet\" placeholder=\"wallet to white list\"></input> <button className=\"btn btn-warning\" onClick={async () => {\r\n      let inputs = [\r\n        { type: 'address', value: tronWeb.address.toHex(document.getElementById('wallet')) },\r\n        //{ type: 'uint256', value: 405 * 10 ** 6 }\r\n      ]\r\n\r\n      let funcion = \"whiteList_add(address)\"\r\n      try {\r\n\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy_fast.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n        console.log(transaction)\r\n        alert(\"Transaction \" + transaction.result + \" hash: \" + transaction.txid)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n        alert(error.toString())\r\n      }\r\n\r\n    }}>ADD</button><br></br>\r\n      TRON_RR: {utils.normalizarNumero(await contrato.BRST_TRX_Proxy.TRON_RR().call())}\r\n      <br></br>\r\n      <button className=\"btn btn-warning\" onClick={() => this.retiro()}>SET RR</button>\r\n      <br></br>\r\n\r\n\r\n    </>)\r\n\r\n    if (isAdmin || isOwner) {\r\n      globDepositos.push(<div key=\"admin-panel\">\r\n        {isOwner ? ownerPanel : <></>}\r\n        Balance Pool: {balance_Pool.toString(10)}\r\n\r\n      </div>)\r\n    }\r\n\r\n    this.setState({\r\n      globDepositos,\r\n      total_required\r\n\r\n    })\r\n\r\n    let energyOn = false;\r\n    let energi = 0;\r\n\r\n    energyOn = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL)\r\n      .then((r) => r.json())\r\n      .then((r) => r.available)\r\n      .catch(() => false)\r\n\r\n    if (energyOn) {\r\n      let consulta = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"available\")\r\n        .then((r) => r.json())\r\n\r\n      if (consulta.av_energy.length > 0) {\r\n        energi = consulta.av_energy[0].available\r\n      }\r\n\r\n      if (energi < consulta.total_energy_pool * 0.01) {\r\n        energyOn = false;\r\n      } else {\r\n        energyOn = true;\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n      energyOn,\r\n    })\r\n\r\n  }\r\n\r\n  async preClaim(id) {\r\n\r\n    let { isOwner, userEnergy, energyOn } = this.state\r\n    const { tronWeb, contrato, accountAddress } = this.props\r\n    let eenergy = 0;\r\n\r\n    let inputs = [\r\n      { type: 'uint256', value: id }\r\n    ]\r\n    let funcion = \"retirar(uint256)\"\r\n    const options = {}\r\n    var transaccion = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      .catch(() => { return {} })\r\n\r\n    if (transaccion.energy_used) {\r\n      eenergy += transaccion.energy_used;\r\n    } else {\r\n      eenergy += 80000;\r\n    }\r\n\r\n    if (eenergy > userEnergy && energyOn) {\r\n\r\n      let requerido = eenergy - userEnergy\r\n\r\n      if (requerido < 32000) {\r\n        requerido = 32000;\r\n      } else {\r\n        requerido += 1000;\r\n      }\r\n\r\n      let body = { \"resource\": \"energy\", \"amount\": requerido, \"duration\": \"5min\" }\r\n      let consultaPrecio = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      }).then((r) => r.json())\r\n\r\n      let precio = new BigNumber(consultaPrecio.price).dp(6)\r\n\r\n      let textoModal = this.props.i18n.t(\"brst.alert.energy\", { returnObjects: true })\r\n\r\n      this.setState({\r\n        ModalTitulo: textoModal[0],\r\n        ModalBody: <>{textoModal[1]} <b>{eenergy} {textoModal[2]}</b>{textoModal[3]}<b>{userEnergy} {textoModal[2]}</b> {textoModal[4]} <b>{requerido} {textoModal[2]}</b>{textoModal[5]}<b>{precio.toString(10)} TRX</b>{textoModal[6]}\r\n          <br ></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={async () => {\r\n            if (await this.rentEnergy(requerido)) {\r\n\r\n              if (isOwner) {\r\n                await this.retiro(id)\r\n              }\r\n\r\n              let inputs = [\r\n                //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n                { type: 'uint256', value: id }\r\n              ]\r\n\r\n              let funcion = \"retirar(uint256)\"\r\n              const options = {}\r\n              let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n              let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n              transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n                .catch((e) => {\r\n\r\n                  this.setState({\r\n                    ModalTitulo: \"Error\",\r\n                    ModalBody: e.toString()\r\n                  })\r\n\r\n                  window.$(\"#mensaje-brst\").modal(\"show\");\r\n                })\r\n              transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n                .then(() => {\r\n                  this.setState({\r\n                    ModalTitulo: \"Result\",\r\n                    ModalBody: <>Retiro is Done {transaction.txid}\r\n                      <br ></br><br ></br>\r\n                      <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n                    </>\r\n                  })\r\n\r\n                  window.$(\"#mensaje-brst\").modal(\"show\");\r\n                })\r\n\r\n\r\n\r\n            }\r\n          }}>{textoModal[7]}</button>\r\n\r\n        </>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n    } else {\r\n\r\n      let inputs = [\r\n        //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n        { type: 'uint256', value: id }\r\n      ]\r\n\r\n      let funcion = \"retirar(uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: \"Result\",\r\n            ModalBody: <>Retiro is Done {transaction.txid}\r\n              <br ></br><br ></br>\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n            </>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  subeobaja(valor) {\r\n    var imgNPositivo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_d2)\">\r\n        <path d=\"M5 16C5.91797 14.9157 8.89728 11.7277 10.5 10L16.5 13L23.5 4\"\r\n          stroke=\"#2BC155\" strokeWidth=\"2\" strokeLinecap=\"round\" ></path>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"filter0_d2\" x=\"-3.05176e-05\" y=\"-6.10352e-05\" width=\"28.5001\"\r\n          height=\"22.0001\" filterUnits=\"userSpaceOnUse\"\r\n          colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n          <feOffset dy=\"1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" />\r\n          <feColorMatrix type=\"matrix\"\r\n            values=\"0 0 0 0 0.172549 0 0 0 0 0.72549 0 0 0 0 0.337255 0 0 0 0.61 0\" />\r\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\"\r\n            result=\"effect1_dropShadow\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\"\r\n            result=\"shape\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>);\r\n    var imgNegativo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_d)\">\r\n        <path d=\"M5 4C5.91797 5.08433 8.89728 8.27228 10.5 10L16.5 7L23.5 16\" stroke=\"#FF2E2E\" strokeWidth=\"2\" strokeLinecap=\"round\" ></path>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"28.5001\" height=\"22.0001\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n          <feOffset dy=\"1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" />\r\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.180392 0 0 0 0 0.180392 0 0 0 0.61 0\" />\r\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>);\r\n\r\n    var resultado = imgNPositivo;\r\n\r\n    if (valor < 0) {\r\n      resultado = imgNegativo\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n\r\n  textoE(valor) {\r\n\r\n    var resultado = \"success\";\r\n\r\n    if (valor < 0) {\r\n      resultado = \"danger\"\r\n    }\r\n\r\n    return resultado;\r\n\r\n  }\r\n\r\n  async consultaPrecio() {\r\n\r\n    return await fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brst')\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then(r => {\r\n\r\n        this.setState({\r\n          varBrst: r.v24h\r\n        })\r\n\r\n        return r\r\n\r\n      })\r\n      .catch(err => { console.log(err); return 0; });\r\n\r\n  }\r\n\r\n  llenarBRST() {\r\n    document.getElementById('amountTo').value = this.state.balanceBRST;\r\n    //this.handleChangeBRST({ target: { value: this.state.balanceBRST } })\r\n\r\n  }\r\n\r\n  llenarTRX() {\r\n    document.getElementById('amountFrom').value = this.state.balanceTRX;\r\n    //this.handleChangeTRX({ target: { value: this.state.balanceTRX } })\r\n\r\n  }\r\n\r\n  async calculoEnergy(rapida = false) {\r\n    let from = document.getElementById('currencySelectFrom').value\r\n    let to = document.getElementById('currencySelectTo').value\r\n\r\n    let { userEnergy } = this.state\r\n    const { tronWeb, accountAddress, contrato } = this.props\r\n\r\n    function tokenSelector(name) {\r\n\r\n      let address = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\r\n\r\n      switch (name) {\r\n        case \"usdt\":\r\n          address = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\r\n          break;\r\n\r\n        case \"usdd\":\r\n          address = \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\"\r\n          break;\r\n\r\n        default:\r\n          address = false\r\n          break;\r\n      }\r\n\r\n      return address\r\n\r\n    }\r\n\r\n    let energyRequired = new BigNumber(0)\r\n\r\n    let token = tokenSelector(from)\r\n\r\n    if (token) {\r\n\r\n      let sunswapRouter = \"TCFNp179Lg46D16zKoumd4Poa2WFFdtqYj\" // V3\r\n\r\n      const options2 = {\r\n        method: 'POST',\r\n        headers: { accept: 'application/json', 'content-type': 'application/json' },\r\n        body: JSON.stringify({ value: sunswapRouter, visible: true })\r\n      };\r\n\r\n      let energyFactor = await fetch('https://api.trongrid.io/wallet/getcontract', options2)\r\n        .then(res => res.json())\r\n        .catch(err => { console.error(err); return {} });\r\n\r\n      if (energyFactor.consume_user_resource_percent) {\r\n        energyFactor = energyFactor.consume_user_resource_percent / 100\r\n      } else {\r\n        energyFactor = 1\r\n      }\r\n\r\n      let contract_base_token = tronWeb.contract(utils.TOKEN_ABI, token)\r\n      let decimals_base = parseInt(await contract_base_token.decimals().call())\r\n\r\n      let aprove = await contract_base_token.allowance(accountAddress, sunswapRouter).call()\r\n      if (aprove.remaining) aprove = aprove.remaining\r\n      aprove = parseInt(aprove)\r\n\r\n\r\n      if (aprove <= 1 * 1e6) {\r\n\r\n        let inputs = [\r\n          { type: 'address', value: tronWeb.address.toHex(sunswapRouter) },\r\n          { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" },\r\n        ]\r\n\r\n        let funcion = \"approve(address,uint256)\"\r\n        const options = {}\r\n        let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(token), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n          .catch(() => { return {} })\r\n\r\n        if (trigger.energy_used) {\r\n          //console.log(\"aprovacion \", trigger.energy_used)\r\n          energyRequired = energyRequired.plus(trigger.energy_used)\r\n        }\r\n      }\r\n\r\n\r\n      let monto = new BigNumber(1).shiftedBy(decimals_base).dp(0).toString(10)\r\n\r\n      let consulta = await fetch(\"https://rot.endjgfsv.link/swap/router?fromToken=\" + token + \"&toToken=T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb&amountIn=\" + monto + \"&typeList=SUNSWAP_V3,SUNSWAP_V2,WTRX\")\r\n        .then((r) => r.json())\r\n        .then((r) => r.data[0])\r\n\r\n      function distributeTokens(totalTokens, versions) {\r\n        let result = new Array(versions.length).fill(0); // Inicializamos el array con ceros\r\n        let remainingTokens = totalTokens;\r\n\r\n        // Asignamos 1 token a cada elemento si hay suficientes tokens disponibles\r\n        for (let i = 0; i < versions.length && remainingTokens > 0; i++) {\r\n          result[i] = 1;\r\n          remainingTokens--;\r\n        }\r\n\r\n        // Distribuimos los tokens restantes de forma balanceada\r\n        let index = 0;\r\n        while (remainingTokens > 0) {\r\n          result[index]++;\r\n          remainingTokens--;\r\n          index = (index + 1) % versions.length; // Ciclar en el array\r\n        }\r\n\r\n        return result;\r\n      }\r\n\r\n      let inputs = [\r\n        { type: 'address[]', value: consulta.tokens },\r\n        { type: 'string[]', value: consulta.poolVersions },\r\n        { type: 'uint256[]', value: distributeTokens(consulta.tokens.length, consulta.poolVersions) },\r\n        { type: 'uint24[]', value: consulta.poolFees },\r\n        {\r\n          type: '(uint256,uint256,address,uint256)',\r\n          value: [\r\n            new BigNumber(consulta.amountIn).shiftedBy(decimals_base).dp(0).toString(10),\r\n            new BigNumber(consulta.amountOut).times(0.995).shiftedBy(6).dp(0).toString(10),\r\n            (tronWeb.address.toHex(accountAddress)).replace(/41/g, \"0x\"),\r\n            ((parseInt(Date.now() / 1000)) + 100).toString(10)\r\n          ]\r\n        }\r\n\r\n      ]\r\n\r\n      let funcion = \"swapExactInput(address[],string[],uint256[],uint24[],(uint256,uint256,address,uint256))\"\r\n      const options = { feeLimit: 10000 * 1e6, callValue: 0 }\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(sunswapRouter), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n        //console.log(\"swap \", trigger.energy_used * energyFactor)\r\n        energyRequired = energyRequired.plus(trigger.energy_used * energyFactor)\r\n      }\r\n\r\n    }\r\n\r\n\r\n    if (to === \"brst\") {\r\n\r\n      let inputs = []\r\n\r\n      let funcion = \"staking()\"\r\n      const options = { callValue: 1 * 1e6 }\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n        //console.log(\"staking \", trigger.energy_used)\r\n        energyRequired = energyRequired.plus(trigger.energy_used);\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      let inputs = [\r\n        { type: 'uint256', value: \"1000000\" }\r\n      ]\r\n\r\n      let AddressContract = contrato.BRST_TRX_Proxy.address\r\n\r\n      if (rapida) {\r\n        AddressContract = contrato.BRST_TRX_Proxy_fast.address\r\n      }\r\n\r\n      let funcion = \"esperaRetiro(uint256)\"\r\n      if (rapida) {\r\n        funcion = \"sell_token_2(uint256)\"\r\n      }\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(AddressContract), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n\r\n        console.log(\"retiro \", trigger.energy_used, trigger)\r\n        energyRequired = energyRequired.plus(trigger.energy_used);\r\n      }\r\n\r\n    }\r\n\r\n    energyRequired = energyRequired.plus(1000)\r\n    console.log(\"necesary \", energyRequired.toString(10))\r\n\r\n    energyRequired = energyRequired.minus(userEnergy)\r\n    console.log(\"requerido \", energyRequired.toString(10))\r\n\r\n    if (energyRequired.toNumber() <= 0) {\r\n      energyRequired = new BigNumber(0)\r\n    }else{\r\n      if (energyRequired.toNumber() < 32000) energyRequired = new BigNumber(32000);\r\n\r\n    }\r\n\r\n\r\n    console.log(\"send \", energyRequired.toString(10))\r\n\r\n\r\n    return energyRequired\r\n\r\n  }\r\n\r\n  async costEnergy(cantidad) {\r\n\r\n    cantidad = new BigNumber(cantidad).dp(0)\r\n\r\n    if (cantidad.toNumber() === 0) return new BigNumber(0);\r\n\r\n    let consulta = await fetch(\"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ \"resource\": \"energy\", \"amount\": cantidad.toString(10), \"duration\": \"5min\" })\r\n    }).then((r) => r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false;\r\n      })\r\n\r\n    if (!consulta) return false;\r\n\r\n    let useTrx = new BigNumber(consulta.price).dp(6)\r\n\r\n    this.setState({ useTrx: useTrx.toString(10) })\r\n\r\n    return useTrx\r\n\r\n  }\r\n\r\n  async rentEnergy(cantidad) {\r\n\r\n    cantidad = cantidad.dp(0).toNumber()\r\n\r\n    const { tronWeb, accountAddress } = this.props\r\n    let { energyOn } = this.state\r\n\r\n    if (!energyOn) return false;\r\n\r\n    if (cantidad <= 0) return true;\r\n    if (cantidad < 32000) cantidad = 32000\r\n\r\n    this.setState({\r\n      ModalTitulo: <>Transaction Alert {imgLoading}</>,\r\n      ModalBody: <>\r\n        sign the following transaction if you agree to pay for the energy lease.\r\n      </>\r\n    })\r\n\r\n    window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    let retorno = false;\r\n\r\n    let precio = await this.costEnergy(cantidad)\r\n\r\n    if (!precio) return false;\r\n\r\n    const unSignedTransaction = await tronWeb.transactionBuilder.sendTrx(process.env.REACT_APP_WALLET_API, tronWeb.toSun(precio), accountAddress);\r\n    // using adapter to sign the transaction\r\n    const signedTransaction = await window.tronWeb.trx.sign(unSignedTransaction)\r\n      .catch((e) => {\r\n        this.setState({\r\n          ModalTitulo: \"Transaction failed\",\r\n          ModalBody: <>{e.toString()}\r\n            <br></br><br></br>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>Close</button>\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false;\r\n      })\r\n    // broadcast the transaction\r\n\r\n    if (!signedTransaction) { return false; }\r\n\r\n    this.setState({\r\n      ModalTitulo: <>Processing your order {imgLoading}</>,\r\n      ModalBody: <>\r\n        One of our robots is going to pick up your energy to deliver it to you as soon as possible, this will not take long please wait.\r\n      </>\r\n    })\r\n\r\n    window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    let consulta2 = await utils.rentResource(accountAddress, \"energy\", cantidad, \"5\", \"min\", precio, signedTransaction);\r\n\r\n    if (consulta2.result) {\r\n\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"brst.alert.done\", { returnObjects: true })[0],\r\n        ModalBody: <>{this.props.i18n.t(\"brst.alert.done\", { returnObjects: true })[1]}<br></br><button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-success\">{this.props.i18n.t(\"brst.alert.done\", { returnObjects: true })[2]}</button></>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      retorno = true\r\n\r\n    } else {\r\n\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"brst.alert.error\", { returnObjects: true })[0],\r\n        ModalBody: this.props.i18n.t(\"brst.alert.error\", { returnObjects: true, hash: consulta2.hash, msg: consulta2.msg })[1]\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    }\r\n\r\n    return retorno\r\n\r\n  }\r\n\r\n  async preExchange(rapida = false) {\r\n\r\n    let { userEnergy } = this.state\r\n\r\n    let eenergy = (await this.calculoEnergy(rapida)).dp(0)\r\n    let precio = await this.costEnergy(eenergy)\r\n\r\n    console.log(eenergy.toString(10))\r\n\r\n    if (eenergy.toNumber() > 0) {\r\n\r\n      this.setState({\r\n        ModalTitulo: \"Energy Notice\",\r\n        ModalBody: <>\r\n          This operation requires <b>{eenergy.plus(userEnergy).dp(0).toNumber().toLocaleString('en-US')} energy</b><br></br><br></br>\r\n\r\n          you have <b>{userEnergy.toLocaleString('en-US')} energy</b><br></br>\r\n          Rent <b>{eenergy.toNumber().toLocaleString('en-US')} energy</b> for <b>{precio.toString(10)} TRX</b>\r\n          <br ></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={async () => {\r\n            if (await this.rentEnergy(eenergy)) {\r\n              this.exchangeTokens(rapida)\r\n            }\r\n          }}>Rent Energy </button>\r\n\r\n<button type=\"button\" className=\"btn btn-danger\" onClick={async () => {\r\n           \r\n              this.exchangeTokens(rapida)\r\n          }}>Proceed without renting energy </button>\r\n\r\n\r\n        </>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    } else {\r\n      this.exchangeTokens(rapida)\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async exchangeTokens(rapida = false) {\r\n    let from = document.getElementById('currencySelectFrom').value\r\n    let to = document.getElementById('currencySelectTo').value\r\n\r\n    switch (from + \"_\" + to) {\r\n\r\n      case \"usdt_brst\":\r\n        this.suawpTokenFromTRX(0)\r\n        break;\r\n\r\n      case \"usdd_brst\":\r\n        this.suawpTokenFromTRX(1)\r\n\r\n        break;\r\n\r\n      case \"brst_trx\":\r\n        this.venta(rapida)\r\n        break;\r\n\r\n      default:\r\n        // TRX -> BRST\r\n        this.compra()\r\n        break;\r\n    }\r\n  }\r\n\r\n  async suawpTokenFromTRX(select = 0) {\r\n\r\n    const { tronWeb, accountAddress } = this.props\r\n    let { precioUSDT, precioUSDD } = this.state\r\n\r\n    // TOKEN => TRX\r\n    let token = select === 0 ? \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\" : \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\" //USDT : USDD\r\n\r\n    let currentPrice = select === 0 ? precioUSDT : precioUSDD\r\n\r\n    let sunswapRouter = \"TCFNp179Lg46D16zKoumd4Poa2WFFdtqYj\" // V3\r\n\r\n    let contrato = tronWeb.contract(utils.SUNSWAPV3_ABI, sunswapRouter)\r\n    //console.log(contrato)\r\n\r\n    let contract_base_token = tronWeb.contract(utils.TOKEN_ABI, token)\r\n    let decimals_base = parseInt(await contract_base_token.decimals().call())\r\n\r\n    let balance_usdt = new BigNumber(parseInt(await contract_base_token.balanceOf(accountAddress).call())).shiftedBy(-decimals_base)\r\n\r\n    let monto = document.getElementById(\"amountFrom\").value;\r\n    monto = monto.replace(/,/g, \".\")\r\n    monto = new BigNumber(monto)\r\n\r\n    if (balance_usdt.dp(2).toNumber() < 1 || monto.toNumber() > balance_usdt.toNumber()) {\r\n      this.setState({\r\n        ModalTitulo: \"ALERT\",\r\n        ModalBody: (<>\r\n          Sorry, you don't have enough {await contract_base_token.name().call()} to complete this operation.\r\n        </>)\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      return \"false\";\r\n\r\n    }\r\n\r\n    let aprove = await contract_base_token.allowance(accountAddress, sunswapRouter).call()\r\n    if (aprove.remaining) aprove = aprove.remaining\r\n    aprove = parseInt(aprove)\r\n    //console.log(aprove)\r\n    if (aprove <= balance_usdt.toNumber()) {\r\n\r\n      this.setState({\r\n        ModalTitulo: <>Token Alert {imgLoading}</>,\r\n        ModalBody: (<>Approve unlimited future exchanges</>)\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      let inputs = [\r\n        { type: 'address', value: tronWeb.address.toHex(sunswapRouter) },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" },\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contract_base_token.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n            ModalBody: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n          return false\r\n        })\r\n      if (!transaction) return;\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: <>Token Alert {imgLoading}</>,\r\n            ModalBody: <>Approval done, continue the process</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n          return true;\r\n        }).catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: <>Error{imgLoading}</>,\r\n            ModalBody: <>{e.toString()}</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n\r\n\r\n    }\r\n\r\n    let consulta = await fetch(\"https://rot.endjgfsv.link/swap/router?fromToken=\" + token + \"&toToken=T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb&amountIn=\" + monto.shiftedBy(decimals_base).dp(0).toString(10) + \"&typeList=SUNSWAP_V3,SUNSWAP_V2,WTRX\")\r\n      .then((r) => r.json())\r\n      .then((r) => r.data[0])\r\n\r\n    function distributeTokens(totalTokens, versions) {\r\n      let result = new Array(versions.length).fill(0); // Inicializamos el array con ceros\r\n      let remainingTokens = totalTokens;\r\n\r\n      // Asignamos 1 token a cada elemento si hay suficientes tokens disponibles\r\n      for (let i = 0; i < versions.length && remainingTokens > 0; i++) {\r\n        result[i] = 1;\r\n        remainingTokens--;\r\n      }\r\n\r\n      // Distribuimos los tokens restantes de forma balanceada\r\n      let index = 0;\r\n      while (remainingTokens > 0) {\r\n        result[index]++;\r\n        remainingTokens--;\r\n        index = (index + 1) % versions.length; // Ciclar en el array\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    let inputs = [\r\n      { type: 'address[]', value: consulta.tokens },\r\n      { type: 'string[]', value: consulta.poolVersions },\r\n      { type: 'uint256[]', value: distributeTokens(consulta.tokens.length, consulta.poolVersions) },\r\n      { type: 'uint24[]', value: consulta.poolFees },\r\n      {\r\n        type: '(uint256,uint256,address,uint256)',\r\n        value: [\r\n          new BigNumber(consulta.amountIn).shiftedBy(decimals_base).dp(0).toString(10),\r\n          new BigNumber(consulta.amountOut).times(0.995).shiftedBy(6).dp(0).toString(10),\r\n          (tronWeb.address.toHex(accountAddress)).replace(/41/g, \"0x\"),\r\n          ((parseInt(Date.now() / 1000)) + 100).toString(10)\r\n        ]\r\n      }\r\n\r\n    ]\r\n\r\n    let funcion = \"swapExactInput(address[],string[],uint256[],uint24[],(uint256,uint256,address,uint256))\"\r\n    const options = { feeLimit: 10000 * 1e6, callValue: 0 }\r\n    let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n    let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          ModalTitulo: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n          ModalBody: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false\r\n      })\r\n    if (!transaction) return;\r\n    transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n      .then(() => {\r\n        this.setState({\r\n          ModalTitulo: <>Swap Alert {imgLoading}</>,\r\n          ModalBody: <>Swap done, continue the process</>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n      })\r\n\r\n    await utils.delay(3)\r\n\r\n    this.compra(monto.div(currentPrice))\r\n  }\r\n\r\n  async compra(amount = new BigNumber(0)) {\r\n    const { tronWeb, contrato, accountAddress } = this.props\r\n\r\n    if (amount.toNumber() <= 0) {\r\n      amount = parseFloat(document.getElementById(\"amountFrom\").value);\r\n      amount = new BigNumber(amount)\r\n\r\n    }\r\n\r\n    amount = amount.shiftedBy(6).dp(0).toNumber()\r\n\r\n    if (amount <= 0) {\r\n\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"brst.alert.errorInput\", { returnObjects: true })[0],\r\n        ModalBody: <>{this.props.i18n.t(\"brst.alert.errorInput\", { returnObjects: true })[1]}\r\n          <br></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"close\")}</button>\r\n        </>\r\n\r\n      })\r\n\r\n      return;\r\n    }\r\n\r\n    const { minCompra } = this.state;\r\n\r\n    let balance = await tronWeb.trx.getUnconfirmedBalance();\r\n\r\n    if (balance >= amount) {\r\n      if (amount >= minCompra) {\r\n\r\n        let inputs = [\r\n          //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n          //{type: 'uint256', value: '1000000'}\r\n        ]\r\n\r\n        let funcion = \"staking()\"\r\n        const options = { callValue: amount }\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({\r\n              ModalTitulo: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n              ModalBody: this.props.i18n.t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n            return false\r\n          })\r\n        if (!transaction) return;\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then(() => {\r\n            this.setState({\r\n              ModalTitulo: this.props.i18n.t(\"brst.alert.compra\", { returnObjects: true })[0],\r\n              ModalBody: <>{this.props.i18n.t(\"brst.alert.compra\", { returnObjects: true })[1]}\r\n                <br ></br><br ></br>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n              </>\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n\r\n\r\n      } else {\r\n        document.getElementById(\"amountFrom\").value = minCompra;\r\n        this.setState({\r\n          ModalTitulo: this.props.i18n.t(\"error\"),\r\n          ModalBody: this.props.i18n.t(\"brst.alert.errGreater\", { returnObjects: true, min: minCompra })[0]\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      document.getElementById(\"amountFrom\").value = \"\";\r\n      this.setState({\r\n        ModalTitulo: this.props.i18n.t(\"error\"),\r\n        ModalBody: this.props.i18n.t(\"brst.alert.errFunds\", { returnObjects: true, min: minCompra })[0]\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    }\r\n\r\n    await utils.delay(5);\r\n    this.estado();\r\n\r\n\r\n  };\r\n\r\n  async venta(rapida) {\r\n\r\n    const { minventa } = this.state;\r\n\r\n    let amount = document.getElementById(\"amountFrom\").value;\r\n    amount = amount.replace(/,/g, \".\")\r\n    amount = new BigNumber(amount).shiftedBy(6)\r\n\r\n    let { accountAddress, contrato, tronWeb } = this.props;\r\n\r\n    let AddressContract = tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address)\r\n    if (rapida) {\r\n      AddressContract = tronWeb.address.toHex(contrato.BRST_TRX_Proxy_fast.address);\r\n    }\r\n\r\n    let aprovado = await contrato.BRST.allowance(accountAddress, AddressContract).call();\r\n    aprovado = parseInt(aprovado);\r\n\r\n    if (aprovado <= amount.toNumber()) {\r\n\r\n      this.setState({\r\n        ModalTitulo: <>BRST Aproval</>,\r\n        ModalBody: <>sign the following transaction to confirm Token Aproval</>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      let inputs = [\r\n        { type: 'address', value: AddressContract },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: <>Result</>,\r\n            ModalBody: <>BRST Aproval is Done {transaction.txid}</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n\r\n      aprovado = await contrato.BRST.allowance(accountAddress, AddressContract).call();\r\n      aprovado = parseInt(aprovado);\r\n\r\n    }\r\n\r\n    if (aprovado >= amount.toNumber()) {\r\n\r\n      if (amount.toNumber() >= minventa && true) {\r\n\r\n        this.setState({\r\n          ModalTitulo: <>Withdrawal process {imgLoading}</>,\r\n          ModalBody: <>\r\n            sign the following transaction to confirm your withdrawal.\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n        let inputs = [\r\n          { type: 'uint256', value: amount.toString(10) }\r\n        ]\r\n\r\n        let funcion = \"esperaRetiro(uint256)\"\r\n        if (rapida) {\r\n          funcion = \"sell_token_2(uint256)\"\r\n        }\r\n        const options = {}\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(AddressContract, funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({\r\n              ModalTitulo: \"Error\",\r\n              ModalBody: e.toString()\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then(() => {\r\n            this.setState({\r\n              ModalTitulo: \"Operation result\",\r\n              ModalBody: <>Your withdrawal was successfully processed <a href={\"https://tronscan.org/#/transaction/\"+transaction.txid} rel=\"noreferrer noopener\" target=\"_blank\" >{transaction.txid}</a>\r\n                <br ></br><br ></br>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{this.props.i18n.t(\"accept\")}</button>\r\n              </>\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n\r\n\r\n        if(!rapida){\r\n          document.getElementById(\"request-brst\").scrollIntoView();\r\n        }\r\n\r\n\r\n      } else {\r\n        this.setState({\r\n          ModalTitulo: \"Info\",\r\n          ModalBody: `Enter a value greater than ${minventa} BRST`\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n        document.getElementById(\"amountFrom\").value = minventa;\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      if (amount > aprovado) {\r\n        if (aprovado <= 0) {\r\n          this.setState({\r\n            ModalTitulo: \"Info\",\r\n            ModalBody: \"You do not have enough aproved funds in your account you place at least \" + minventa + \" BRST\"\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        } else {\r\n          this.setState({\r\n            ModalTitulo: \"Info\",\r\n            ModalBody: \"You must leave 21 TRX free in your account to make the transaction\"\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        }\r\n\r\n      } else {\r\n\r\n        this.setState({\r\n          ModalTitulo: \"Info\",\r\n          ModalBody: \"You must leave 21 TRX free in your account to make the transaction\"\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      }\r\n\r\n      document.getElementById(\"amountFrom\").value = minventa;\r\n\r\n\r\n    }\r\n\r\n    this.estado();\r\n\r\n\r\n  };\r\n\r\n  async retiro(id) {\r\n\r\n    const { tronWeb, contrato, accountAddress } = this.props\r\n\r\n    let amount = prompt(\"amount to fast whitdrawl\", \"example 100 TRX\")\r\n\r\n    amount = new BigNumber(amount).shiftedBy(6).toString(10)\r\n\r\n    let inputs = [\r\n      //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n      { type: 'uint256', value: amount }\r\n    ]\r\n\r\n    let funcion = \"setTRON_RR(uint256)\"\r\n    const options = {}\r\n    let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n    let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          ModalTitulo: \"Error\",\r\n          ModalBody: e.toString()\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n      })\r\n    transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n\r\n    console.log(transaction)\r\n\r\n    this.estado();\r\n\r\n  };\r\n\r\n  async grafico(time, temporalidad, cantidad, selector) {\r\n\r\n    let { precioBrst, precioUSDT, precioUSDD } = this.state\r\n\r\n    if (!document.getElementById('chartdiv-brst')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n\r\n    const root = am5.Root.new(\"chartdiv-brst\");\r\n    root._logo.dispose();\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        pinchZoomX: true\r\n      })\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"none\"\r\n    }));\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    // Generate random data\r\n    let downColor = root.interfaceColors.get(\"negative\");\r\n    let upColor = root.interfaceColors.get(\"positive\");\r\n\r\n    let previousValue = 0;\r\n    let previousColor;\r\n    let previousDataObj;\r\n\r\n    function generateData(data, alt) {\r\n      let value = data.value\r\n      if (alt) {\r\n        let encontrado = data.valor_alt.find((obj) => obj.coin === alt)\r\n\r\n        if (encontrado) {\r\n          value = encontrado.valor\r\n        } else {\r\n          value = 0\r\n        }\r\n      }\r\n\r\n      let color = downColor;\r\n\r\n      if (value >= previousValue) {\r\n        color = upColor;\r\n      }\r\n\r\n      previousValue = value;\r\n\r\n      let dataObj = { date: data.date, value: value, color: color }; // color will be used for tooltip background\r\n\r\n      // only if changed\r\n      if (color !== previousColor) {\r\n        if (!previousDataObj) {\r\n          previousDataObj = dataObj;\r\n        }\r\n        previousDataObj.strokeSettings = { stroke: color };\r\n      }\r\n\r\n      previousDataObj = dataObj;\r\n      previousColor = color;\r\n\r\n      return dataObj;\r\n    }\r\n\r\n    let lastPrice = precioBrst\r\n\r\n    switch (selector) {\r\n      case \"usdt\":\r\n        lastPrice = lastPrice * precioUSDT\r\n        break;\r\n\r\n      case \"usdd\":\r\n        lastPrice = lastPrice * precioUSDD\r\n        break;\r\n\r\n      default:\r\n        selector = false\r\n        break;\r\n    }\r\n    let lastData = { date: Date.now(), value: lastPrice };\r\n\r\n    //console.log(lastData)\r\n\r\n    async function generateDatas(count) {\r\n\r\n      let consulta = await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=\" + temporalidad + \"&limite=\" + count)\r\n        .then(async (r) => (await r.json()).Data)\r\n        .catch(() => { return false })\r\n\r\n      if (consulta) {\r\n        previousValue = 0;\r\n        previousColor = \"\";\r\n        previousDataObj = \"\";\r\n        let data = []\r\n        for (var i = consulta.length - 1; i >= 0; --i) {\r\n          data.push(generateData(consulta[i], selector));\r\n        }\r\n\r\n        data.push(lastData)\r\n\r\n\r\n        return data;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    }\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"Series\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\"\r\n      })\r\n    );\r\n\r\n    series.strokes.template.set(\"templateField\", \"strokeSettings\");\r\n\r\n    let tooltip = series.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      labelText: \"{valueY}\"\r\n    }));\r\n\r\n    // this is added in ored adapter to be triggered each time position changes\r\n    tooltip.on(\"pointTo\", function () {\r\n      let background = tooltip.get(\"background\");\r\n      background.set(\"fill\", background.get(\"fill\"));\r\n    });\r\n\r\n    // tooltip bacground takes color from data item\r\n    tooltip.get(\"background\").adapters.add(\"fill\", function (fill) {\r\n      if (tooltip.dataItem) {\r\n        return tooltip.dataItem.dataContext.color;\r\n      }\r\n      return fill;\r\n    });\r\n\r\n    // Add scrollbar\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n    //scrollbar.parent = chart.bottomAxesContainer;\r\n    let scrollbar = chart.set(\r\n      \"scrollbarX\",\r\n      am5xy.XYChartScrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n        height: 40\r\n      })\r\n    );\r\n\r\n    let sbDateAxis = scrollbar.chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbValueAxis = scrollbar.chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbSeries = scrollbar.chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        xAxis: sbDateAxis,\r\n        yAxis: sbValueAxis,\r\n\r\n      })\r\n    );\r\n\r\n    // Generate and set data  \r\n    let data = await generateDatas(cantidad);\r\n    if (data) {\r\n      series.data.setAll(data);\r\n      sbSeries.data.setAll(data);\r\n    }\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n\r\n\r\n    series.appear(time);\r\n    chart.appear(time, time / 10);\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { contrato } = this.props\r\n    let { from, to, valueFrom, precioBrst, minCompra, minventa, days, diasCalc, temporalidad, tiempoPromediado, isOwner, isAdmin, globDepositos, crecimientoPorcentual, userEnergy, rapida, penalty, retiroRapido, dias, balanceUSDT, balanceUSDD, balanceBRST, balanceTRX, valueTo } = this.state;\r\n\r\n    minCompra = \"Min. \" + minCompra + \" \" + from.toUpperCase();\r\n    minventa = \"Min. \" + minventa + \" \" + to.toUpperCase();\r\n\r\n    let opciones;\r\n\r\n    if (temporalidad === \"hour\") {\r\n      opciones = optionsHours\r\n    } else {\r\n      opciones = options2\r\n    }\r\n\r\n    let retiradas = <></>\r\n\r\n    if (from + \"_\" + to === \"brst_trx\") {\r\n      retiradas = (<div className=\"row mb-3\">\r\n        <div className=\"col-12 text-center\">\r\n          <input type=\"checkbox\" checked={rapida} readOnly onClick={() => { this.setState({ rapida: !rapida }) }} style={{ cursor: \"pointer\" }}></input> <b>Quick:</b> request up to <b>{retiroRapido.dp(1).toString(10)} TRX</b> with a <b>{penalty}% fee.</b><br></br>\r\n          <input type=\"checkbox\" checked={!rapida} readOnly onClick={() => { this.setState({ rapida: !rapida }) }} style={{ cursor: \"pointer\" }}></input> <b>Regular:</b> request the <b>total</b> with a <b>{dias} days</b> waiting period.\r\n        </div>\r\n      </div>)\r\n    }\r\n\r\n    let swapButton =\r\n      <button className=\"btn btn-success\" style={{ width: \"100%\" }} onClick={() => this.preExchange(rapida)}>\r\n        Swap {(this.state.from).toUpperCase() + \" -> \" + (this.state.to).toUpperCase()}\r\n      </button>\r\n\r\nif (rapida && retiroRapido.toNumber() < valueTo.toNumber()) {\r\n  swapButton = <button className=\"btn btn-warning\" style={{ width: \"100%\" }} >\r\n     Enter a lower amount or change to regular withdrawal\r\n  </button>\r\n}\r\n    if (valueFrom.toNumber() < 1) {\r\n      swapButton = <button className=\"btn btn-warning\" style={{ width: \"100%\" }} >\r\n        The minimum to operate is {1} {from.toUpperCase()}\r\n      </button>\r\n    }\r\n\r\n    let balance = balanceTRX\r\n    switch (from) {\r\n      case \"usdt\":\r\n        balance = balanceUSDT\r\n        break;\r\n      case \"usdd\":\r\n        balance = balanceUSDD\r\n        break;\r\n      case \"brst\":\r\n        balance = balanceBRST\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (valueFrom.toNumber() > balance) {\r\n      swapButton = <button className=\"btn btn-danger\" style={{ width: \"100%\" }} >\r\n        Not enough {from.toUpperCase()} top up to proceed\r\n      </button>\r\n    }\r\n\r\n    return (<>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"nav-bitcoin\" role=\"tabpanel\" aria-labelledby=\"nav-bitcoin-tab\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-xxl-9 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                  <div className=\"card coin-content\">\r\n                    <div className=\"card-header border-0 flex-wrap\">\r\n                      <div className=\"mb-2\">\r\n                        <h4 className=\"heading m-0\">{this.props.i18n.t(\"tokenChart\", { token: \"BRST\" })}</h4>\r\n                        <span className=\"fs-16\">Brutus Tron Staking </span>\r\n                      </div>\r\n                      <div className=\"dropdown bootstrap-select\">\r\n\r\n                        <select className=\"image-select default-select dashboard-select\" id=\"selector\" aria-label=\"Default\" tabIndex=\"0\" style={{ background: \"rgb(3 0 8 / 20%)\" }} onInput={(r) => {\r\n\r\n                          this.grafico(500, this.state.temporalidad, this.state.cantidadDatos, document.getElementById(\"selector\").value);\r\n                        }}>\r\n                          <option value=\"trx\">TRX (Tron)</option>\r\n                          <option value=\"usdd\">USDD (Decentralized USD)</option>\r\n                          <option value=\"usdt\">USD₮ (Tether)</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-18 d-block mb-2\">{this.props.i18n.t(\"price\")}</span>\r\n                            <h4 className=\"fs-20 font-w600\">{this.state.precioBrst} TRX</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">24h% change</span>\r\n                            <h4 className=\"font-w600 text-success\">{(this.state.varBrst).toFixed(4)}<i className=\"fa-solid fa-caret-up ms-1 text-success\"></i></h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">{this.props.i18n.t(\"circulating\")}</span>\r\n                            <h4 className=\"font-w600\">{(this.state.tokensEmitidos * 1).toFixed(2)} BRST</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">{this.props.i18n.t(\"endorse\")}</span>\r\n                            <h4 className=\"font-w600\">{(this.state.enBrutus * 1).toFixed(2)} TRX</h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\" id=\"chartdiv-brst\" style={{ height: \"400px\", backgroundColor: \"white\" }}></div>\r\n\r\n\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: 'white' }} value={this.state.cantidadDatos} onChange={this.handleChange2}>\r\n                        {opciones.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      {\" | \"}\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: 'white' }} value={this.state.temporalidad} onChange={this.handleChange}>\r\n                        {options.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-xl-3 col-xxl-3 col-sm-6 wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                  <div className=\"card digital-cash\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"media d-block\">\r\n                          <img\r\n                            onClick={() => {\r\n                              this.setState({\r\n                                ModalTitulo: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[0],\r\n                                ModalBody: (\r\n                                  <>\r\n                                    <select id=\"currencySelect\" className=\"form-select mb-3\">\r\n                                      <option value=\"TRX\">TRX</option>\r\n                                      <option value=\"BRST\">BRST</option>\r\n                                      <option value=\"USDT\">USDT</option>\r\n                                      <option value=\"USDD\">USDD</option>\r\n                                    </select>\r\n                                    TRX\r\n                                    <input type=\"number\" id=\"trxD\" className=\"form-control mb-3\" placeholder=\"Amount\"></input>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-success w-100 mb-3\"\r\n                                      onClick={() => {\r\n                                        let donacion = document.getElementById('trxD').value;\r\n                                        let currency = document.getElementById('currencySelect').value;\r\n                                        donacion = new BigNumber(donacion).shiftedBy(6).dp(0);\r\n                                        if (currency === \"TRX\") {\r\n                                          contrato.BRST_TRX_Proxy['donate()']().send({ callValue: donacion })\r\n                                            .then(() => {\r\n                                              this.setState({\r\n                                                ModalTitulo: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[1],\r\n                                                ModalBody: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[2]\r\n                                              });\r\n                                              window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                              this.estado();\r\n                                            });\r\n                                        } else if (currency === \"USDT\" || currency === \"USDD\" || currency === \"BRST\") {\r\n                                          // Aquí puedes agregar la lógica para manejar USDT y USDD\r\n                                          console.log(\"Donación en \" + currency + \":\" + donacion);\r\n                                        }\r\n                                      }}\r\n                                    >\r\n                                      {this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[3]}\r\n                                    </button>\r\n                                    BRST\r\n                                    <input type=\"number\" id=\"brstD\" className=\"form-control mb-3\" placeholder=\"Amount\"></input>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-success w-100 mb-3\"\r\n                                      onClick={() => {\r\n                                        let donacion = document.getElementById('brstD').value;\r\n                                        donacion = new BigNumber(donacion).shiftedBy(6).dp(0);\r\n                                        contrato.BRST_TRX_Proxy['donate(uint256)'](donacion.toString(10)).send()\r\n                                          .then(() => {\r\n                                            this.setState({\r\n                                              ModalTitulo: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[1],\r\n                                              ModalBody: this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[2]\r\n                                            });\r\n                                            window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                            this.estado();\r\n                                          });\r\n                                      }}\r\n                                    >\r\n                                      {this.props.i18n.t(\"brst.alert.donate\", { returnObjects: true })[3]}\r\n                                    </button>\r\n                                  </>\r\n                                )\r\n                              });\r\n                              window.$(\"#mensaje-brst\").modal(\"show\");\r\n                            }}\r\n                            src=\"images/brst.png\"\r\n                            width=\"100%\"\r\n                            alt=\"brutus tron staking\"\r\n                          />\r\n                          <div className=\"media-content\">\r\n                            <h4 className=\"mt-0 mt-md-4 fs-20 font-w700 text-black mb-0\">{this.props.i18n.t(\"brst.aStaking\")}</h4>\r\n                            <span className=\"font-w600 text-black\">Brutus</span>\r\n                            <span className=\"my-4 fs-16 font-w600 d-block\">1 BRST = {this.state.precioBrst} TRX</span>\r\n                            <p className=\"text-start\">{this.props.i18n.t(\"brst.description\")}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer p-2 border-0\">\r\n                      <a href=\"https://brutus.finance/brutusblog.html\" className=\"btn btn-link text-primary\">{this.props.i18n.t(\"brst.button.readM\")}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-xl-6 col-sm-6 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n\r\n\r\n                  <div className=\"card quick-trade\">\r\n                    <div className=\"card-header pb-0 border-0 flex-wrap\">\r\n                      <div>\r\n                        <h4 className=\"heading mb-0\">{this.props.i18n.t(\"brst.exchange\")} V4.1</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col-12 pb-2\">From</div>\r\n                        <div className=\"col-2 \">\r\n                          <img height=\"42px\" src={\"/images/token/\" + this.state.from + \".png\"} alt=\"tron logo\" />\r\n                        </div>\r\n                        <div className=\"col-3\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                          <select\r\n                            style={{ color: \"white\", backgroundColor: \"var(--primary)\", cursor: \"pointer\", borderRadius: \"0.625rem 0 0 0.625rem\" }}\r\n                            className=\"form-select\"\r\n                            id=\"currencySelectFrom\"\r\n                            onChange={this.handleCurrencyChangeFrom} // Manejador para cambios en la selección\r\n                          >\r\n                            <option value=\"trx\">TRX </option>\r\n                            <option value=\"usdt\">USDT </option>\r\n                            <option value=\"usdd\">USDD </option>\r\n                            <option value=\"brst\">BRST </option>\r\n\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"col-7\" style={{ paddingLeft: \"0px\" }}>\r\n                          <input className=\"form-control form-control text-end\" style={{ borderRadius: \"0 0.625rem 0.625rem 0\" }} type=\"number\" id=\"amountFrom\" onInput={() => this.calcExchange(false, this.state.from + \"_\" + this.state.to)} placeholder={minCompra} min={this.state.minCompra} step={0.1} ></input>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <hr></hr>\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">To</div>\r\n                        <div className=\"col-2\">\r\n                          <img height=\"42px\" src={\"/images/token/\" + this.state.to + \".png\"} alt=\"brst logo\" />\r\n                        </div>\r\n                        <div className=\"col-3\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                          <select\r\n                            style={{ color: \"white\", backgroundColor: \"var(--primary)\", cursor: \"pointer\", borderRadius: \"0.625rem 0 0 0.625rem\" }}\r\n                            className=\"form-select\"\r\n                            id=\"currencySelectTo\"\r\n                            onChange={this.handleCurrencyChangeTo} // Manejador para cambios en la selección\r\n                          >\r\n                            <option value=\"brst\">BRST </option>\r\n                            <option value=\"trx\">TRX </option>\r\n\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-7\" style={{ paddingLeft: \"0px\" }}>\r\n\r\n                          <input className=\"form-control form-control text-end\" style={{ borderRadius: \"0 0.625rem 0.625rem 0\" }} type=\"number\" id=\"amountTo\" onInput={() => this.calcExchange(true, this.state.to + \"_\" + this.state.from)} placeholder={minventa} min={this.state.minventa} step={0.0001} ></input>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"card-footer border-0\">\r\n                      {retiradas}\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col-12 text-center\">\r\n                          {swapButton}\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex mt-2\" style={{ justifyContent: \"space-between\" }}>\r\n                        <p className=\"mb-0 fs-14\">{this.props.i18n.t(\"brst.energy\", { e1: (userEnergy).toLocaleString('en-US') })}</p>\r\n                        <p className=\"mb-0 fs-14\">Fee ~ {this.state.useTrx} TRX</p>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-12 wow fadeInUp\" data-wow-delay=\"0.6s\">\r\n                  <div className=\"card price-list\">\r\n                    <div className=\"card-header border-0 pb-2\">\r\n                      <div className=\"chart-title\">\r\n                        <h4 className=\" mb-0\" style={{ color: \"var(--primary)\" }}>{this.props.i18n.t(\"mya\")}</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body p-3 py-0\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table text-center bg-warning-hover order-tbl\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"text-left\">{this.props.i18n.t(\"token\")}</th>\r\n                              <th className=\"text-center\">{this.props.i18n.t(\"amount\")}</th>\r\n                              <th className=\"text-center\">{this.props.i18n.t(\"value\")}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarBRST() }}>\r\n                              <td className=\"text-left\">BRST</td>\r\n                              <td>{this.state.balanceBRST}</td>\r\n                              <td>{new BigNumber(this.state.balanceBRST * this.state.precioBrst * this.state.precioUSDD).dp(2).toNumber().toLocaleString(\"en-US\")} USDD</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">TRX</td>\r\n                              <td>{this.state.balanceTRX}</td>\r\n                              <td>{new BigNumber(this.state.balanceTRX * this.state.precioUSDD).dp(2).toNumber().toLocaleString(\"en-US\")} USDD</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">USDT</td>\r\n                              <td>{this.state.balanceUSDT.toLocaleString(\"en-US\")}</td>\r\n                              <td>--.--</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">USDD</td>\r\n                              <td>{this.state.balanceUSDD.toLocaleString(\"en-US\")}</td>\r\n                              <td>--.--</td>\r\n\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-center py-3 border-0\">\r\n                      <a href=\"/\" className=\"btn-link text-black\">{this.props.i18n.t(\"showM\")}<i className=\"fa fa-caret-right\"></i></a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mx-0\">\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Your last earnings staking </h4>\r\n              <h6 className=\"card-subtitle\">{this.state.misBRST} BRST = {(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{this.props.i18n.t(\"day\")}</th>\r\n                      <th>{this.props.i18n.t(\"earned\")}</th>\r\n                      <th>{this.props.i18n.t(\"brst.dailyG\")}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {earnings.map((objeto) => (\r\n                      <tr key={objeto.dias.toString()}>\r\n                        <th>{this.props.i18n.t(\"brst.daysAgo\", { days: objeto.dias })}</th>\r\n                        <td>{(objeto.trx).toFixed(6)} TRX</td>\r\n                        <td className=\"color-primary\">{(objeto.diario).toFixed(6)} TRX/{this.props.i18n.t(\"day\")} </td>\r\n                      </tr>))}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\" id=\"request-brst\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n              <div>\r\n                <h4 className=\"fs-20 text-black\">{this.props.i18n.t(\"brst.request\", { returnObjects: true, number: isOwner || isAdmin ? globDepositos.length - 1 : globDepositos.length })[0]}\r\n                  <button className=\"btn  btn-success text-white\" onClick={() => this.estado()}>\r\n                    {this.props.i18n.t(\"brst.request\", { returnObjects: true })[1]} <i className=\"bi bi-arrow-repeat\"></i>\r\n                  </button></h4>\r\n                <p className=\"mb-0 fs-12\">{this.props.i18n.t(\"brst.request\", { returnObjects: true })[2]}</p>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {globDepositos}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">{this.props.i18n.t(\"brst.estimate\")} <br></br> APY {(crecimientoPorcentual * 360).toFixed(3)} %</h4><br></br>\r\n\r\n              <h6 className=\"card-subtitle\" style={{ cursor: \"pointer\" }} onClick={() => { document.getElementById(\"hold\").value = this.state.balanceBRST; this.handleChangeCalc({ target: { value: this.state.balanceBRST } }) }}>\r\n                {this.props.i18n.t(\"brst.mystaking\")}{this.state.misBRST} BRST = {(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX\r\n              </h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n              <b>Days Average: </b>\r\n              <input type=\"number\" id=\"daysProm\" defaultValue={tiempoPromediado} placeholder={tiempoPromediado + \" days\"} min={1} step={1} onInput={async () => {\r\n                let daysProm = parseInt(document.getElementById('daysProm').value);\r\n                await this.setState({ tiempoPromediado: isNaN(daysProm) ? 1 : daysProm });\r\n                this.estado();\r\n              }} ></input>\r\n\r\n              <div className=\"table-responsive overflow-scroll\" style={{ marginTop: \"30px\", height: \"420px\", border: \"2px solid rgba(207, 207, 207, 0.97)\", borderRadius: \"10px\" }}>\r\n\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>\r\n                        Days Hold<br></br>\r\n                        <input type=\"number\" id=\"days\" defaultValue={diasCalc} onInput={this.handleChangeDias} ></input><br></br><br></br>\r\n                        <button className=\"btn btn-primary\" onClick={() => { days = days.unshift({ days: diasCalc, amount: parseFloat((document.getElementById('hold').value).replace(/,/g, \".\")), time: Date.now(), APY: crecimientoPorcentual }) }}>Calculate</button>\r\n\r\n                      </th>\r\n                      <th>\r\n                        Your BRST<br></br>\r\n                        <input type=\"number\" id=\"hold\" defaultValue={0} onInput={this.handleChangeCalc} ></input>\r\n                      </th>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{this.props.i18n.t(\"day\", { count: 10 })}</th>\r\n                      <th>{this.props.i18n.t(\"brst.hold\")}</th>\r\n                      <th>{this.props.i18n.t(\"brst.estimateIn\")}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {days.map((obj) => {\r\n\r\n                      obj.amount = parseFloat(obj.amount);\r\n                      obj.amount = isNaN(obj.amount) || obj.amount <= 0 ? this.state.misBRST : obj.amount;\r\n                      obj.days = isNaN(obj.days) ? 1 : obj.days;\r\n                      obj.time = isNaN(obj.time) ? Date.now() : obj.time;\r\n\r\n                      return (\r\n                        <tr key={\"prospect-days-\" + obj.days + \"-\" + obj.amount + \"-\" + obj.time}>\r\n                          <th>{obj.days}</th>\r\n                          <td>{obj.amount} BRST<br>\r\n                          </br>{(obj.amount * precioBrst).toFixed(3)} TRX</td>\r\n                          <td>{((obj.amount * precioBrst * ((crecimientoPorcentual * obj.days) / 100))).toFixed(6)} TRX</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>Regular withdrawals:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.ProxySC2 + \"/code\"}>{utils.ProxySC2}</a>\r\n                <br ></br>\r\n                <b>Fast withdrawals:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.ProxySC3 + \"/code\"}>{utils.ProxySC3}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"modal fade\" id=\"mensaje-brst\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>{this.state.ModalBody}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\n\r\n/**\r\nclass nftOficina extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdeposito: \"Loading...\",\r\n\t\t\twallet: this.props.accountAddress,\r\n\t\t\tbalanceBRUT: 0,\r\n\t\t\tprecioBRUT: 0\r\n\r\n\t\t};\r\n\r\n\t\tthis.estado = this.estado.bind(this);\r\n\t\tthis.consultarPrecio = this.consultarPrecio.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait utils.setContract(window.tronWeb, contractAddress);\r\n\t\tthis.estado();\r\n\t\tsetInterval(() => this.estado(), 3 * 1000);\r\n\t};\r\n\r\n\tasync consultarPrecio() {\r\n\r\n\t\tvar precio = await utils.contract.RATE().call();\r\n\t\tprecio = parseInt(precio) / 10 ** 6;\r\n\r\n\t\tthis.setState({\r\n\t\t\tprecioBRUT: precio\r\n\t\t});\r\n\r\n\t\treturn precio;\r\n\r\n\t};\r\n\r\n\tasync estado() {\r\n\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\t\tvar contractNFT = await window.tronWeb.contract().at(cons.BRGY);\r\n\r\n\t\tvar robots = [];\r\n\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await contractMistery.entregaNFT(this.props.accountAddress, index).call()\r\n\t\t\t\t.then((conteo) => {\r\n\t\t\t\t\tif (conteo) {\r\n\t\t\t\t\t\trobots.push(parseInt(conteo)); return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\r\n\t\t\tif (conteo === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar estonuevo = [];\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\t\t\tlet user = await contractNFT.ownerOf(robots[index]).call();\r\n\t\t\testonuevo[index] = window.tronWeb.address.fromHex(user) === this.props.accountAddress;\r\n\t\t}\r\n\r\n\t\t//console.log(estonuevo)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tvar URI = await contractNFT.tokenURI(robots[index]).call()\r\n\r\n\t\t\tvar metadata = JSON.parse(await (await fetch(cons.proxy + URI)).text());\r\n\t\t\tmetadata.numero = robots[index]\r\n\r\n\t\t\trobots[index] = metadata;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar imagerobots = [];\r\n\t\tvar recBotton = (<></>)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tif (!estonuevo[index]) {\r\n\t\t\t\trecBotton = (\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={async () => {\r\n\t\t\t\t\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\t\t\t\t\t\tawait contractMistery.claimNFT_especifico(index).send();\r\n\t\t\t\t\t}}>Claim</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\trecBotton = (<></>)\r\n\t\t\t}\r\n\r\n\t\t\timagerobots[index] = (\r\n\t\t\t\t<div className=\"col-xl-3 col-lg-6 col-sm-6\" key={\"robbrutN\" + index}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"new-arrival-product\">\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrivals-img-contnent\">\r\n\t\t\t\t\t\t\t\t\t<img src={robots[index].image} alt={robots[index].name} className=\"img-thumbnail\"></img>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrival-content text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t<h4>#{robots[index].numero} {robots[index].name}</h4>\r\n\t\t\t\t\t\t\t\t\t{recBotton}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trobots: robots,\r\n\t\t\timagerobots: imagerobots\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\" container text-center\">\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t<div className=\"col-lg-12 p-2\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<br /><br />\r\n\r\n\t\t\t\t\t\t\t<h5 >\r\n\t\t\t\t\t\t\t\twallet:<br />\r\n\t\t\t\t\t\t\t\t<strong>{this.props.accountAddress}</strong><br /><br />\r\n\t\t\t\t\t\t\t</h5>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t{this.state.imagerobots}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass nftCrowdFunding extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t\tmc: \"Loading...\",\r\n\t\t\tmb: \"Loading...\"\r\n\t\t};\r\n\r\n\t\tthis.compra = this.compra.bind(this);\r\n\t\tthis.misterio = this.misterio.bind(this);\r\n\r\n\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.misterio();\r\n\t\t}, 7 * 1000)\r\n\t}\r\n\r\n\tasync misterio() {\r\n\r\n\t\tvar contractNFT = await window.tronWeb.contract().at(cons.BRGY);\r\n\t\tconsole.log(contractNFT)\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\tlet mb = 0;\r\n\t\tlet mc = 0;\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await contractMistery.entregaNFT(this.props.accountAddress, index).call().catch(() => { return 0; });\r\n\r\n\t\t\tif (conteo) {\r\n\t\t\t\tmc++;\r\n\t\t\t\tlet nft = await contractMistery.entregaNFT(this.props.accountAddress, index).call();\r\n\t\t\t\tlet ownerNft = await contractNFT.ownerOf(parseInt(nft)).call();\r\n\t\t\t\townerNft = window.tronWeb.address.fromHex(ownerNft);\r\n\r\n\t\t\t\tif (ownerNft !== this.props.accountAddress) {\r\n\t\t\t\t\tmb++;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tmc: mc,\r\n\t\t\tmb: mb\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n\tasync compra() {\r\n\r\n\t\tvar accountAddress = await window.tronWeb.trx.getAccount();\r\n\t\taccountAddress = window.tronWeb.address.fromHex(accountAddress.address);\r\n\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\tvar contractAPENFT = await window.tronWeb.contract().at(cons.APENFT);\r\n\r\n\t\tvar aprovado = await contractAPENFT.allowance(accountAddress, contractAddress).call();\r\n\r\n\t\tif (aprovado.remaining) {\r\n\t\t\taprovado = aprovado.remaining;\r\n\t\t}\r\n\r\n\t\taprovado = parseInt(aprovado);\r\n\t\taprovado = aprovado / 10 ** 6;\r\n\r\n\r\n\t\tif (aprovado > 0) {\r\n\r\n\t\t\tawait contractMistery.buyMisteryBox().send();\r\n\r\n\t\t\twindow.alert(\"Mistery box buyed!\");\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tawait contractAPENFT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n\r\n\r\n\t\t}\r\n\r\n\t\tthis.misterio();\r\n\r\n\t};\r\n\r\n\trender() {\r\n\r\n\r\n\t\treturn (\r\n\r\n\r\n\t\t\t<div className=\"container text-center\">\r\n\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid\"\r\n\t\t\t\t\t\t\t\tsrc=\"assets/img/MISTERY2.gif\"\r\n\t\t\t\t\t\t\t\talt=\"mistery box brutus\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h2>Mistery box</h2>\r\n\t\t\t\t\t\t\t<p>10'000.000 APENFT</p>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" style={{ \"cursor\": \"pointer\" }} onClick={() => this.compra()}>Buy Mistery Box</button>\r\n\r\n\t\t\t\t\t\t\t<br></br><br></br>\r\n\r\n\t\t\t\t\t\t\tMistery Box buyed: {this.state.mc}\r\n\r\n\t\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t\t<button className=\"btn btn-warning\" style={{ \"cursor\": \"pointer\" }} onClick={async () => {\r\n\r\n\t\t\t\t\t\t\t\tif (false) {\r\n\r\n\t\t\t\t\t\t\t\t\twindow.alert(\"please wait to claim your NFT\")\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\t\t\t\t\t\t\t\tawait contractMistery.claimNFT().send()\r\n\t\t\t\t\t\t\t\t\t\t.then(() => { window.alert(\"NFT's sended\") })\r\n\t\t\t\t\t\t\t\t\t\t.catch(() => { window.alert(\"Error to reclaim\") })\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}}>Open {this.state.mb} Mistery Box</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n */\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nexport default class nfts extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\timagerobots: []\r\n\r\n\t\t};\r\n\r\n\t\tthis.estado = this.estado.bind(this);\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = \"BRGY | Brutus.Finance\"\r\n\r\n\t\tintervalId = setInterval(() => {\r\n\r\n\t\t\tif (Date.now() >= nextUpdate) {\r\n\r\n\t\t\t\tif (!this.props.contrato.ready) {\r\n\t\t\t\t\tnextUpdate = Date.now() + 3 * 1000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextUpdate = Date.now() + 60 * 1000;\r\n\t\t\t\t}\r\n\t\t\t\tthis.estado();\r\n\t\t\t}\r\n\r\n\t\t}, 3 * 1000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(intervalId)\r\n\t}\r\n\r\n\r\n\tasync estado() {\r\n\r\n\t\tlet { contrato } = this.props\r\n\r\n\t\tif (!contrato.ready) return;\r\n\r\n\t\tlet robots = [];\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await this.props.contrato.MBOX.entregaNFT(this.props.accountAddress, index).call()\r\n\t\t\t\t.then((conteo) => {\r\n\t\t\t\t\tif (conteo) {\r\n\t\t\t\t\t\trobots.push(parseInt(conteo)); return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\r\n\t\t\tif (conteo === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar estonuevo = [];\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\t\t\tlet user = await this.props.contrato.BRGY.ownerOf(robots[index]).call();\r\n\t\t\testonuevo[index] = window.tronWeb.address.fromHex(user) === this.props.accountAddress;\r\n\t\t}\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tvar URI = await this.props.contrato.BRGY.tokenURI(robots[index]).call()\r\n\r\n\t\t\tvar metadata = await fetch(utils.proxy + URI).then((res) => { return res.json() }).catch(console.error);\r\n\t\t\tmetadata.numero = robots[index]\r\n\t\t\trobots[index] = metadata;\r\n\r\n\t\t}\r\n\r\n\t\tvar imagerobots = [];\r\n\t\tvar recBotton = (<></>)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tif (!estonuevo[index]) {\r\n\t\t\t\trecBotton = (\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={async () => {\r\n\t\t\t\t\t\tawait this.props.contrato.MBOX.claimNFT_especifico(index).send();\r\n\t\t\t\t\t}}>Claim</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\trecBotton = (<></>)\r\n\t\t\t}\r\n\r\n\t\t\timagerobots[index] = (\r\n\t\t\t\t<div className=\"col-xl-3 col-lg-6 col-sm-6\" key={\"robbrutN\" + index}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"new-arrival-product\">\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrivals-img-contnent\">\r\n\t\t\t\t\t\t\t\t\t<a href={robots[index].image} rel=\"noopener noreferrer\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={robots[index].image} alt={robots[index].name} className=\"img-thumbnail\"></img>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrival-content text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t<h4>#{robots[index].numero} {robots[index].name}</h4>\r\n\t\t\t\t\t\t\t\t\t{recBotton}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trobots: robots,\r\n\t\t\timagerobots: imagerobots\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n\t\t\t\t<div className=\"row page-titles mx-0\">\r\n\t\t\t\t\t<div className=\"col-sm-6 p-md-0\">\r\n\t\t\t\t\t\t<div className=\"welcome-text\">\r\n\t\t\t\t\t\t\t<h4>My Colectibles</h4>\r\n\t\t\t\t\t\t\t<p className=\"mb-0\">BRGY</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex\">\r\n\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">See collection on </li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\"><a href=\"https://bit.ly/Brutus-Gallery\" rel=\"noopener noreferrer\" target=\"_blank\">APENFT</a></li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{this.state.imagerobots}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport abi_SUNSAWPv2 from \"../assets/abi/sunswapV2.json\";\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nlet sunswapRouter = \"TKzxdSv2FZKQrEqkKVgp5DcwEXBEKMg2Ax\" // suwap V2\r\nlet intervalId = [];\r\n\r\nexport default class nfts extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      deposito: \"Loading...\",\r\n      wallet: this.props.accountAddress,\r\n      balanceBRUT: 0,\r\n      precioBRUT: 0,\r\n      mc: 0,\r\n      mb: 0,\r\n      totalNFT: \"Loading...\",\r\n      premio: \"Loading...\",\r\n      LastWiner: \"Loading...\",\r\n      proximoSorteo: \"Loading...\",\r\n      modalTitulo: \"\",\r\n      modalBody: \"\",\r\n      contarSegundos: 10e25,\r\n      restanteSegundos: 10e25,\r\n      porcentaje: 100,\r\n\r\n      comprarBRLT: 1,\r\n      precioUnidad: 100,\r\n      total: 100,\r\n      moneda: \"trx\",\r\n\r\n      tikets: [],\r\n\r\n      days: \"\",\r\n      hours: \"00\",\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n\r\n      deadline: 1,\r\n\r\n      onSale: <>Loading NFT FOR SALE</>,\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.consultarPrecio = this.consultarPrecio.bind(this);\r\n\r\n    this.preCompra = this.preCompra.bind(this);\r\n    this.compra = this.compra.bind(this);\r\n\r\n\r\n    this.sunSwap = this.sunSwap.bind(this);\r\n    this.sorteo = this.sorteo.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n\r\n    this.updateCountdown = this.updateCountdown.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    setTimeout(async () => {\r\n      this.estado();\r\n    }, 3 * 1000)\r\n\r\n    intervalId.push(setInterval(() => this.updateCountdown(), 1000))\r\n\r\n    intervalId.push(setInterval(() => {\r\n\r\n      let restanteSegundos = parseInt(this.state.contarSegundos - (Date.now() / 1000))\r\n\r\n      this.setState({\r\n        restanteSegundos: restanteSegundos,\r\n        porcentaje: 100 - (restanteSegundos / 1296000 * 100)\r\n      })\r\n\r\n    }, 1 * 1000))\r\n\r\n    intervalId.push(setInterval(async () => {\r\n      if (this.props.contrato.ready) {\r\n        clearInterval(intervalId[2])\r\n        intervalId.push(setInterval(() => this.estado(), 60 * 1000))\r\n      }\r\n      this.estado();\r\n    }, 6 * 1000))\r\n\r\n\r\n  };\r\n\r\n  componentWillUnmount() {\r\n\r\n    for (let index = 0; index < intervalId.length; index++) {\r\n      clearInterval(intervalId[index])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(e) {\r\n    let value = parseInt(e.target.value);\r\n    if (isNaN(value) || value < 1) value = 1;\r\n    this.setState({\r\n      comprarBRLT: value,\r\n      total: value * this.state.precioUnidad\r\n    });\r\n  }\r\n\r\n  handleChangeSelect(e) {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      moneda: value\r\n    });\r\n  }\r\n\r\n  updateCountdown() {\r\n    if (intervalId.length >= 1) {\r\n      // Getting current time in required format\r\n      let now = new Date().getTime();\r\n      let timeToLive = this.state.deadline - now;\r\n\r\n      // Getting value of days, hours, minutes, seconds\r\n      let days = Math.floor(timeToLive / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor((timeToLive % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      let minutes = Math.floor((timeToLive % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((timeToLive % (1000 * 60)) / 1000);\r\n\r\n      if (days <= 1) {\r\n        days = days + \" Day - \"\r\n      } else {\r\n        days = days + \" Days - \"\r\n      }\r\n\r\n      if (hours <= 9) {\r\n        hours = \"0\" + hours\r\n      }\r\n\r\n      if (minutes <= 9) {\r\n        minutes = \"0\" + minutes\r\n      }\r\n\r\n      if (seconds <= 9) {\r\n        seconds = \"0\" + seconds\r\n      }\r\n\r\n      // Output for over time\r\n      if (timeToLive < 0) {\r\n        days = \"\"\r\n        hours = \"00\"\r\n        minutes = \"00\"\r\n        seconds = \"00\"\r\n      }\r\n\r\n      this.setState({\r\n        days,\r\n        hours,\r\n        minutes,\r\n        seconds,\r\n      })\r\n    }\r\n  }\r\n\r\n  async estado() {\r\n\r\n    if (!this.props.contrato.ready) return;\r\n\r\n    //await this.props.contrato.loteria.inicializar().send();\r\n\r\n    //await this.props.contrato.loteria.update_addressPOOL(\"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE\").send();\r\n\r\n    /*var cosa = await this.props.contrato.loteria.toTRX(\"1000000\").call()\r\n    cosa = cosa[0]\r\n    console.log(cosa)\r\n    window.alert(cosa);\r\n\r\n    cosa = await this.props.contrato.loteria.toBRST(cosa.toString()).call()\r\n    cosa = cosa[0]\r\n    console.log(cosa)\r\n    window.alert(cosa);*/\r\n\r\n    //let cosa = await this.props.contrato.loteria._premio().call()\r\n    //console.log(cosa)\r\n\r\n    //await this.props.contrato.ProxyLoteria.upgradeTo(\"TV5WezZcBPA3v3HJEkM47BBp29dYNmPdj4\").send()\r\n\r\n    //console.log(this.props.tronWeb.address.fromHex(await this.props.contrato.loteria.contractFastPool().call()))\r\n\r\n\r\n    let cantidad = 0\r\n    if (this.props.accountAddress !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n      cantidad = parseInt((await this.props.contrato.BRLT.balanceOf(this.props.accountAddress).call()))\r\n    }\r\n    let totalNFT = parseInt((await this.props.contrato.BRLT.totalSupply().call()))\r\n    let premio = parseInt((await this.props.contrato.loteria.premio().call())[0]) / 10 ** 6\r\n    let LastWiner = parseInt(await this.props.contrato.loteria.lastWiner().call())\r\n\r\n    this.setState({\r\n      totalNFT,\r\n      premio,\r\n      LastWiner,\r\n    })\r\n\r\n    let onSaleURI = \"https://nft-metadata.brutusservices.com/v1/lottery?ticket=\" + totalNFT\r\n    let onSalemetadata = JSON.parse(await (await fetch(utils.proxy + onSaleURI)).text());\r\n\r\n    let onSale = <div className=\"col-md-6 col-sm-12\" key={\"tiket-onsale-\" + totalNFT}>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"new-arrival-product\">\r\n            <div className=\"new-arrival-content text-center\">\r\n              <h4>Ticket #{totalNFT} FOR SALE</h4>\r\n            </div>\r\n            <div className=\"new-arrivals-img-contnent\">\r\n              <img src={onSalemetadata.image} alt={onSalemetadata.name + \" # \" + onSalemetadata.number} className=\"img-thumbnail\"></img>\r\n            </div>\r\n            <button className=\"btn btn-primary mt-1\" onClick={() => this.preCompra()} >  {\">>>\"} {this.state.total + \" \"}TRX {\"<<<\"}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    this.setState({ onSale })\r\n\r\n    let proximoSorteo = parseInt(await this.props.contrato.loteria.proximaRonda().call())\r\n    this.setState({ contarSegundos: proximoSorteo })\r\n    let prosort = proximoSorteo;\r\n    proximoSorteo = new Date(proximoSorteo * 1000)\r\n\r\n    this.setState({ deadline: proximoSorteo })\r\n\r\n    var minutos = proximoSorteo.getMinutes()\r\n\r\n    if (minutos < 10) {\r\n      minutos = \"0\" + minutos;\r\n    }\r\n\r\n    this.setState({\r\n      mc: cantidad,\r\n      proximoSorteo: \"Day \" + proximoSorteo.getDate() + \" | \" + proximoSorteo.getHours() + \":\" + minutos + \"Hrs\",\r\n      prosort,\r\n    });\r\n\r\n\r\n    let myTikets = parseInt((await this.props.contrato.BRLT.balanceOf(this.props.accountAddress).call()))\r\n\r\n    /*\r\n    let inputs = [\r\n      {type: 'address', value: this.props.tronWeb.address.toHex(\"TKSpw8UXhJYL2DGdBNPZjBfw3iRrVFAxBr\")},\r\n      //{ type: 'uint256', value: \"72\" }\r\n    ]\r\n\r\n    let funcion = \"deleteVaul(uint256)\"\r\n    const options = {}\r\n    let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.loteria.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n    let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n    .catch((e) => { console.log(e)})\r\n    transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n    .catch((e) => { console.log(e)})\r\n\r\n    console.log(transaction)\r\n    */\r\n\r\n\r\n    let { tikets } = this.state\r\n\r\n    for (let index = 0; index < myTikets; index++) {\r\n\r\n      let globalId = parseInt((await this.props.contrato.BRLT.tokenOfOwnerByIndex(this.props.accountAddress, index).call()))\r\n\r\n      let URI = await this.props.contrato.BRLT.tokenURI(globalId).call()\r\n      let metadata = JSON.parse(await (await fetch(utils.proxy + URI)).text());\r\n\r\n      //console.log(metadata)\r\n\r\n      let button = <></>\r\n\r\n      let value = new BigNumber(parseInt(await this.props.contrato.loteria.valueNFT(globalId).call())).shiftedBy(-6).dp(2).toString(10)\r\n\r\n      if (value > 0) {\r\n        button = (<div className=\"new-arrival-content text-center mt-3\">\r\n          <button className=\"btn btn-success\" >Prize {value} TRX</button>\r\n        </div>)\r\n      }\r\n\r\n      tikets[index] = (\r\n\r\n        <div className=\"col-3\" key={\"tiket-lottery-\" + globalId}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"new-arrival-product\">\r\n                <div className=\"new-arrival-content text-center mt-3\">\r\n                  <h4>Ticket #{globalId}</h4>\r\n                </div>\r\n                <div className=\"new-arrivals-img-contnent\">\r\n                  <img src={metadata.image} alt={metadata.name + \" # \" + metadata.number} className=\"img-thumbnail\"></img>\r\n                </div>\r\n                {button}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      this.setState({\r\n        tikets\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async preCompra() {\r\n\r\n    //alquiler de energia\r\n\r\n    if (this.state.moneda !== \"trx\") {\r\n      await this.sunSwap(this.state.moneda);\r\n    }\r\n    this.compra()\r\n\r\n  }\r\n\r\n\r\n  async compra() {\r\n\r\n\r\n    let feelimit = 200 * 10 ** 6;\r\n\r\n    // comprobar si tiene 100 trx para hacer la compra\r\n\r\n    if (this.state.comprarBRLT > 1) feelimit = 1000 * 10 ** 6;\r\n    if (this.state.comprarBRLT > 20) feelimit = 2000 * 10 ** 6;\r\n\r\n    let inputs = [\r\n      { type: 'address', value: this.props.tronWeb.address.toHex(this.props.accountAddress) },\r\n      { type: 'uint256', value: this.state.comprarBRLT }\r\n    ]\r\n\r\n    let funcion = \"buyLoteria(address,uint256)\"\r\n    const options = { callValue: new BigNumber(this.state.total).shiftedBy(6).dp(0).toString(10), feelimit: feelimit }\r\n    let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.loteria.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n    let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          modalTitulo: \"Error\",\r\n          modalBody: e.toString()\r\n        })\r\n\r\n        console.error(e)\r\n\r\n        window.$(\"#alerta\").modal(\"show\");\r\n        return false\r\n      })\r\n\r\n    if (transaction) {\r\n      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            modalTitulo: \"Purchased lottery ticket\",\r\n            modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n          this.estado();\r\n        })\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#alerta\").modal(\"show\");\r\n          return false\r\n        })\r\n    }\r\n\r\n    //await this.props.contrato.BRST_TRX_Proxy.esperaRetiro(amount).send();\r\n\r\n    /*\r\n        this.props.contrato.loteria.buyLoteria(this.props.accountAddress, this.state.comprarBRLT).send({ callValue: new BigNumber(this.state.total).shiftedBy(6).dp(0).toString(10), feeLimit: feelimit })\r\n          .then(() => {\r\n            this.setState({\r\n              modalTitulo: \"Purchased lottery ticket\",\r\n              modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n            })\r\n            window.$(\"#alerta\").modal(\"show\");\r\n            this.estado();\r\n    \r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              modalTitulo: \"Failed transaction\",\r\n              modalBody: \"Please try again later remember to check that you have enough resources\"\r\n            })\r\n            window.$(\"#alerta\").modal(\"show\");\r\n          })\r\n    */\r\n\r\n    this.estado();\r\n  }\r\n\r\n  async sorteo() {\r\n\r\n    //await this.props.contrato.BRST_TRX_Proxy.setDisponible(\"2000000000\").send()\r\n    let premio = parseInt(await this.props.contrato.loteria._premio().call())\r\n\r\n    let salida = parseInt(await this.props.contrato.BRST_TRX_Proxy.TRON_PAY_BALANCE_WHITE().call())\r\n\r\n    if (Date.now() >= (this.state.prosort * 1000) && salida >= premio) {\r\n      this.props.contrato.loteria.sorteo().send()//.send({shouldPollResponse:true})\r\n        .then(async (r) => {\r\n          console.log(r)\r\n          await this.estado()\r\n          this.setState({\r\n            modalTitulo: \"Good luck\",\r\n            modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n          this.setState({\r\n            modalTitulo: \"Bad luck\",\r\n            modalBody: \"something has not gone well, thank you for trying to collaborate, it will be on a next occasion \"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n        })\r\n    } else {\r\n      this.setState({\r\n        modalTitulo: \"Please wait\",\r\n        modalBody: \"It is not yet time to carry out the draw, wait for the announced date to collaborate with the draw\"\r\n      })\r\n      window.$(\"#alerta\").modal(\"show\");\r\n    }\r\n\r\n    this.estado();\r\n  }\r\n\r\n  async consultarPrecio() {\r\n\r\n    var precio = await this.props.contrato.loteria.RATE().call();\r\n    precio = parseInt(precio) / 10 ** 6;\r\n\r\n    this.setState({\r\n      precioBRUT: precio\r\n    });\r\n\r\n    return precio;\r\n\r\n  };\r\n\r\n\r\n\r\n  async sunSwap(coin) {\r\n\r\n    let token\r\n    let swapContract\r\n    let trxAddress\r\n\r\n    switch (coin) {\r\n      case \"usdt\":\r\n\r\n        token = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\r\n        swapContract = \"TFGDbUyP8xez44C76fin3bn3Ss6jugoUwJ\"\r\n        trxAddress = \"TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR\"\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // cantidades que costará\r\n\r\n    let contract_base_token = await this.props.tronWeb.contract().at(token)\r\n    let amount_base_token = await contract_base_token.balanceOf(swapContract).call()\r\n    amount_base_token = parseInt(amount_base_token)\r\n    amount_base_token = new BigNumber(amount_base_token).shiftedBy(-1 * (await contract_base_token.decimals().call()))\r\n\r\n    let contract_result_token = await this.props.tronWeb.contract().at(trxAddress)\r\n    let amount_result_token = await contract_result_token.balanceOf(swapContract).call()\r\n    amount_result_token = parseInt(amount_result_token)\r\n    amount_result_token = new BigNumber(amount_result_token).shiftedBy(-1 * (await contract_result_token.decimals().call()))\r\n\r\n\r\n    let price = new BigNumber(amount_base_token).dividedBy(amount_result_token)\r\n\r\n\r\n    price = price.times(this.state.comprarBRLT).times(this.state.precioUnidad)\r\n\r\n    //console.log(price.toString(10))\r\n\r\n    alert(\"will spend approximately ~ \" + price.toString(10) + \" (\" + await contract_base_token.name().call() + \") -> \" + await contract_base_token.name().call())\r\n\r\n\r\n    let contrato = await this.props.tronWeb.contract(abi_SUNSAWPv2, sunswapRouter)///esquema de funciones desde TWetT85bP8PqoPLzorQrCyyGdCEG3MoQAk\r\n\r\n    let aprove = await contract_base_token.allowance(this.props.accountAddress, sunswapRouter).call()\r\n    aprove = parseInt(aprove)\r\n\r\n    if (aprove <= 0) {\r\n      await contract_base_token.approve(sunswapRouter, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send()\r\n    }\r\n\r\n    let cantidadTrx = parseInt(this.state.comprarBRLT * this.state.precioUnidad * 10 ** 6)\r\n\r\n    let tokenMax = new BigNumber(this.state.balanceDCT).shiftedBy((this.state.decimalesDCT)).toString(10)\r\n\r\n    let intercam = await contrato[\"4a25d94a\"](cantidadTrx, tokenMax, [this.props.tronWeb.address.toHex(token), this.props.tronWeb.address.toHex(trxAddress)], this.props.accountAddress, (parseInt(Date.now() / 1000)) + 100).send()\r\n\r\n    console.log(intercam)\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body pb-2\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-12\">\r\n                    <img src=\"images/banner-brutuslottery.jpg\" width=\"100%\" alt=\"\" style={{ borderRadius: \"4px\" }} ></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <hr></hr>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"text-center row align-items-center justify-content-center\">\r\n\r\n                      {this.state.onSale}\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                              <div className=\"me-3\">\r\n                                <h2 className=\" count-num mb-0\">Next round: {this.state.days} {this.state.hours}:{this.state.minutes}:{this.state.seconds}</h2>\r\n                              </div>\r\n                              <div id=\"ticketSold\"></div>\r\n                            </div>\r\n                            <div className=\"progress mb-2\" style={{ \"height\": \"10px\" }}>\r\n                              <div className=\"progress-bar bg-warning progress-animated\" style={{ \"width\": this.state.porcentaje + \"%\", \"height\": \"10px\" }} role=\"progressbar\">\r\n                              </div>\r\n                            </div>\r\n                            <p>{this.state.proximoSorteo}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                              <h4 className=\"fs-18 font-w400\">Award</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\">{this.state.premio} TRX</h2>\r\n                                <span className=\"fs-16 font-w500 text-success ps-2\"><i className=\"bi bi-caret-up-fill pe-2\"></i></span>\r\n                              </div>\r\n                            </div>\r\n                            <div id=\"barChart\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n                              window.open(\"https://apenft.io/#/collection/TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU\", '_blank')\r\n                            }}>\r\n\r\n                              <h4 className=\"fs-18 font-w400\">NFT Sold</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\">{this.state.totalNFT}</h2>\r\n                              </div>\r\n                            </div>\r\n                            <div id=\"totalInvoices\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n                              window.open(\"https://apenft.io/#/asset/TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU/\" + this.state.LastWiner, '_blank')\r\n                            }}>\r\n\r\n                              <h4 className=\"fs-18 font-w400\">Last Winner</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\" >#{this.state.LastWiner}</h2>\r\n                              </div>\r\n\r\n                            </div>\r\n                            <div id=\"paidinvoices\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n\r\n                  <div className=\"card-body \">\r\n\r\n                    <h2 className=\"heading\">My Tickets</h2>\r\n                    <p>\r\n                      The probability of winning is based on how many tickets you have, the more tickets you have, the greater the probability of winning.\r\n                      <br></br><br></br>\r\n\r\n                    </p>\r\n\r\n                    <div className=\"row\">\r\n                      {this.state.tikets}\r\n\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n\r\n                  <div className=\"card-body \">\r\n\r\n                    <h2 className=\"heading\">Welcome to Brutus Lottery</h2>\r\n\r\n\r\n                    <p>\r\n                      Where the thrill of acquiring unique NFTs meets the chance to win substantial prizes. Discover a collection of 9999 exclusive NFTs, each representing a digital masterpiece priced at 100 TRX. Engage in bi-weekly automated draws, with 80% of the proceeds going to the winner and 20% to the Brutus Lottery team.\r\n                      <br ></br><br ></br>\r\n\r\n                    </p>\r\n\r\n                    <h4>What We Offer:</h4><br></br>\r\n                    <ol>\r\n                      <li>\r\n                        <b>Exclusive NFTs:</b> Explore a collection of 9999 unique NFTs, each a digital artwork priced at 100 TRX.\r\n                      </li>\r\n                      <li>\r\n                        <b>Bi-weekly Draws:</b> Participate in automatic draws every fifteen days, offering an 80% prize to the winner.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Transparent Process:</b> NFT minting via the Brutus Lottery TRC721 contract ensures authenticity.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Automated and Randomized:</b> Draw results are automatic, and our randomness coefficient guarantees fairness.\r\n\r\n                      </li>\r\n                    </ol>\r\n\r\n                    <h4>How to Participate:</h4>\r\n\r\n                    <ol>\r\n                      <li>\r\n                        <b>Acquire NFTs:</b> Increase your winning chances by acquiring unique NFTs.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Effortless Draws:</b> Prizes are automatically delivered at draw time, eliminating the need for claims.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Explore Infinite Possibilities:</b> Each NFT opens doors to a universe of possibilities, merging digital art with the excitement of draws.\r\n\r\n                      </li>\r\n                    </ol>\r\n                    <p className=\"text-center\">\r\n                      <br></br><br></br>\r\n                      Join Brutus Lottery and experience the thrill of the unique, where every NFT unlocks endless opportunities.\r\n                    </p>\r\n\r\n                    <p className=\"text-center\" >\r\n                      <a href=\"https://brutus.finance/docs/Terms-and-Conditions-Brutus-Lottery.pdf\" className=\"btn btn-primary\">{\"--> \"}Read all Terms and Conditions {\" <--\"}</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h4 className=\"card-title\">Smart Contracts </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p>\r\n                    <b>Lottery:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.SC4 + \"/code\"}>{utils.SC4}</a>\r\n                    <br></br>\r\n                    <b>NFT:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.BRLT + \"/code\"}>{utils.BRLT}</a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"alerta\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{this.state.modalTitulo}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {this.state.modalBody}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst amountsE = [\r\n  { amount: 32000, text: \"32K\" },\r\n  { amount: 100000, text: \"100K\" },\r\n  { amount: 160000, text: \"160K\" },\r\n  { amount: 1000000, text: \"1M\" },\r\n  { amount: 3000000, text: \"3M\" }\r\n]\r\n\r\nconst amountB = [\r\n  { amount: 1000, text: \"1k\" },\r\n  { amount: 2000, text: \"2k\" },\r\n  { amount: 5000, text: \"5k\" },\r\n  { amount: 10000, text: \"10k\" },\r\n  { amount: 50000, text: \"50k\" }\r\n]\r\n\r\nlet intervalId\r\n\r\nexport default class EnergyRental extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      deposito: \"Loading...\",\r\n      wallet: \"Loading...\",\r\n      precio: \"****\",\r\n      wallet_orden: \"\",\r\n      recurso: \"energy\",\r\n      cantidad: 32000,\r\n      montoMin: 32000,\r\n      minPrice: '2.56',\r\n      periodo: 5,\r\n      temporalidad: \"min\",\r\n      duration: '5min',\r\n      av_band: new BigNumber(0),\r\n      av_energy: new BigNumber(0),\r\n      available_bandwidth: [],\r\n      available_energy: [],\r\n      total_bandwidth_pool: 0,\r\n      total_energy_pool: 0,\r\n      titulo: \"Titulo\",\r\n      body: \"Cuerpo del mensaje\",\r\n      amounts: amountsE,\r\n      energyOn: false,\r\n      bandOn: false,\r\n      fromUrl: true,\r\n\r\n      unitEnergyPrice: new BigNumber(1),\r\n      precios: {energy: [], bandwidth: []},\r\n\r\n    };\r\n\r\n    this.handleChangePeriodo = this.handleChangePeriodo.bind(this);\r\n    this.handleChangeWallet = this.handleChangeWallet.bind(this);\r\n\r\n    this.updateAmount = this.updateAmount.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.recursos = this.recursos.bind(this);\r\n    this.calcularRecurso = this.calcularRecurso.bind(this);\r\n    this.calcularPrecios = this.calcularPrecios.bind(this);\r\n\r\n    this.preCompra = this.preCompra.bind(this);\r\n    this.compra = this.compra.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    document.title = \"B.F | E-Bot\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"ebot.tittle\")\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 1 * 1000)\r\n\r\n    intervalId = setInterval(() => {\r\n      this.estado()\r\n\r\n    }, 60 * 1000)\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n  handleChangeWallet(event) {\r\n    let dato = event.target.value;\r\n    this.setState({\r\n      wallet_orden: dato\r\n    });\r\n  }\r\n\r\n  handleChangePeriodo(event) {\r\n    let dato = (event.target.value).toLowerCase();\r\n    let tmp = \"d\"\r\n\r\n    document.getElementById(\"periodo\").value = dato;\r\n\r\n\r\n    if (dato.split(\"h\").length > 1 || dato.split(\"hora\").length > 1) {\r\n      tmp = \"h\"\r\n    }\r\n\r\n    if (dato.split(\"m\").length > 1 || dato.split(\"min\").length > 1) {\r\n      tmp = \"m\"\r\n    }\r\n\r\n    this.setState({\r\n      periodo: parseInt(dato),\r\n      temporalidad: tmp\r\n    });\r\n\r\n    this.calcularRecurso()\r\n\r\n\r\n  }\r\n\r\n  updateAmount(amount) {\r\n\r\n    let { recurso } = this.state\r\n\r\n    let montoMin = 32000\r\n    if (recurso === \"bandwidth\") {\r\n      montoMin = 1000\r\n    }\r\n\r\n    this.setState({ montoMin })\r\n\r\n    let cantidad = 0;\r\n    if (amount) {\r\n      cantidad = amount\r\n      try {\r\n        document.getElementById(\"amount\").value = amount\r\n\r\n      } catch(e){\r\n        console.log(e)\r\n      }\r\n\r\n    } else {\r\n      try {\r\n      cantidad = document.getElementById(\"amount\").value\r\n        \r\n      } catch(e){\r\n        console.log(e)\r\n      }\r\n\r\n    }\r\n\r\n    cantidad = parseInt(cantidad)\r\n\r\n    if (parseInt(cantidad) < montoMin || isNaN(cantidad)) {\r\n      cantidad = montoMin\r\n    }\r\n\r\n    this.setState({ cantidad })\r\n\r\n    return cantidad\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { fromUrl } = this.state\r\n\r\n    await this.recursos();\r\n    await this.calcularPrecios();\r\n\r\n    let loc = document.location.href;\r\n    if (loc.indexOf('amount') > 0 && fromUrl) {\r\n      let getString = loc.split('?')[1];\r\n      let GET = getString.split('&');\r\n      let get = {};\r\n      let tmp;\r\n\r\n      for (var i = 0, l = GET.length; i < l; i++) {\r\n        tmp = GET[i].split('=');\r\n        get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n      }\r\n\r\n\r\n      if (parseInt(get['amount']) >= 32000) {\r\n        let cantidad = parseInt(get['amount'])\r\n        let recurso = \"energy\"\r\n        let duration = \"5min\"\r\n        if (get['resource'] !== undefined) {\r\n          recurso = get['resource']\r\n        }\r\n\r\n        if (recurso === \"band\" || recurso === \"bandwidth\") {\r\n          recurso = \"bandwidth\"\r\n        } else {\r\n          recurso = \"energy\"\r\n        }\r\n\r\n        if (get['duration'] !== undefined) {\r\n          duration = get['duration']\r\n        }\r\n\r\n        await this.setState({\r\n          cantidad,\r\n          recurso,\r\n          temporalidad: 'm',\r\n          periodo: '5',\r\n          duration,\r\n          fromUrl: false\r\n        })\r\n\r\n        this.updateAmount(cantidad)\r\n\r\n        this.preCompra()\r\n      }\r\n\r\n\r\n\r\n    } else {\r\n      await this.calcularRecurso()\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async recursos() {\r\n\r\n    let { energyOn, bandOn } = this.state\r\n\r\n    let band = 0\r\n    let energi = 0\r\n    let consulta = false\r\n    const URL = \"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL\r\n\r\n    try {\r\n\r\n      consulta = await fetch(URL)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n      energyOn = consulta.available\r\n      bandOn = consulta.available\r\n\r\n      consulta = await fetch(URL + \"available\")\r\n        .then((r) => r.json())\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n      consulta = false\r\n    }\r\n\r\n    if (!consulta) return false;\r\n\r\n    energi = [\r\n      {\r\n        duration: \"5min\",\r\n        available: consulta.av_energy[0].available\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        available: consulta.av_energy[0].available\r\n      },\r\n      {\r\n        duration: \"1d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"3d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"7d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"14d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n\r\n    ]\r\n\r\n    band = [\r\n      {\r\n        duration: \"5min\",\r\n        available: consulta.av_band[0].available\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"1d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"3d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"7d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"14d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n    ]\r\n\r\n    this.setState({\r\n      available_bandwidth: band,\r\n      available_energy: energi,\r\n      total_bandwidth_pool: consulta.total_bandwidth_pool,\r\n      total_energy_pool: consulta.total_energy_pool,\r\n      energyOn,\r\n      bandOn\r\n    });\r\n\r\n    return energyOn\r\n  }\r\n\r\n  async calcularRecurso() {\r\n\r\n    let { recurso, montoMin, precio, available_bandwidth, available_energy } = this.state\r\n\r\n    let cantidad = this.updateAmount()\r\n    let time = document.getElementById(\"periodo\").value\r\n    this.setState({ duration: time })\r\n\r\n    let av_energy = available_energy.find(obj => obj.duration === time)\r\n    av_energy = new BigNumber(av_energy.available)\r\n    this.setState({ av_energy })\r\n\r\n    let av_band = available_bandwidth.find(obj => obj.duration === time)\r\n    av_band = new BigNumber(av_band.available)\r\n    this.setState({ av_band })\r\n\r\n\r\n    let ok = true;\r\n\r\n    if (time.indexOf(\"d\") >= 0) {\r\n\r\n      if (parseInt(time[0]) < 1 || parseInt(time[0]) > 14) {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[1]\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      time = time.split(\"d\")[0]\r\n\r\n    }\r\n\r\n    if (time.indexOf(\"h\") >= 0) {\r\n\r\n      if (parseInt(time[0]) !== 1) {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.eRange2\"),\r\n          periodo: \"1\"\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      time = \"1h\"\r\n\r\n    }\r\n\r\n    if (time.indexOf(\"m\") >= 0) {\r\n\r\n      if (parseInt(time[0]) !== 5) {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.eRange2\"),\r\n          periodo: \"5\"\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      time = \"5min\"\r\n\r\n    }\r\n\r\n    let priceList = this.state.precios[recurso]\r\n\r\n    if (ok && priceList.length > 0) {\r\n\r\n      const foundPrice = priceList.find(price => price.duration === time);\r\n\r\n      //console.log(cantidad, time, recurso)\r\n\r\n      precio = new BigNumber(foundPrice.UE).times(cantidad)\r\n      // cobro adicional para aumentar la reserva de trx === 10_000 SUN\r\n      precio = precio.plus(0)\r\n\r\n      precio = precio.shiftedBy(-6).dp(6)\r\n\r\n      this.setState({ unitEnergyPrice: foundPrice.UE })\r\n\r\n      if (parseInt(cantidad) <= montoMin) {\r\n        this.setState({ minPrice: precio })\r\n      }\r\n\r\n    } else {\r\n      precio = \"**.**\"\r\n\r\n    }\r\n\r\n    this.setState({\r\n      precio: precio\r\n    })\r\n\r\n    return precio\r\n  }\r\n\r\n  async calcularPrecios() {\r\n    let { precios } = this.state\r\n\r\n    let url = \"https://cors.brutusservices.com/\" + process.env.REACT_APP_BOT_URL + \"prices/all\"\r\n\r\n    let consulta = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(async (r) => await r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false\r\n      })\r\n\r\n    \r\n    if(consulta){\r\n      precios[\"energy\"] = [\r\n        {\r\n          duration: \"5min\",\r\n          UE: new BigNumber(consulta.energy_minutes_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1h\",\r\n          UE: new BigNumber(consulta.energy_hour_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1\",\r\n          UE: new BigNumber(consulta.energy_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"3\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"7\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(7 / 3).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"14\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(14 / 3).dp(6).toNumber()\r\n        },\r\n      ]\r\n  \r\n      precios[\"bandwidth\"] = [\r\n        {\r\n          duration: \"5min\",\r\n          UE: new BigNumber(consulta.band_minutes_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1h\",\r\n          UE: new BigNumber(consulta.band_hour_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1\",\r\n          UE: new BigNumber(consulta.band_one_day_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"3\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"7\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(7 / 3).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"14\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(14 / 3).dp(6).toNumber()\r\n        },\r\n      ]\r\n      \r\n      this.setState({ precios })\r\n    }\r\n\r\n    return precios\r\n  }\r\n\r\n  async preCompra() {\r\n\r\n    await this.recursos();\r\n\r\n    let { wallet_orden, cantidad, periodo, temporalidad, recurso, energyOn, bandOn, av_energy, av_band, total_energy_pool, total_bandwidth_pool } = this.state\r\n    let { accountAddress, tronWeb, i18n } = this.props\r\n\r\n    if (!energyOn || !bandOn) {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.eResource\", { returnObjects: true })[0],\r\n        body: (<span>{i18n.t(\"ebot.alert.eResource\", { returnObjects: true })[1]}\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (av_energy.toNumber() < total_energy_pool * 0.005) {\r\n      energyOn = false;\r\n\r\n      if (recurso === \"energy\") {\r\n        this.setState({\r\n          titulo: <>{this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[0]}</>,\r\n          body: <> <img src=\"/images/alerts/recarge_energy.jpeg\" alt=\"Energy sold out\" style={{ borderRadius: \"15px\", width: \"100%\" }}></img> <br></br><br></br>{this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[1]}</>,\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n    }\r\n\r\n\r\n    if (av_band.toNumber() < total_bandwidth_pool * 0.005) {\r\n      bandOn = false;\r\n      if (recurso !== \"energy\") {\r\n        this.setState({\r\n          titulo: this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[0],\r\n          body: this.props.i18n.t(\"ebot.alert.soldOut\", { returnObjects: true })[1],\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n    }\r\n\r\n    let pagas = (await this.calcularRecurso()).toNumber()\r\n\r\n    if (isNaN(pagas)) {\r\n      this.setState({\r\n        titulo: \"Error\",\r\n        body: \"error to calculating price of resource\"\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n    if (wallet_orden === \"\" || !tronWeb.isAddress(wallet_orden)) {\r\n      this.setState({\r\n        wallet_orden: accountAddress\r\n      })\r\n    }\r\n\r\n    if (parseFloat(pagas) > new BigNumber(await tronWeb.trx.getBalance(accountAddress)).shiftedBy(-6).toNumber()) {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.noFounds\", { returnObjects: true })[0],\r\n        body: (<span>{i18n.t(\"ebot.alert.noFounds\", { returnObjects: true })[1]}\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (wallet_orden === \"\" || !tronWeb.isAddress(wallet_orden)) {\r\n      this.setState({\r\n        wallet_orden: accountAddress\r\n      })\r\n    }\r\n\r\n    if (wallet_orden === \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.eTronlink\", { returnObjects: true })[0],\r\n        body: (<span>\r\n          {i18n.t(\"ebot.alert.eTronlink\", { returnObjects: true })[1]}\r\n          <br ></br>\r\n          <button className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Ok</button>\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (recurso === \"energy\") {\r\n      if (cantidad > av_energy.toNumber()) {\r\n        this.setState({\r\n          titulo: \"Error\",\r\n          body: \"insufficient resources to cover this order try a lower value or try again later.\"\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n        return;\r\n      }\r\n    } else {\r\n      if (cantidad > av_band.toNumber()) {\r\n        this.setState({\r\n          titulo: \"Error\",\r\n          body: \"insufficient resources to cover this order try a lower value or try again later.\"\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    this.setState({\r\n      titulo: <>Confirm order information</>,\r\n      body: (<span>\r\n        <b>Buy: </b> {cantidad + \" \" + recurso + \" \" + periodo + temporalidad}<br></br>\r\n        <b>For: </b> {pagas} TRX<br></br>\r\n        <b>To: </b> {this.state.wallet_orden}<br></br>\r\n        <br ></br><br ></br>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-ebot\").modal(\"hide\") }}>Cancel <i className=\"bi bi-x-circle\"></i></button>\r\n        {\" \"}\r\n        <button type=\"button\" className=\"btn btn-success\" onClick={() => { this.compra(cantidad, periodo, temporalidad, recurso, wallet_orden, pagas) }}>Confirm <i className=\"bi bi-bag-check\"></i></button>\r\n      </span>)\r\n    })\r\n\r\n    window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n\r\n  }\r\n\r\n  async compra() {\r\n\r\n    let { cantidad, periodo, temporalidad, recurso, wallet_orden, precio } = this.state\r\n\r\n    const imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" ></img>\r\n\r\n    this.setState({\r\n      titulo: <>Confirm transaction {imgLoading}</>,\r\n      body: <>Please confirm the transaction from your wallet </>\r\n    })\r\n\r\n    window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    const unSignedTransaction = await this.props.tronWeb.transactionBuilder.sendTrx(process.env.REACT_APP_WALLET_API, this.props.tronWeb.toSun(precio), this.props.accountAddress);\r\n    // using adapter to sign the transaction\r\n    const signedTransaction = await window.tronWeb.trx.sign(unSignedTransaction)\r\n      .catch((e) => {\r\n        this.setState({\r\n          ModalTitulo: \"Transaction failed\",\r\n          ModalBody: <>{e.toString()}\r\n            <br ></br><br ></br>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>Close</button>\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false;\r\n      })\r\n\r\n    if (!signedTransaction) { return false; }\r\n\r\n    this.setState({\r\n      titulo: <>Your order is being processed {imgLoading}</>,\r\n      body: \"Wait while one of our robots attends to your recharge, we try to be as fast as possible.\"\r\n    })\r\n\r\n    let consulta2 = await utils.rentResource(wallet_orden, recurso, cantidad, periodo, temporalidad, precio, signedTransaction);\r\n\r\n    if (consulta2.result) {\r\n\r\n      this.setState({\r\n        titulo: \"Completed successfully\",\r\n        body: <>Energy rental completed successfully.<br ></br><br ></br> <button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-success\">Thank you!</button></>\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    } else {\r\n\r\n      console.log(consulta2)\r\n\r\n      this.setState({\r\n        titulo: \"Contact support\",\r\n        body: \"Support hash: \" + consulta2.hash + \" | \" + consulta2.msg\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    let { unitEnergyPrice, amounts, recurso, av_energy, av_band } = this.state\r\n    const amountButtons = amounts.map(amounts => <button key={\"Amb-\" + amounts.text} id=\"ra1\" type=\"button\" className=\"btn btn-primary\"\r\n      style={{ margin: \"auto\" }} onClick={() => { this.updateAmount(amounts.amount); this.estado() }}>{amounts.text}</button>)\r\n\r\n    let texto = <>Bandwidth Pool: {av_band.toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</>\r\n    let porcentaje = av_band.toNumber() * 100 / this.state.total_bandwidth_pool\r\n\r\n    if (recurso === \"energy\") {\r\n      texto = <>Energy Pool: {av_energy.toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</>\r\n      porcentaje = av_energy.toNumber() * 100 / this.state.total_energy_pool\r\n    }\r\n\r\n    if (isNaN(porcentaje)) porcentaje = 0\r\n\r\n\r\n    let medidor = (<>\r\n      <p className=\"font-14\">{texto} ({new BigNumber(porcentaje).dp(2).toString(10)}%)</p>\r\n      <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n        <div className=\"progress-bar\" role=\"progressbar\" style={{ \"width\": porcentaje + \"%\" }}\r\n          aria-valuenow={porcentaje} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n        </div>\r\n      </div></>)\r\n\r\nfunction capitalizarPrimeraLetra(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n\r\n    return (<>\r\n\r\n      <div className=\"row \">\r\n\r\n        <div className=\"col-md-12 text-center\">\r\n          <h1>{this.props.i18n.t(\"ebot.subTittle\")}</h1>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 col-sm-12\">\r\n          <div className=\"contact-box\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"mb-4\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <h4>Rental {this.state.recurso}</h4>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"d-flex justify-content-sm-end\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                          <button id=\"btnGroupDrop1\" type=\"button\"\r\n                            className=\"btn btn-primary dropdown-toggle\"\r\n                            data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Resource\r\n                          </button>\r\n                          <ul className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n                            <li onClick={async () => {\r\n                              await this.setState({\r\n                                cantidad: 32000,\r\n                                recurso: \"energy\",\r\n                                amounts: amountsE\r\n                              });\r\n\r\n                              this.updateAmount(32000)\r\n\r\n                              await this.estado();\r\n\r\n                            }}>\r\n                              <button className=\"dropdown-item\" >Energy</button>\r\n                            </li>\r\n\r\n                            <li onClick={async () => {\r\n                              await this.setState({\r\n                                cantidad: 1000,\r\n                                recurso: \"bandwidth\",\r\n                                amounts: amountB\r\n                              });\r\n                              this.updateAmount(1000);\r\n                              await this.estado();\r\n\r\n                            }}>\r\n                              <button className=\"dropdown-item\" >Bandwidth</button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <form className=\"dzForm\" method=\"\" action=\"\">\r\n                      <div className=\"dzFormMsg\"></div>\r\n                      <input type=\"hidden\" className=\"form-control\" name=\"dzToDo\" value=\"Contact\" ></input>\r\n                      {medidor}\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 d-flex justify-content-center align-items-center\">\r\n                        <p style={{ \"marginTop\": \"auto\", \"marginRight\": \"10px\" }} className=\"font-14\">Amount</p>\r\n                        <input style={{ \"textAlign\": \"end\", border: \"lightgray  solid\" }} id=\"amount\" name=\"dzLastName\" type=\"text\" onInput={() => this.calcularRecurso()} className=\"form-control mb-1\" placeholder={this.state.montoMin} ></input>\r\n\r\n                      </div>\r\n                      <div className=\"col-xl-12 mt-2 mb-2\">\r\n                        <div className=\"d-flex justify-content-xl-center\">\r\n                          {amountButtons}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 d-flex justify-content-center align-items-center\">\r\n                        <p style={{ \"marginTop\": \"auto\", \"marginRight\": \"10px\" }} className=\"font-14\">Duration</p>\r\n                        <input style={{ \"textAlign\": \"end\", border: \"lightgray  solid\", cursor: \"not-allowed\" }} id=\"periodo\" required type=\"text\" className=\"form-control mb-1\" onChange={this.handleChangePeriodo} placeholder={\"Default: 5m (five minutes)\"} defaultValue=\"5min\" readOnly></input>\r\n\r\n                      </div>\r\n                      <div className=\"col-12 mt-2 mb-2 \">\r\n                        <div className=\"d-flex justify-content-xl-center\">\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"5min\" } }) }}>5min</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"1h\" } }) }}>1h</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"1d\" } }) }}>1d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"3d\" } }) }}>3d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"7d\" } }) }}>7d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"14d\" } }) }}>14d</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 justify-content-center align-items-center\">\r\n                        {capitalizarPrimeraLetra(this.state.recurso)} Unit: {unitEnergyPrice.toString(10)} SUN<br></br>\r\n\r\n                        <button name=\"submit\" type=\"button\" value=\"Submit\"\r\n                          className=\"btn btn-secondary\"\r\n                          style={{ width: \"100%\", height: \"40px\", marginTop: \"5px\" }} onClick={() => this.preCompra()}> Complete Purchase - Total: {this.state.precio.toString(10)} TRX\r\n                        </button>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"col-xl-12 mb-3 mb-md-4\">\r\n                        <p className=\"font-14\">Send resources for another wallet</p>\r\n\r\n                        <input name=\"dzFirstName\" required type=\"text\"\r\n                          className=\"form-control\" placeholder={this.props.accountAddress} onChange={this.handleChangeWallet} ></input>\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 pt-4 mt-5 col-sm-12 m-b30\">\r\n          <div className=\"info-box text-center\">\r\n            <img src=\"images/ebot.png\" width=\"170px\" className=\"figure-img img-fluid rounded\" alt=\"resource rental energy\" ></img>\r\n\r\n            <div className=\"info\">\r\n              <p className=\"font-20\">In Brutus Energy Bot, we've developed a app for a faster and secure resource rental experience on the Tron network. <br></br> <br></br> Innovatively simplifying the process, we ensure efficient management at competitive prices. Explore further through our <a href=\"https://t.me/BRUTUS_energy_bot\">Telegram bot</a> or API for added accessibility. <br></br> <br></br>For additional information, reach out to us at <a href=\"mailto:support@brutus.finance\">support@brutus.finance</a></p>\r\n            </div>\r\n\r\n            <div className=\"widget widget_about\">\r\n              <div className=\"widget widget_getintuch\">\r\n              </div>\r\n            </div>\r\n            <div className=\"social-box dz-social-icon style-3\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>rental operator:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + process.env.REACT_APP_WALLET_API + \"/code\"}>{process.env.REACT_APP_WALLET_API}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div >\r\n\r\n      <div className=\"modal fade\" id=\"mensaje-ebot\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">{this.state.titulo}</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>{this.state.body}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>);\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nimport { TronWeb } from \"tronweb\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\n\r\nimport CsvDownloader from 'react-csv-downloader';\r\n\r\nconst env = process.env\r\n\r\nvar moment = require('moment-timezone');\r\nconst BigNumber = require('bignumber.js');\r\n\r\nexport default class ProviderPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      provider: false,\r\n      firma: false,\r\n      rent: false,\r\n      elegible: false,\r\n      sellband: false,\r\n      bandover: \"0\",\r\n      sellener: false,\r\n      enerover: \"0\",\r\n      burn: false,\r\n      noti: false,\r\n      autofreeze: \"off\",\r\n      paymenthour: \"Loading...\",\r\n      maxdays: \"Loading...\",\r\n      ongoins: [],\r\n      nexpayment: \"Loading...\",\r\n      payoutRatio: 0,\r\n      ratioEnergy: new BigNumber(0),\r\n      ratioEnergyPool: new BigNumber(0),\r\n      paymentPoints: 0,\r\n      voteSR: \"\",\r\n      newVoteSR: \"\",\r\n      proEnergyTotal: 0,\r\n      proEnergy: 0,\r\n      proBand: 0,\r\n      proBandTotal: 0,\r\n      noregist: [],\r\n      historic: [],\r\n      dataHistoric: [],\r\n      alturaGrafico: \"0px\",\r\n      tiempo: \"\",\r\n      payment: \"0\",\r\n      payhere: \">>>>>>>>>>>>>>>Loading<<<<<<<<<<<<<<<\",\r\n      payHere: \"*************************************\",\r\n      completed: [],\r\n      totalPayed30: \"Loading...\",\r\n      allPayed: \"Loading...\",\r\n      coin: \"Loading...\",\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.setConfig = this.setConfig.bind(this);\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.title = \"Provider Panel | Brutus.Finance\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"Provider Panel\")\r\n\r\n    function esDispositivoMovil() {\r\n      return /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n    }\r\n\r\n    if (esDispositivoMovil()) {\r\n      console.log(\"movil: true\")\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 3 * 1000)\r\n\r\n    setInterval(() => {\r\n      this.estado()\r\n    }, 20 * 1000)\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    const { accountAddress } = this.props\r\n\r\n    this.setState({\r\n      tiempo: moment.tz.guess(true)\r\n    })\r\n\r\n    let url = utils.apiProviders;\r\n\r\n    let provider = { result: false };\r\n\r\n    try {\r\n      provider = await fetch(url + \"provider?wallet=\" + accountAddress)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.setState({\r\n      provider: provider.result\r\n    })\r\n\r\n    let auth = false\r\n\r\n    if (provider.result && this.props.tronlink.adapter.connected) {\r\n\r\n      let firma = localStorage.getItem('firma-tron')\r\n      let fecha = new Date(Date.now())\r\n      let messge = \"https://brutus.finance - \" + fecha.getFullYear()\r\n\r\n      if ((firma === null || firma === undefined) || await window.tronWeb.trx.verifyMessageV2(messge, firma) !== this.props.tronlink.adapter.address) {\r\n        firma = await this.props.tronlink.adapter.signMessage(messge);\r\n        //cookies.set('firma-tron', firma, { maxAge: 86400 });\r\n\r\n        localStorage.setItem('firma-tron', firma);\r\n      } else {\r\n        firma = localStorage.getItem('firma-tron')\r\n      }\r\n\r\n      try {\r\n        if (await window.tronWeb.trx.verifyMessageV2(messge, firma) === this.props.tronlink.adapter.address) {\r\n          auth = true\r\n        } else {\r\n          auth = false\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n        auth = true\r\n      }\r\n\r\n      this.setState({ firma: auth })\r\n\r\n      if (firma !== undefined && auth) {\r\n\r\n        let info = {}\r\n\r\n        try {\r\n\r\n          info = await fetch(url + \"status?wallet=\" + accountAddress)\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n        console.log(info)\r\n\r\n        let naranja = new BigNumber((info.ratio_e - info.ratio_e_pool) * 100).dp(3).toNumber()\r\n\r\n        if (naranja >= 0) {\r\n          naranja = \"+\" + naranja\r\n        }\r\n\r\n        info.naranja = naranja\r\n\r\n        if (info.freez) {\r\n          info.freez = (info.freez).toLowerCase()\r\n\r\n        }\r\n\r\n        if (info.freez === \"no\") {\r\n          info.freez = \"Off\"\r\n\r\n        }\r\n\r\n\r\n        let cuenta = await this.props.tronWeb.trx.getAccountResources(accountAddress);\r\n\r\n        let providerEnergy = 0\r\n        let providerEnergyTotal = 0\r\n\r\n        let providerBand = 0\r\n        let providerBandTotal = 0\r\n\r\n\r\n        if (cuenta.EnergyLimit) {\r\n          providerEnergy = cuenta.EnergyLimit\r\n          providerEnergyTotal = cuenta.EnergyLimit\r\n        }\r\n\r\n        if (cuenta.EnergyUsed) {\r\n          providerEnergy -= cuenta.EnergyUsed\r\n        }\r\n\r\n        if (cuenta.freeNetLimit) {\r\n          providerBandTotal = cuenta.freeNetLimit\r\n        }\r\n\r\n        if (cuenta.NetLimit) {\r\n          providerBandTotal += cuenta.NetLimit\r\n        }\r\n\r\n        providerBand = providerBandTotal\r\n\r\n        if (cuenta.freeNetUsed) {\r\n          providerBand -= cuenta.freeNetUsed\r\n\r\n        }\r\n\r\n        if (cuenta.NetUsed) {\r\n          providerBand -= cuenta.NetUsed\r\n        }\r\n\r\n        if (info.allow_notifications === 1) {\r\n          info.allow_notifications = true\r\n        } else {\r\n          info.allow_notifications = false\r\n\r\n        }\r\n\r\n        let sellener = false\r\n\r\n        if (info.energyover > 0) {\r\n          sellener = true\r\n        }\r\n\r\n        info.coin = info.currency\r\n\r\n        console.log(info)\r\n\r\n        this.setState({\r\n          ...info,\r\n          rent: info.activo,\r\n          sellener: sellener,\r\n          enerover: info.energyover,\r\n          noti: info.allow_notifications,\r\n          autofreeze: info.freez,\r\n          paymentPoints: info.payout_ratio * 100,\r\n          payoutRatio: info.payout_ratio,\r\n          ratioEnergy: new BigNumber(info.ratio_e * 100),\r\n          ratioEnergyPool: new BigNumber(info.ratio_e_pool * 100),\r\n          cNaranja: naranja,\r\n          voteSR: info.srVote,\r\n          proEnergy: providerEnergy,\r\n          proEnergyTotal: providerEnergyTotal,\r\n\r\n          proBand: providerBand,\r\n          proBandTotal: providerBandTotal,\r\n\r\n        })\r\n\r\n        let allPayed = await fetch(url + \"acum_payments\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.data;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return 0\r\n          })\r\n\r\n        allPayed = (new BigNumber(allPayed).dp(3).toNumber()).toLocaleString('en-US')\r\n        this.setState({ allPayed: allPayed })\r\n\r\n\r\n        let dataHistoric = await fetch(url + \"historic_payments\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.data;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n        let totalPayed30 = new BigNumber(0)\r\n\r\n        dataHistoric = dataHistoric.map((item, index) => {\r\n          totalPayed30 = totalPayed30.plus(item.amount)\r\n\r\n          return { index, date: moment.utc(item.date * 1000).tz(this.state.tiempo).format(\"lll\"), amount: new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber(), coin: item.coin }\r\n        })\r\n\r\n        this.setState({\r\n          dataHistoric,\r\n          totalPayed30: (totalPayed30.shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US') + \" TRX\"\r\n        })\r\n\r\n        let ongoins = await fetch(url + \"ongoingdeals\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.ongoing_deals;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n\r\n        let listWallets = []\r\n\r\n        ongoins = ongoins.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          item.lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            item.lock = \"unlock\"\r\n          } else {\r\n            item.lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          item.confirm = moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.unfreeze = moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.time = item.confirm+\" -> \"+item.unfreeze\r\n\r\n          return { index, ...item }\r\n\r\n        });\r\n\r\n\r\n        let completed = await fetch(url + \"completed_deals\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.completed_deals;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n\r\n        completed = completed.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          item.lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            item.lock = \"unlock\"\r\n          } else {\r\n            item.lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          item.confirm = moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.unfreeze = moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.time = item.confirm+\" -> \"+item.unfreeze\r\n          return { index, ...item }\r\n\r\n        });\r\n\r\n\r\n        const delegationInfo = await this.props.tronWeb.trx.getDelegatedResourceAccountIndexV2(accountAddress)\r\n\r\n        let noregist = []\r\n\r\n        if (delegationInfo.toAccounts) {\r\n\r\n          for (let index = 0; index < delegationInfo.toAccounts.length; index++) {\r\n            delegationInfo.toAccounts[index] = this.props.tronWeb.address.fromHex(delegationInfo.toAccounts[index])\r\n\r\n            if (listWallets.indexOf(delegationInfo.toAccounts[index]) === -1) {\r\n              let info = await this.props.tronWeb.trx.getDelegatedResourceV2(accountAddress, delegationInfo.toAccounts[index])\r\n\r\n              //console.log(info.delegatedResource)\r\n\r\n              for (let index2 = 0; index2 < info.delegatedResource.length; index2++) {\r\n\r\n                let order = {\r\n                  wallet: delegationInfo.toAccounts[index],\r\n                  resource: \"ENERGY\",\r\n                  trx: 0,\r\n                  sun: \"0\",\r\n                  expire: \"--/--/-- 00:00 --\",\r\n                  ownerAddress: accountAddress\r\n                }\r\n\r\n                if (info.delegatedResource[index2].frozen_balance_for_energy) {\r\n\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_energy / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_energy\r\n                  if (info.delegatedResource[index2].expire_time_for_energy) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_energy)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n                  }\r\n                } else {\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_bandwidth / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_bandwidth\r\n                  if (info.delegatedResource[index2].expire_time_for_bandwidth) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_bandwidth)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n\r\n                  }\r\n\r\n\r\n                  order.resource = \"BANDWIDTH\"\r\n                }\r\n\r\n\r\n                noregist.push(order)\r\n\r\n\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        this.setState({\r\n          ongoins,\r\n          completed,\r\n          noregist,\r\n\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async handleChange(event) {\r\n\r\n    let elemento = event.target\r\n\r\n    //console.log(elemento.id)\r\n\r\n    switch (elemento.id) {\r\n      case \"rent\":\r\n\r\n        if (elemento.value !== this.state.rent) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = 1\r\n          if (this.state.rent) {\r\n            activate = 0\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, active: activate }\r\n            fetch(utils.apiProviders + \"set/active\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            rent: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"band\":\r\n\r\n        if (elemento.value !== this.state.sellband) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let over = 0\r\n          let activate = \"0\"\r\n          if (!this.state.sellband) {\r\n            activate = \"1\"\r\n            over = parseInt(prompt(\"sell band over, leave \", this.state.bandover))\r\n\r\n            console.log(over)\r\n            if (!isNaN(over)) {\r\n              let body = { wallet: this.props.accountAddress, sellbandover: over }\r\n\r\n              fetch(utils.apiProviders + \"set/sellbandover\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  'token-api': process.env.REACT_APP_TOKEN,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n              })\r\n            }\r\n\r\n\r\n          }\r\n          // activar renta\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, sellband: activate }\r\n            fetch(utils.apiProviders + \"set/sellband\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"ener\":\r\n\r\n        if (elemento.value !== this.state.sellener) {\r\n\r\n          let over = 0\r\n          if (!this.state.sellener) {\r\n            over = parseInt(prompt(\"sell energy over, leave \", 32000))\r\n\r\n          }\r\n\r\n          //console.log(over)\r\n\r\n          if (!isNaN(over)) {\r\n            let body = { wallet: this.props.accountAddress, sellenergyover: over }\r\n\r\n            fetch(utils.apiProviders + \"set/sellenergyover\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n          }\r\n\r\n\r\n\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"burn\":\r\n\r\n        if (elemento.value !== this.state.burn) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.burn) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, burn: activate }\r\n            fetch(utils.apiProviders + \"set/burn\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          //console.log(elemento.value)\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n\r\n          this.setState({\r\n            burn: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"voteSR\":\r\n\r\n        this.setState({\r\n          newVoteSR: elemento.value\r\n        })\r\n\r\n        break;\r\n\r\n      case \"noti\":\r\n\r\n        if (elemento.value !== this.state.noti) {\r\n          //alert(\"diferentes: \" + this.state.noti) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.noti) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, allow_notifications: activate }\r\n            fetch(utils.apiProviders + \"set/allow_notifications\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            noti: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async grafico(external_data) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    const root = am5.Root.new(\"chartdiv\");\r\n    root._logo.dispose();\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    // Define data\r\n    let data = [{\r\n      date: new Date(1712953610 * 1000),\r\n      amount: 1000,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712780810 * 1000),\r\n      amount: 1300,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 1200,\r\n      coin: \"trx\"\r\n    },\r\n    {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 250,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712521610 * 1000),\r\n      amount: 200,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712435210 * 1000),\r\n      amount: 500,\r\n      coin: \"brst\"\r\n    }];\r\n\r\n    data = external_data\r\n\r\n    // Create Y-axis\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        categoryField: \"date\"\r\n      })\r\n    );\r\n    xAxis.data.setAll(data);\r\n\r\n    // Create series\r\n\r\n    let series1 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"TRX\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"amount\",\r\n        categoryXField: \"date\",\r\n        fill: am5.color(0x7135ff),\r\n        stroke: am5.color(0x7135ff)\r\n      })\r\n    );\r\n    series1.data.setAll(data);\r\n\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  async setConfig(target, info) {\r\n    const { accountAddress } = this.props\r\n    let { ModalTitulo, ModalBody } = this.state\r\n\r\n    let msg = false\r\n\r\n    async function setFreez(data) {\r\n      try {\r\n        let body = { wallet: accountAddress, autofreeze: data }\r\n        await fetch(utils.apiProviders + \"set/autofreeze\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setPaymentHour(hour) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, paymenthour: hour }\r\n        let consulta = await fetch(utils.apiProviders + \"set/paymenthour\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        }).then((r) => r.json())\r\n\r\n        if (!consulta.result && consulta.data) {\r\n\r\n          msg = true\r\n          ModalTitulo = \"Operation not executed\"\r\n          ModalBody = consulta.data\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setMaxDays(days) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, maxdays: days }\r\n        await fetch(utils.apiProviders + \"set/maxdays\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setWalletSr(wallet) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, sr: wallet }\r\n        await fetch(utils.apiProviders + \"set/sr\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setCoin(coin) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, currency: coin.toUpperCase() }\r\n        let consulta = await fetch(utils.apiProviders + \"set/change_currency\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        }).then((r) => r.json())\r\n\r\n        console.log(consulta)\r\n\r\n        if (consulta.result) {\r\n          if (consulta.data.msg) {\r\n            msg = true\r\n            ModalTitulo = \"Operation Alert\"\r\n            ModalBody = consulta.data.msg\r\n          }\r\n\r\n        } else {\r\n\r\n          msg = true\r\n          ModalTitulo = \"Operation not executed\"\r\n          ModalBody = consulta.data\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    switch (target) {\r\n      case \"setFreez\":\r\n        await setFreez(info)\r\n        break;\r\n\r\n      case \"setPaymentHour\":\r\n        await setPaymentHour(info)\r\n        break;\r\n\r\n      case \"setMaxDays\":\r\n        await setMaxDays(info)\r\n        break;\r\n\r\n      case \"setWalletSr\":\r\n        await setWalletSr(info)\r\n        break;\r\n\r\n      case \"setCoin\":\r\n        await setCoin(info)\r\n        break;\r\n\r\n      default:\r\n        alert(\"no asigned\")\r\n        break;\r\n    }\r\n\r\n    if (msg) {\r\n      this.setState({\r\n        ModalTitulo,\r\n        ModalBody\r\n      })\r\n      window.$(\"#alert\").modal(\"show\");\r\n    }\r\n\r\n\r\n    this.estado();\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    let { provider, firma, autofreeze, coin, dataHistoric } = this.state\r\n\r\n    if (provider) {\r\n\r\n      if (!firma) {\r\n\r\n        return (<>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card exchange\">\r\n                      <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n                        <h2 className=\"heading\">Status: you are a provider</h2>\r\n\r\n                        <p>\r\n                          <button className=\"btn btn-warning\" onClick={() => this.estado()}>Login</button>\r\n                        </p>\r\n\r\n                        <p>There seems to be problems when performing signature verification please contact support</p>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </>);\r\n\r\n      } else {\r\n\r\n\r\n        let estatus = <button className=\"btn btn-outline-danger btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-sign-stop-fill\"></i> Stopped</button>\r\n\r\n        if (this.state.rent) {\r\n\r\n          estatus = <button className=\"btn btn-outline-info btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-arrow-clockwise\"></i> Recharging</button>\r\n\r\n          if (this.state.elegible) {\r\n            estatus = <button className=\"btn btn-outline-success btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-check-circle-fill\"></i> Active</button>\r\n          }\r\n\r\n        }\r\n\r\n\r\n        let campoFreeze = <></>\r\n\r\n        if (autofreeze !== \"Off\") {\r\n\r\n          campoFreeze = <div className=\"container mt-1\">\r\n            <div className=\"row mt-1\">\r\n              <div className=\"col-12\">Wallet of SR to vote (default: Brutus)</div>\r\n              <div className=\"col-11\">\r\n                <input type=\"text\" className=\"form-control\" id=\"voteSR\" style={{ borderColor: \"#c3c3c3\" }} placeholder={this.state.voteSR} onChange={this.handleChange} disabled={false} ></input>\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <i className=\"bi bi-question-circle-fill\" title=\"You can set by which super representative wallet the automatic votes will be made\" onClick={() => {\r\n\r\n                  this.setState({\r\n                    ModalTitulo: \"Info\",\r\n                    ModalBody: \"You can set by which super representative wallet the automatic votes will be made\"\r\n                  })\r\n\r\n                  window.$(\"#alert\").modal(\"show\");\r\n                }}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          if (this.state.voteSR !== \"\" && TronWeb.isAddress(this.state.newVoteSR) && this.state.voteSR !== this.state.newVoteSR) {\r\n\r\n            campoFreeze = (<>\r\n              {campoFreeze}\r\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => {\r\n                this.setWalletSr(this.state.newVoteSR)\r\n              }}>Update Wallet to Vote</button>\r\n\r\n            </>)\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return (<>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-8 col-sm-12\">\r\n                    <div className=\"card exchange\">\r\n                      <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n\r\n\r\n                        <div className=\"container-fluid\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-sm-12 mb-2 text-center\">\r\n                              <img height=\"15px\" src=\"images/energy.png\" alt=\"\" ></img> Energy ({(this.state.proEnergy).toLocaleString('en-US')}/{(this.state.proEnergyTotal).toLocaleString(\"en-us\")})\r\n                              <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                                <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{ \"width\": ((this.state.proEnergy / this.state.proEnergyTotal) * 100) + \"%\" }}\r\n                                  aria-valuenow={(this.state.proEnergy / this.state.proEnergyTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-sm-12 mb-2 text-center\">\r\n                              <span role=\"img\">{\"🌐\"}</span> Bandwidth ({(this.state.proBand).toLocaleString(\"en-us\")}/{(this.state.proBandTotal).toLocaleString(\"en-us\")})\r\n                              <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                                <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ \"width\": ((this.state.proBand / this.state.proBandTotal) * 100) + \"%\" }}\r\n                                  aria-valuenow={(this.state.proBand / this.state.proBandTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\">{estatus} </h2>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\"><button type=\"button\" className=\"btn btn-outline-warning btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><img height=\"15px\" src=\"images/naranja.png\" alt=\"\" ></img> {this.state.ratioEnergy.dp(3).toString(10)} /  {this.state.ratioEnergyPool.dp(3).toString(10)} </button></h2>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\"><button className=\"btn btn-outline-secondary btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}> <span role=\"img\" aria-label=\"$\">💲</span> Payout %{this.state.paymentPoints} </button></h2>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Pay hour: {this.state.payhour} GMT</button> {\"  \"} <span role=\"img\"><i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Set the time you want to receive your daily payments\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></span>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"130\")}>1:30 GMT</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"930\")}>9:30 GMT</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"1730\")}>17:30 GMT</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Coin: {coin} </button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Set the time you want to receive your daily payments\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"trx\")}>TRX</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"usdd\")}>USDD</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"usdt\")}>USDT</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu2\">Max Days: {this.state.maxdays}</button> <i className=\"bi bi-question-circle-fill\" title=\"Establish the max. duration of the orders you want to accept\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Establish the max. duration of the orders you want to accept\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu2\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", '1h')}>1h</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 3)} >3 days</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 7)}>7 days</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 14)}>14 days</button>\r\n                              </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\" >\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu\" >Autofreeze: {this.state.autofreeze}</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"no\")}>Off</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"bandwidth\")}>Bandwidth</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"energy\")}>Energy</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                              {campoFreeze}\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \">\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"rent\" style={{ backgroundColor: this.state.rent ? \"#9568FF\" : \"lightgray\" }} checked={this.state.rent} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Rent <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume the bot\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Pause/Resume the bot\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \" style={{ textAlign: \"center\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"burn\" style={{ backgroundColor: this.state.burn ? \"#9568FF\" : \"lightgray\" }} checked={this.state.burn} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Burn <i className=\"bi bi-question-circle-fill\" title=\"Allow TRX burn to accept new orders when you run out of bandwidth\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Allow TRX burn to accept new orders when you run out of bandwidth\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \" style={{ textAlign: \"right\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"noti\" style={{ backgroundColor: this.state.noti ? \"#9568FF\" : \"lightgray\" }} checked={this.state.noti} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Notify <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume notifications from the telegram bot\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Pause/Resume notifications from the telegram bot\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-6  \">\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"band\" style={{ backgroundColor: this.state.sellband ? \"#9568FF\" : \"lightgray\" }} checked={this.state.sellband} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Band over: <br></br>{(this.state.bandover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked bandwidth over the amount you establish\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Sell your staked bandwidth over the amount you establish\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-6 \" style={{ textAlign: \"right\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"ener\" style={{ backgroundColor: this.state.sellener ? \"#9568FF\" : \"lightgray\" }} checked={this.state.sellener} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Energy over: <br></br> {(this.state.enerover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked energy over the amount you establish\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Sell your staked energy over the amount you establish\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-sm-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header border-0 pb-0\">\r\n                        <h2 className=\"heading mb-0 m-auto\">Next Payment</h2>\r\n                      </div>\r\n                      <div className=\"card-body text-center pt-3\">\r\n                        <div className=\"mt-1\">Hour {this.state.payhour} GMT</div>\r\n                        <hr></hr>\r\n                        <div className=\"count-num mt-1\">{(this.state.payment).toLocaleString(\"en-US\")} TRX</div>\r\n                        <hr></hr>\r\n\r\n                        <div className=\"mt-1\">that will be paid here:<br></br> <u onMouseEnter={() => { this.setState({ payHere: this.state.payhere }) }} onMouseLeave={() => { this.setState({ payHere: \"*************************************\" }) }}>{this.state.payHere}</u></div>\r\n\r\n                        <hr></hr>\r\n\r\n                        <div className=\"mt-1\">\r\n                          Total earned all time:<br></br>\r\n                          <b>{this.state.allPayed} TRX</b> <br></br>\r\n                          <button className=\"btn btn-danger\" onClick={() => { localStorage.removeItem(\"firma-tron\"); this.setState({ firma: false }) }}>LogOut <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\r\n                            <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z\" />\r\n                            <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z\" />\r\n                          </svg></button>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">last {dataHistoric.length} payments = {this.state.totalPayed30}</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-8 col-sm-12\">\r\n                            <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                              <table className=\"table verticle-middle table-responsive-md \" >\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th scope=\"col\" style={{ textAlign: \"right\" }}>Amount</th>\r\n                                    <th scope=\"col\">Currency</th>\r\n                                    <th scope=\"col\">Date</th>\r\n\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {\r\n                                    dataHistoric.toReversed().map((item, index) => {\r\n\r\n                                      return (\r\n                                        <tr key={index}>\r\n                                          <td align=\"right\">{(item.amount).toLocaleString('en-US')}\r\n                                          </td>\r\n                                          <td>{item.coin}</td>\r\n                                          <td>{item.date}</td>\r\n\r\n                                        </tr>\r\n                                      )\r\n                                    })\r\n                                  }\r\n\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12\">\r\n                            <div className=\"mb-3\" id=\"chartdiv\" style={{ height: this.state.alturaGrafico, backgroundColor: \"white\" }}></div>\r\n                            <button className=\"btn btn-success\" onClick={() => { if (this.state.alturaGrafico === \"0px\") { this.setState({ alturaGrafico: \"350px\" }); this.grafico(this.state.dataHistoric) } else { this.setState({ alturaGrafico: \"0px\" }); this.root.dispose(); } }}>Graphic (Open / Close)</button>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"Last_30_payments\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'amount',\r\n                            displayName: 'Amount'\r\n                          }, {\r\n                            id: 'coin',\r\n                            displayName: 'Currency'\r\n                          }, {\r\n                            id: 'date',\r\n                            displayName: 'Date'\r\n                          }]}\r\n                          datas={dataHistoric}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Ongoing deals ({this.state.ongoins.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md \" >\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">Resource / Period</th>\r\n                                <th scope=\"col\">Buyer / Time</th>\r\n                                <th scope=\"col\">Payout</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.ongoins.map((item) => {\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + item.lock + \"-fill\"}></i></td>\r\n                                    <td>{item.customer}<br ></br>\r\n                                      {item.confirm}{\" -> \"}{item.unfreeze}<br ></br>\r\n\r\n                                    </td>\r\n                                    <td>{item.payout} TRX</td>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n\r\n                              }\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"ongoing_deals\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'resource',\r\n                            displayName: 'Resource'\r\n                          }, {\r\n                            id: 'order_type',\r\n                            displayName: 'Period'\r\n                          }, {\r\n                            id: 'customer',\r\n                            displayName: 'Buyer'\r\n                          }, {\r\n                            id: 'time',\r\n                            displayName: 'Time'\r\n                          }, {\r\n                            id: 'payout',\r\n                            displayName: 'Payout'\r\n                          }]}\r\n                          datas={this.state.ongoins}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Completed deals ({this.state.completed.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md \" >\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">Resource / Period</th>\r\n                                <th scope=\"col\">Buyer / Time</th>\r\n                                <th scope=\"col\">Payout</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.completed.map((item) => {\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + item.lock + \"-fill\"}></i></td>\r\n                                    <td>{item.customer}<br ></br>\r\n                                      {item.confirm}{\" -> \"}{item.unfreeze}<br ></br>\r\n\r\n                                    </td>\r\n                                    <td>{item.payout} TRX</td>\r\n                                  </tr>\r\n                                )\r\n                              })}\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"completed_deals\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'resource',\r\n                            displayName: 'Resource'\r\n                          }, {\r\n                            id: 'order_type',\r\n                            displayName: 'Period'\r\n                          }, {\r\n                            id: 'customer',\r\n                            displayName: 'Buyer'\r\n                          }, {\r\n                            id: 'time',\r\n                            displayName: 'Time'\r\n                          }, {\r\n                            id: 'payout',\r\n                            displayName: 'Payout'\r\n                          }]}\r\n                          datas={this.state.completed}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Other delegations ({this.state.noregist.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\"></th>\r\n\r\n                                <th scope=\"col\">Resource</th>\r\n                                <th scope=\"col\">TRX</th>\r\n                                <th scope=\"col\">Wallet / Expire Time</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.noregist.map((item)=>{\r\n                                let amount = item.sun;\r\n                                let receiverAddress = item.wallet;\r\n                                let resource = item.resource;\r\n                                let ownerAddress = item.ownerAddress;\r\n\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td className=\"text-end\">\r\n                                      <div className=\"dropdown custom-dropdown mb-0\">\r\n                                        <div className=\"btn sharp btn-primary tp-btn\" data-bs-toggle=\"dropdown\">\r\n                                          <i className=\"bi bi-three-dots-vertical\"></i>\r\n                                        </div>\r\n                                        <div className=\"dropdown-menu dropdown-menu-end\">\r\n                                          <a className=\"dropdown-item text-info\" href=\"https://tronscan.org/#/wallet/resources\" target=\"_blank\" rel=\"noopener noreferrer\">View on TronScan</a>\r\n                      \r\n                                          <button className=\"dropdown-item text-danger\" onClick={async () => {\r\n                                            let transaction = await this.props.tronWeb.transactionBuilder.undelegateResource(amount, receiverAddress, resource, ownerAddress);\r\n                                            transaction = await window.tronWeb.trx.sign(transaction)\r\n                                            transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n                      \r\n                                            this.setState({\r\n                                              ModalTitulo: \"Result: \" + transaction.result,\r\n                                              ModalBody: <a className=\"btn btn-primary\" href={\"https://tronscan.org/#/transaction/\" + transaction.txid} target=\"_blank\" rel=\"noopener noreferrer\">see result in TronScan</a>\r\n                                            })\r\n                      \r\n                                            window.$(\"#alert\").modal(\"show\");\r\n                                            this.estado();\r\n                      \r\n                                          }}>Reclaim Resource</button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>{item.resource} </td>\r\n                                    <td>{(item.trx).toLocaleString('en-US')} </td>\r\n                      \r\n                                    <td>{item.wallet}<br ></br>\r\n                                      {item.expire}\r\n                                    </td>\r\n                      \r\n                                  </tr>\r\n                                )\r\n                              })}\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n\r\n          <div className=\"modal fade\" id=\"alert\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p>{this.state.ModalBody}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </>);\r\n      }\r\n    } else {\r\n\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n                      <h2 className=\"heading\">Ready for rent your energy</h2>\r\n\r\n                      <p>\r\n                        You are not a supplier? if you want to become one read the following article <br></br>\r\n                        <a className=\"btn btn-primary\" href=\"https://brutus.finance/brutusprovider.html\">Become a supplier</a>\r\n                      </p>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>);\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Cookies from 'universal-cookie';\r\nimport utils from \"../utils\";\r\n\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\n\r\nvar moment = require('moment-timezone');\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst cookies = new Cookies(null, { path: '/' });\r\n\r\nexport default class ProviderPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      provider: false,\r\n      rent: false,\r\n      elegible: false,\r\n      sellband: false,\r\n      bandover: \"0\",\r\n      burn: false,\r\n      noti: false,\r\n      autofreeze: \"off\",\r\n      paymenthour: \"Loading...\",\r\n      maxdays: \"Loading...\",\r\n      ongoins: [],\r\n      nexpayment: \"Loading...\",\r\n      payoutRatio: 0,\r\n      ratioEnergy: 0,\r\n      ratioEnergyPool: 0,\r\n      paymentPoints: 0,\r\n      voteSR: \"\",\r\n      newVoteSR: \"\",\r\n      proEnergyTotal: 0,\r\n      proEnergy: 0,\r\n      proBand: 0,\r\n      proBandTotal: 0,\r\n      noregist: [],\r\n      historic: [],\r\n      dataHistoric: [],\r\n      alturaGrafico: \"0px\",\r\n      tiempo: \"\",\r\n      payment: \"0\",\r\n      completed: [],\r\n      totalPayed30: \"Loading...\",\r\n      allPayed: \"Loading...\"\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setPaymentHour = this.setPaymentHour.bind(this);\r\n    this.setMaxDays = this.setMaxDays.bind(this);\r\n    this.setFreez = this.setFreez.bind(this);\r\n    this.setWalletSr = this.setWalletSr.bind(this);\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.title = \"B.F | Provider Panel\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"Provider Panel\")\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 3 * 1000)\r\n\r\n    setInterval(() => {\r\n      this.estado()\r\n    }, 30 * 1000)\r\n\r\n\r\n  }\r\n\r\n\r\n  async handleChange(event) {\r\n\r\n    let elemento = event.target\r\n\r\n    //console.log(elemento.id)\r\n\r\n    switch (elemento.id) {\r\n      case \"rent\":\r\n\r\n        if (elemento.value !== this.state.rent) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = 1\r\n          if (this.state.rent) {\r\n            activate = 0\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, active: activate }\r\n            fetch(utils.apiProviders + \"set/active\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            rent: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"band\":\r\n\r\n        if (elemento.value !== this.state.sellband) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let over = 0\r\n          let activate = \"0\"\r\n          if (!this.state.sellband) {\r\n            activate = \"1\"\r\n            over = parseInt(prompt(\"sell band over, leave \", this.state.bandover))\r\n\r\n            console.log(over)\r\n            let body = { wallet: this.props.accountAddress, sellbandover: over }\r\n\r\n            fetch(utils.apiProviders + \"set/sellbandover\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n          }\r\n          // activar renta\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, sellband: activate }\r\n            fetch(utils.apiProviders + \"set/sellband\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"burn\":\r\n\r\n        if (elemento.value !== this.state.burn) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.burn) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, burn: activate }\r\n            fetch(utils.apiProviders + \"set/burn\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          //console.log(elemento.value)\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n\r\n          this.setState({\r\n            burn: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"voteSR\":\r\n\r\n        this.setState({\r\n          newVoteSR: elemento.value\r\n        })\r\n\r\n        break;\r\n\r\n      case \"noti\":\r\n\r\n        if (elemento.value !== this.state.noti) {\r\n          //alert(\"diferentes: \" + this.state.noti) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.noti) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, allow_notifications: activate }\r\n            fetch(utils.apiProviders + \"set/allow_notifications\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            noti: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async grafico(external_data) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    const root = am5.Root.new(\"chartdiv\");\r\n    root._logo.dispose();\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    // Define data\r\n    let data = [{\r\n      date: new Date(1712953610 * 1000),\r\n      amount: 1000,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712780810 * 1000),\r\n      amount: 1300,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 1200,\r\n      coin: \"trx\"\r\n    },\r\n    {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 250,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712521610 * 1000),\r\n      amount: 200,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712435210 * 1000),\r\n      amount: 500,\r\n      coin: \"brst\"\r\n    }];\r\n\r\n    data = external_data\r\n\r\n    // Create Y-axis\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        categoryField: \"date\"\r\n      })\r\n    );\r\n    xAxis.data.setAll(data);\r\n\r\n    // Create series\r\n\r\n    let series1 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"TRX\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"amount\",\r\n        categoryXField: \"date\",\r\n        fill: am5.color(0x7135ff),\r\n        stroke: am5.color(0x7135ff)\r\n      })\r\n    );\r\n    series1.data.setAll(data);\r\n\r\n\r\n    // Create series\r\n    /*\r\n    let series2 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"Payed in BRST\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        categoryXField: \"date\"\r\n      })\r\n    );\r\n    series2.data.setAll(data);\r\n*/\r\n\r\n    // Add legend\r\n    /*\r\n    let legend = chart.children.push(am5.Legend.new(root, {}));\r\n    legend.data.setAll(chart.series.values);\r\n    */\r\n\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  async setFreez(data) {\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, autofreeze: data }\r\n      await fetch(utils.apiProviders + \"set/autofreeze\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setPaymentHour(hour) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, paymenthour: hour }\r\n      await fetch(utils.apiProviders + \"set/paymenthour\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setMaxDays(days) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, maxdays: days }\r\n      await fetch(utils.apiProviders + \"set/maxdays\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setWalletSr(wallet) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, sr: wallet }\r\n      await fetch(utils.apiProviders + \"set/sr\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n  }\r\n\r\n  async estado() {\r\n\r\n    this.setState({\r\n      tiempo: moment.tz.guess(true)\r\n    })\r\n\r\n    var url = utils.apiProviders;\r\n\r\n    let provider = { result: false };\r\n\r\n    try {\r\n      provider = await fetch(url + \"provider?wallet=\" + this.props.accountAddress)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    //firmar mensaje brutus.finance->\r\n    //console.log(this.props.tronlink.adapter)\r\n\r\n    if (provider.result && this.props.tronlink.adapter.connected) {\r\n\r\n      let firma = await cookies.get('firma-tron')\r\n      let messge = \"brutus.finance 2024\"\r\n\r\n      if (firma === undefined) {\r\n        firma = await this.props.tronlink.adapter.signMessage(messge);\r\n        cookies.set('firma-tron', firma, { maxAge: 86400 });\r\n      } else {\r\n        firma = await cookies.get('firma-tron');\r\n      }\r\n\r\n      let auth = false\r\n      try {\r\n        if (await window.tronWeb.trx.verifyMessageV2(messge, firma) === this.props.tronlink.adapter.address || firma) {\r\n          auth = true\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n      if (firma !== undefined && auth) {\r\n\r\n        this.setState({\r\n          provider: true,\r\n        })\r\n\r\n        let info = {}\r\n\r\n        try {\r\n\r\n          info = await fetch(url + \"status?wallet=\" + this.props.accountAddress)\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n        let naranja = new BigNumber((info.ratio_e - info.ratio_e_pool) * 100).dp(3).toNumber()\r\n\r\n        if (naranja >= 0) {\r\n          naranja = \"+\" + naranja\r\n        }\r\n\r\n        if (info.freez) {\r\n          info.freez = (info.freez).toLowerCase()\r\n\r\n        }\r\n\r\n        if (info.freez === \"no\") {\r\n          info.freez = \"Off\"\r\n\r\n        }\r\n\r\n\r\n        var cuenta = await this.props.tronWeb.trx.getAccountResources(this.props.accountAddress);\r\n\r\n\r\n        var providerEnergy = 0\r\n        var providerEnergyTotal = 0\r\n\r\n        var providerBand = 0\r\n        var providerBandTotal = 0\r\n\r\n\r\n        if (cuenta.EnergyLimit) {\r\n          providerEnergy = cuenta.EnergyLimit\r\n          providerEnergyTotal = cuenta.EnergyLimit\r\n        }\r\n\r\n        if (cuenta.EnergyUsed) {\r\n          providerEnergy -= cuenta.EnergyUsed\r\n        }\r\n\r\n        if (cuenta.freeNetLimit) {\r\n          providerBandTotal = cuenta.freeNetLimit\r\n        }\r\n\r\n        if (cuenta.NetLimit) {\r\n          providerBandTotal += cuenta.NetLimit\r\n        }\r\n\r\n        providerBand = providerBandTotal\r\n\r\n        if (cuenta.freeNetUsed) {\r\n          providerBand -= cuenta.freeNetUsed\r\n\r\n        }\r\n\r\n        if (cuenta.NetUsed) {\r\n          providerBand -= cuenta.NetUsed\r\n        }\r\n\r\n        if (info.allow_notifications === 1) {\r\n          info.allow_notifications = true\r\n        } else {\r\n          info.allow_notifications = false\r\n\r\n        }\r\n\r\n        this.setState({\r\n          rent: info.activo,\r\n          elegible: info.elegible,\r\n          sellband: info.sellband,\r\n          bandover: info.bandover,\r\n          burn: info.burn,\r\n          noti: info.allow_notifications,\r\n          autofreeze: info.freez,\r\n          payhour: info.payhour,\r\n          payment: info.payment,\r\n          paymentPoints: info.payout_ratio * 100,\r\n          maxdays: info.maxdays,\r\n          payhere: info.payhere,\r\n          payoutRatio: info.payout_ratio,\r\n          ratioEnergy: new BigNumber(info.ratio_e * 100).dp(3).toString(10),\r\n          ratioEnergyPool: new BigNumber(info.ratio_e_pool * 100).dp(3).toString(10),\r\n          cNaranja: naranja,\r\n          voteSR: info.srVote,\r\n          proEnergy: providerEnergy,\r\n          proEnergyTotal: providerEnergyTotal,\r\n\r\n          proBand: providerBand,\r\n          proBandTotal: providerBandTotal,\r\n\r\n        })\r\n\r\n        let historic = {}\r\n        try {\r\n\r\n          historic = await fetch(url + \"historic_payments\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ wallet: this.props.accountAddress })\r\n\r\n          }\r\n          )\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n\r\n\r\n        let allPayed = 0\r\n\r\n        try {\r\n\r\n          allPayed = await fetch(url + \"acum_payments\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ wallet: this.props.accountAddress })\r\n\r\n          }\r\n          )\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n\r\n\r\n        allPayed = (new BigNumber(allPayed).dp(3).toNumber()).toLocaleString('en-US')\r\n\r\n        this.setState({ allPayed: allPayed })\r\n\r\n        let dataHistoric = []\r\n        let totalPayed30 = new BigNumber(0)\r\n\r\n        historic = historic.toReversed().map((item, index) => {\r\n\r\n          dataHistoric.unshift({ date: new Date(item.date * 1000), amount: new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber(), coin: item.coin })\r\n\r\n          totalPayed30 = totalPayed30.plus(item.amount)\r\n          return (\r\n            <tr key={index}>\r\n              <td>{moment.utc(item.date * 1000).tz(this.state.tiempo).format(\"lll\")}</td>\r\n              <td>{(new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US')}\r\n              </td>\r\n              <td>{item.coin}</td>\r\n            </tr>\r\n          )\r\n        })\r\n\r\n\r\n        this.setState({\r\n          historic: historic,\r\n          dataHistoric: dataHistoric,\r\n          totalPayed30: (totalPayed30.shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US') + \" TRX\"\r\n        })\r\n\r\n        let ongoins = []\r\n\r\n        try {\r\n\r\n          let body = { wallet: this.props.accountAddress }\r\n\r\n          ongoins = await fetch(url + \"ongoingdeals\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.ongoing_deals;\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        let listWallets = []\r\n\r\n        const ordenesActivas = ongoins.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          let lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            lock = \"unlock\"\r\n          } else {\r\n            lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + lock + \"-fill\"}></i></td>\r\n              <td>{item.customer}<br></br>\r\n                {moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")}{\" -> \"}{moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")}<br></br>\r\n\r\n              </td>\r\n              <td>{item.payout} TRX</td>\r\n            </tr>\r\n          )\r\n        });\r\n\r\n\r\n        let completed = []\r\n\r\n        try {\r\n\r\n          let body = { wallet: this.props.accountAddress }\r\n\r\n          completed = await fetch(url + \"completed_deals\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.completed_deals;\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n        const ordenesCompletadas = completed.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          let lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            lock = \"unlock\"\r\n          } else {\r\n            lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + lock + \"-fill\"}></i></td>\r\n              <td>{item.customer}<br></br>\r\n                {moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")}{\" -> \"}{moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")}<br></br>\r\n\r\n              </td>\r\n              <td>{item.payout} TRX</td>\r\n            </tr>\r\n          )\r\n        });\r\n\r\n\r\n        const delegationInfo = await this.props.tronWeb.trx.getDelegatedResourceAccountIndexV2(this.props.accountAddress)\r\n\r\n        let delegatedExternal = []\r\n\r\n        if (delegationInfo.toAccounts) {\r\n\r\n          for (let index = 0; index < delegationInfo.toAccounts.length; index++) {\r\n            delegationInfo.toAccounts[index] = this.props.tronWeb.address.fromHex(delegationInfo.toAccounts[index])\r\n\r\n            if (listWallets.indexOf(delegationInfo.toAccounts[index]) === -1) {\r\n              let info = await this.props.tronWeb.trx.getDelegatedResourceV2(this.props.accountAddress, delegationInfo.toAccounts[index])\r\n\r\n              //console.log(info.delegatedResource)\r\n\r\n              for (let index2 = 0; index2 < info.delegatedResource.length; index2++) {\r\n\r\n                let order = {\r\n                  wallet: delegationInfo.toAccounts[index],\r\n                  resource: \"ENERGY\",\r\n                  trx: 0,\r\n                  sun: \"0\",\r\n                  expire: \"--/--/-- 00:00 --\"\r\n                }\r\n\r\n                if (info.delegatedResource[index2].frozen_balance_for_energy) {\r\n\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_energy / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_energy\r\n                  if (info.delegatedResource[index2].expire_time_for_energy) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_energy)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n                  }\r\n                } else {\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_bandwidth / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_bandwidth\r\n                  if (info.delegatedResource[index2].expire_time_for_bandwidth) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_bandwidth)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n\r\n                  }\r\n\r\n\r\n                  order.resource = \"BANDWIDTH\"\r\n                }\r\n\r\n\r\n                delegatedExternal.push(order)\r\n\r\n\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        const ordenesNoregistradas = delegatedExternal.map((item, index) => {\r\n\r\n\r\n          let amount = item.sun;\r\n          let receiverAddress = item.wallet\r\n          let resource = item.resource\r\n          let ownerAddress = this.props.accountAddress\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td className=\"text-end\">\r\n                <div className=\"dropdown custom-dropdown mb-0\">\r\n                  <div className=\"btn sharp btn-primary tp-btn\" data-bs-toggle=\"dropdown\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                  </div>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <a className=\"dropdown-item text-info\" href=\"https://tronscan.org/#/wallet/resources\" >View on TronScan</a>\r\n\r\n                    <button className=\"dropdown-item text-danger\" onClick={async () => {\r\n                      let transaction = await this.props.tronWeb.transactionBuilder.undelegateResource(amount, receiverAddress, resource, ownerAddress);\r\n                      transaction = await this.props.tronWeb.trx.sign(transaction)\r\n                      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n                      this.setState({\r\n                        ModalTitulo: \"Result: \" + transaction.result,\r\n                        ModalBody: <a href={\"https://tronscan.org/#/transaction/\" + transaction.txid}>see result in TronScan</a>\r\n                      })\r\n\r\n                      window.$(\"#alert\").modal(\"show\");\r\n\r\n                    }}>Reclaim Resource</button>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>{item.resource} </td>\r\n              <td>{(item.trx).toLocaleString('en-US')} </td>\r\n\r\n              <td>{item.wallet}<br></br>\r\n                {item.expire}\r\n              </td>\r\n\r\n            </tr>\r\n          )\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n          ongoins: ordenesActivas,\r\n          noregist: ordenesNoregistradas,\r\n          completed: ordenesCompletadas,\r\n        })\r\n\r\n      }\r\n    } else {\r\n      this.setState({\r\n        provider: false\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    if (this.state.provider) {\r\n\r\n\r\n      let estatus = <button className=\"btn btn-outline-danger btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-sign-stop-fill\"></i> Stopped</button>\r\n\r\n      if (this.state.rent) {\r\n\r\n        estatus = <button className=\"btn btn-outline-info btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-arrow-clockwise\"></i> Recharging</button>\r\n\r\n        if (this.state.elegible) {\r\n          estatus = <button className=\"btn btn-outline-success btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-check-circle-fill\"></i> Active</button>\r\n        }\r\n\r\n      }\r\n\r\n\r\n      let campoFreeze = <></>\r\n\r\n      if (this.state.autofreeze !== \"Off\") {\r\n\r\n        campoFreeze = <div className=\"container mt-1\">\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col-12\">Wallet of SR to vote (default: Brutus)</div>\r\n            <div className=\"col-11\">\r\n              <input type=\"text\" className=\"form-control\" id=\"voteSR\" style={{ borderColor: \"#c3c3c3\" }} placeholder={this.state.voteSR} onChange={this.handleChange} disabled={false} ></input>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <i className=\"bi bi-question-circle-fill\" title=\"You can set by which super representative wallet the automatic votes will be made\" onClick={() => {\r\n\r\n                this.setState({\r\n                  ModalTitulo: \"Info\",\r\n                  ModalBody: \"You can set by which super representative wallet the automatic votes will be made\"\r\n                })\r\n\r\n                window.$(\"#alert\").modal(\"show\");\r\n              }}></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        if (this.state.voteSR !== \"\" && TronWeb.isAddress(this.state.newVoteSR) && this.state.voteSR !== this.state.newVoteSR) {\r\n\r\n          campoFreeze = (<>\r\n            {campoFreeze}\r\n            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => {\r\n              this.setWalletSr(this.state.newVoteSR)\r\n            }}>Update Wallet to Vote</button>\r\n\r\n          </>)\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-sm-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\">\r\n\r\n\r\n                      <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\">Status </h2>\r\n\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\">{estatus} </h2>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\"><button type=\"button\" className=\"btn btn-outline-warning btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><img height=\"15px\" src=\"images/naranja.png\" alt=\"\"></img> {this.state.ratioEnergy} /  {this.state.ratioEnergyPool} </button></h2>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\"><button className=\"btn btn-outline-secondary btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}> <span role=\"img\" aria-label=\"$\">💲</span> Payout %{this.state.paymentPoints} </button></h2>\r\n\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 mb-2\">\r\n                            Energy ({(this.state.proEnergy).toLocaleString('en-US')}/{(this.state.proEnergyTotal).toLocaleString(\"en-us\")}) <img height=\"15px\" src=\"images/energy.png\" alt=\"\" ></img>\r\n                            <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                              <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{ \"width\": ((this.state.proEnergy / this.state.proEnergyTotal) * 100) + \"%\" }}\r\n                                aria-valuenow={(this.state.proEnergy / this.state.proEnergyTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 mb-2\">\r\n                            Bandwidth ({(this.state.proBand).toLocaleString(\"en-us\")}/{(this.state.proBandTotal).toLocaleString(\"en-us\")}) 🌐\r\n                            <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                              <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ \"width\": ((this.state.proBand / this.state.proBandTotal) * 100) + \"%\" }}\r\n                                aria-valuenow={(this.state.proBand / this.state.proBandTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"rent\" checked={this.state.rent} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Rent <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume the bot\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Pause/Resume the bot\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"burn\" checked={this.state.burn} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Burn <i className=\"bi bi-question-circle-fill\" title=\"Allow TRX burn to accept new orders when you run out of bandwidth\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Allow TRX burn to accept new orders when you run out of bandwidth\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"noti\" checked={this.state.noti} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Notifications <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume notifications from the telegram bot\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Pause/Resume notifications from the telegram bot\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"band\" checked={this.state.sellband} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Band over: {(this.state.bandover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked bandwidth over the amount you establish\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Sell your staked bandwidth over the amount you establish\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row mt-3\">\r\n\r\n                          <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Payment hour: {this.state.payhour} GMT</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Set the time you want to receive your daily payments\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"130\")}>1:30 GMT</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"930\")}>9:30 GMT</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"1730\")}>17:30 GMT</button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu2\">Max Days: {this.state.maxdays}</button> <i className=\"bi bi-question-circle-fill\" title=\"Establish the max. duration of the orders you want to accept\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Establish the max. duration of the orders you want to accept\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu2\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays('1h')}>1h</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(3)} >3 days</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(7)}>7 days</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(14)}>14 days</button>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"95.33%\" }} data-bs-toggle=\"dropdown\" id=\"menu\" >Autofreeze: {this.state.autofreeze}</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"no\")}>Off</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"bandwidth\")}>Bandwidth</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"energy\")}>Energy</button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            {campoFreeze}\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-4 col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header border-0 pb-0\">\r\n                      <h2 className=\"heading mb-0 m-auto\">Next Payment</h2>\r\n                    </div>\r\n                    <div className=\"card-body text-center pt-3\">\r\n                      <div className=\"mt-1\">Hour {this.state.payhour} GMT</div>\r\n                      <hr></hr>\r\n                      <div className=\"count-num mt-1\">{(this.state.payment).toLocaleString(\"en-US\")} TRX</div>\r\n                      <hr></hr>\r\n\r\n                      <div className=\"mt-1\">that will be paid here: <u>{this.state.payhere}</u></div>\r\n\r\n                      <hr></hr>\r\n\r\n                      <div className=\"mt-1\">Total earned all time:<br>\r\n                      </br><b>{this.state.allPayed} TRX</b> </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">last {this.state.historic.length} payments = {this.state.totalPayed30}</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-sm-12\">\r\n                          <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                            <table className=\"table verticle-middle table-responsive-md \" >\r\n                              <thead>\r\n                                <tr>\r\n                                  <th scope=\"col\">Date</th>\r\n                                  <th scope=\"col\">Amount</th>\r\n                                  <th scope=\"col\">Coin</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {this.state.historic}\r\n\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-sm-12\">\r\n                          <div className=\"mb-3\" id=\"chartdiv\" style={{ height: this.state.alturaGrafico, backgroundColor: \"white\" }}></div>\r\n                          <button className=\"btn btn-success\" onClick={() => { if (this.state.alturaGrafico === \"0px\") { this.setState({ alturaGrafico: \"350px\" }); this.grafico(this.state.dataHistoric) } else { this.setState({ alturaGrafico: \"0px\" }); this.root.dispose(); } }}>Graphic (Open / Close)</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Ongoing deals ({this.state.ongoins.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md \" >\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Resource / Period</th>\r\n                              <th scope=\"col\">Buyer / Time</th>\r\n                              <th scope=\"col\">Payout</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.ongoins}\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Completed deals ({this.state.completed.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md \" >\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Resource / Period</th>\r\n                              <th scope=\"col\">Buyer / Time</th>\r\n                              <th scope=\"col\">Payout</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.completed}\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Other delegations ({this.state.noregist.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\"></th>\r\n\r\n                              <th scope=\"col\">Resource</th>\r\n                              <th scope=\"col\">TRX</th>\r\n                              <th scope=\"col\">Wallet / Expire Time</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.noregist}\r\n\r\n\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div >\r\n\r\n        <div className=\"modal fade\" id=\"alert\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>{this.state.ModalBody}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>);\r\n    } else {\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\">\r\n                      <h2 className=\"heading\">Status</h2>\r\n\r\n                      <p>you are not a supplier, if you want to become one read the following <a className=\"btn btn-primary\" href=\"https://brutus.finance/brutusprovider.html\">article</a></p>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>);\r\n    }\r\n\r\n\r\n  }\r\n}\r\n","import en from \"./en.json\"\r\nimport { es } from \"./es.json\"\r\nimport { pt } from \"./pt.json\"\r\n\r\nexport default { en, es, pt }","import React, { Component } from \"react\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport utils from \"./utils/index.jsx\";\r\nimport { TronLinkAdapter } from '@tronweb3/tronwallet-adapters';\r\n\r\nimport abi_PROXY from \"./assets/abi/Proxy\";\r\nimport abi_POOLBRST from \"./assets/abi/PoolBRSTv4\";\r\nimport abi_SimpleSwap from \"./assets/abi/SimpleSwapV2\";\r\nimport abi_LOTERIA from \"./assets/abi/Lottery\";\r\n\r\nimport Alert from \"./components/Alert.jsx\";\r\n\r\nimport Home from \"./pages/Home.jsx\";\r\n\r\nimport Brut from \"./components/BRUT.jsx\";\r\nimport Brst from \"./components/BRST-Proxy.jsx\";\r\nimport Nft from \"./components/BRGY.jsx\";\r\nimport LOTERIA from \"./components/BRLT.jsx\";\r\nimport EBOT from \"./components/EBOT.jsx\";\r\nimport PRO from \"./components/PRO.jsx\";\r\nimport API from \"./components/API.jsx\";\r\n\r\nimport i18next from 'i18next';\r\nimport lng from \"./locales/langs.js\"\r\n\r\nconst striptags = require('striptags');\r\n\r\n\r\nlet lenguaje = navigator.language || navigator.userLanguage\r\n\r\ni18next.init({\r\n  fallbackLng: 'en',\r\n  lng: lenguaje, // if you're using a language detector, do not define the lng option\r\n  debug: false,\r\n  resources: lng\r\n\r\n});\r\n\r\nlet lgSelector = \"en\";\r\n\r\nconst tronWeb = {}\r\n\r\nconst adapter = new TronLinkAdapter();\r\n\r\nconst adressDefault = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\r\n\r\nconst imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" />\r\n\r\nconst cookies = new Cookies(null, { path: '/', maxAge: 60 * 60 * 24 * 30 });\r\n\r\nlet theme = cookies.get('theme') || \"light\";\r\ndocument.documentElement.setAttribute(\"data-theme-version\", theme);\r\n\r\nlet tryes = 2\r\nfunction setDarkTheme() {\r\n\r\n  if (theme === \"light\") {\r\n    theme = \"dark\";\r\n  } else {\r\n    theme = \"light\";\r\n  }\r\n\r\n  document.documentElement.setAttribute(\"data-theme-version\", theme);\r\n  cookies.set('theme', theme);\r\n\r\n}\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ruta: \"\",\r\n      accountAddress: adressDefault,\r\n      tronlink: {\r\n        installed: false,\r\n        loggedIn: false,\r\n        viewer: false,\r\n        adapter: {}\r\n      },\r\n      tronWeb: tronWeb,\r\n      contrato: {\r\n        ready: false,\r\n        BRUT_USDT: null,\r\n        BRUT: null,\r\n        MBOX: null,\r\n        loteria: null,\r\n        BRLT: null,\r\n        USDT: null,\r\n        USDD: null,\r\n        BRGY: null,\r\n        BRST: null,\r\n        BRST_TRX: null,\r\n        BRST_TRX_Proxy: null,\r\n        BRST_TRX_Proxy_fast: null,\r\n\r\n      },\r\n      conexion: false,\r\n      walletConect: \"Conect Wallet\",\r\n      msj: {},\r\n    };\r\n\r\n    this.conectar = this.conectar.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.route = this.route.bind(this);\r\n    this.loadContracts = this.loadContracts.bind(this);\r\n    this.selecionarIdioma = this.selecionarIdioma.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    document.documentElement.setAttribute(\"data-theme-version\", theme);\r\n\r\n    let { walletConect } = this.state;\r\n\r\n    document.getElementById(\"login\").innerHTML = '<span id=\"conectTL\" class=\"btn btn-primary\" style=\"cursor:pointer\" title=\"' + striptags(walletConect) + '\"> Conect Wallet </span> <img src=\"images/TronLinkLogo.png\" height=\"40px\" alt=\"TronLink logo\" />';\r\n    document.getElementById(\"conectTL\").onclick = () => { this.conectar(true); }\r\n\r\n    intervalId = setInterval(() => {\r\n      this.route();\r\n      this.selecionarIdioma();\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (this.state.tronlink.installed && !this.state.tronlink.loggedIn) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado(true);\r\n      }\r\n\r\n    }, 3 * 1000);\r\n\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n\r\n  async selecionarIdioma() {\r\n    try {\r\n      lgSelector = document.getElementById(\"selectLng\").value\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n    if (i18next.resolvedLanguage !== lgSelector) {\r\n      i18next.changeLanguage(lgSelector);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async conectar(billetera) {\r\n\r\n    if (!this.state.conexion && !adapter.connected && tryes > 0) {\r\n      this.setState({ conexion: true })\r\n\r\n      await adapter.connect()\r\n        .catch((e) => {\r\n          console.log(e.toString())\r\n          this.setState({ msj: { title: \"Wallet connection error\", message: e.toString() } })\r\n          tryes--;\r\n\r\n        })\r\n\r\n      if (adapter.connected) this.estado();\r\n\r\n      this.setState({ conexion: false })\r\n\r\n\r\n    }\r\n\r\n    return adapter.connected;\r\n\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { tronlink, accountAddress, walletConect } = this.state;\r\n\r\n    if (window.tronWeb) {\r\n      tronlink['installed'] = true;\r\n    }\r\n\r\n    if (!adapter.address) {\r\n      await this.conectar(true)\r\n    }\r\n\r\n    if (adapter.address) {\r\n      tronlink['loggedIn'] = true;\r\n      tronlink['adapter'] = adapter;\r\n      accountAddress = adapter.address\r\n\r\n    }\r\n\r\n    if (accountAddress !== adressDefault) {\r\n      let vierWallet = accountAddress.substring(0, 6) + \"***\" + accountAddress.substring(accountAddress.length - 6, accountAddress.length)\r\n      document.getElementById(\"login\").innerHTML = '<span class=\"btn gradient-btn\" title=\"' + striptags(accountAddress) + '\" >' + striptags(vierWallet) + '</span>';\r\n\r\n    } else {\r\n      document.getElementById(\"login\").innerHTML = '<span id=\"conectTL\" class=\"btn btn-primary\" style=\"cursor:pointer\" title=\"' + striptags(walletConect) + '\"> Conect Wallet </span> <img src=\"images/TronLinkLogo.png\" height=\"40px\" alt=\"TronLink logo\" />';\r\n      document.getElementById(\"conectTL\").onclick = () => { this.conectar(true); }\r\n    }\r\n\r\n    this.setState({\r\n      accountAddress,\r\n      tronlink: tronlink,\r\n      tronWeb: await utils.getTronweb(accountAddress)\r\n\r\n    });\r\n\r\n    this.loadContracts()\r\n\r\n\r\n  }\r\n\r\n  route() {\r\n    let url = window.location.href;\r\n    if (url.indexOf(\"/?\") >= 0) {\r\n      url = (url.split(\"/?\"))[1];\r\n      if (url.indexOf(\"#\") >= 0) url = (url.split(\"#\"))[0];\r\n      if (url.indexOf(\"&\") >= 0) url = (url.split(\"&\"))[0];\r\n      if (url.indexOf(\"=\") >= 0) url = (url.split(\"=\"))[0];\r\n      if (url === window.location.origin + \"/\" || url === \"utum_source\") url = \"\"\r\n      url = `/#/${url}`\r\n      window.location.replace(url);\r\n    }\r\n\r\n    if (url.indexOf(\"/#/\") >= 0) url = (url.split(\"/#/\"))[1];\r\n    if (url.indexOf(\"?\") >= 0) url = (url.split(\"?\"))[0];\r\n    if (url.indexOf(\"&\") >= 0) url = (url.split(\"&\"))[0];\r\n    if (url.indexOf(\"=\") >= 0) url = (url.split(\"=\"))[0];\r\n    if (url === window.location.origin + \"/\" || url === \"utum_source\") url = \"\"\r\n\r\n    this.setState({ ruta: url })\r\n    return url\r\n  }\r\n\r\n  async loadContracts() {\r\n    let { accountAddress, contrato } = this.state;\r\n\r\n    let web3Contracts = await utils.getTronweb(accountAddress);\r\n\r\n    if (contrato.BRUT === null && utils.BRUT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.BRUT = web3Contracts.contract(utils.TOKEN_ABI, utils.BRUT);\r\n    }\r\n\r\n    if (contrato.USDT === null && utils.USDT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.USDT = web3Contracts.contract(utils.TOKEN_ABI, utils.USDT);\r\n      contrato.USDD = web3Contracts.contract(utils.TOKEN_ABI, utils.USDD);\r\n\r\n    }\r\n\r\n    if (contrato.BRUT_USDT === null && utils.SC !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.BRUT_USDT = await web3Contracts.contract().at(utils.SC);\r\n    }\r\n\r\n    if (contrato.BRST_TRX === null && utils.SC2 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX = await web3Contracts.contract().at(utils.SC2);\r\n    }\r\n\r\n    if (contrato.BRST_TRX_Proxy === null && utils.ProxySC2 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.Proxy = web3Contracts.contract(abi_PROXY, utils.ProxySC2);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX_Proxy = web3Contracts.contract(abi_POOLBRST, utils.ProxySC2);\r\n    }\r\n\r\n    if (contrato.BRST_TRX_Proxy_fast === null && utils.ProxySC3 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.Proxy_fast = web3Contracts.contract(abi_PROXY, utils.ProxySC3);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX_Proxy_fast = web3Contracts.contract(abi_SimpleSwap, utils.ProxySC3);\r\n    }\r\n\r\n    if (contrato.BRST === null && utils.BRST !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST = web3Contracts.contract(utils.TOKEN_ABI,utils.BRST);\r\n    }\r\n\r\n    if (contrato.BRGY === null && utils.BRGY !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRGY = await web3Contracts.contract().at(utils.BRGY);\r\n    }\r\n\r\n    if (contrato.MBOX === null && utils.SC3 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.MBOX = await web3Contracts.contract().at(utils.SC3);\r\n    }\r\n\r\n    if (contrato.BRLT === null && utils.BRLT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.BRLT = await web3Contracts.contract().at(utils.BRLT);\r\n    }\r\n\r\n    if (contrato.loteria === null && utils.SC4 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.ProxyLoteria = web3Contracts.contract(abi_PROXY, utils.SC4);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.loteria = web3Contracts.contract(abi_LOTERIA, utils.SC4);\r\n    }\r\n\r\n    contrato.ready = true;\r\n\r\n    this.setState({\r\n      contrato: contrato,\r\n    })\r\n\r\n    return contrato\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let { tronlink, contrato, accountAddress, tronWeb, msj, ruta } = this.state\r\n\r\n    let Retorno = <></>\r\n\r\n    if (window.tronLink === undefined) {\r\n      tronlink.loggedIn = true\r\n    }\r\n\r\n    if (!contrato.ready && !tronlink.loggedIn) {\r\n      Retorno = (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"card\">\r\n                <div className='row' style={{ 'padding': '3em', 'decoration': 'none' }} >\r\n                  <div className='col-sm-8'>\r\n                    <h1>{i18next.t(\"preLoad\", { returnObjects: true })[0]}{imgLoading}</h1>\r\n                    <p>\r\n                      {i18next.t(\"preLoad\", { returnObjects: true })[1]}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n\r\n      let url = ruta\r\n\r\n      switch (url) {\r\n\r\n        case \"brut\":\r\n          Retorno = <Brut accountAddress={accountAddress}  contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"brst\":\r\n          Retorno = <Brst accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"brgy\":\r\n          Retorno = <Nft accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"brlt\":\r\n          Retorno = <LOTERIA accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"ebot\":\r\n          Retorno = <EBOT accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n        case \"pro\":\r\n          Retorno = <PRO accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} tronlink={tronlink} i18n={i18next} />\r\n          break;\r\n        case \"api\":\r\n          Retorno = <API accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} tronlink={tronlink} i18n={i18next} />\r\n          break;\r\n        default:\r\n          Retorno = <Home accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} i18n={i18next} />\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    return (<>\r\n      {Retorno}\r\n      <Alert {...msj} />\r\n      <button id=\"theme-switch\" onClick={() => { setDarkTheme() }}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\"><path d=\"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Z\" /></svg>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\"><path d=\"M480-280q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Z\" /></svg>\r\n      </button>\r\n    </>)\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from \"./App.jsx\";\r\n\r\nconst container = document.getElementById('root');\r\nconst root = createRoot(container); // createRoot(container!) if you use TypeScript\r\n\r\nroot.render(<App />);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}