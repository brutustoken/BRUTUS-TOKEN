{"version":3,"sources":["utils/index.jsx","components/SEO.jsx","components/Alert.jsx","pages/Home.jsx","pages/BRUT.jsx","pages/BRST-Proxy.jsx","pages/BRGY.jsx","pages/BRLT.jsx","pages/EBOT.jsx","components/FaqItems.jsx","pages/PRO.jsx","pages/API.jsx","App.jsx","i18n.js","index.js"],"names":["abi_TOKEN","require","abi_SUNSWAP","abi_BRST_USDT","BigNumber","env","process","CryptoJS","constantes","getRed","index","arguments","length","undefined","tokenList","REACT_APP_LIST_TRONQL","split","proxy","NODE_ENV","BRUTUS_API","REACT_APP_API_URL","apiProviders","PRICE","market_brut","RED","SC","SC2","ProxySC2","ProxySC3","SC3","SC4","USDT","USDD","BRUT","BRST","APENFT","BRGY","BRLT","TOKEN_ABI","SUNSWAPV3","SUNSWAPV3_ABI","ABI_SC","testnet","keyQuery","async","fetch","then","response","json","data","API_KEY","ok","apikey","catch","err","console","log","getTronweb","wallet","red","tronWeb","TronWeb","fullHost","setAddress","delay","s","Promise","res","setTimeout","rentResource","wallet_orden","recurso","cantidad","periodo","temporalidad","precio","signedTransaction","referral","time","REACT_APP_WALLET_API","toSun","Date","now","REACT_APP_USER_ID","REACT_APP_TOKEN","REACT_APP_IDENTF","AES","encrypt","JSON","stringify","REACT_APP_SECRET","toString","method","headers","body","user","REACT_APP_USER_C","r","error","result","hash","txID","msg","normalizarNumero","n","shiftedBy","toNumber","numberToStringCero","dp","hola","SEO","_ref","title","description","image","React","createElement","Helmet","name","content","property","inter","Alert","_Component","props","_this","_classCallCheck","state","message","mostrarMensaje","bind","_inherits","_createClass","key","value","_this2","setInterval","clearInterval","this","setState","window","$","modal","verMensaje","Fragment","type","className","onClick","id","role","Component","nextUpdate","intervalId","Inicio","precioTRX","precioBrut","varBrut","precioBrst","varBrst","misBRUT","misBRST","misBRGY","misBRLT","precioBrstUSD","imagerobots","consultaPrecios","subeobaja","textoE","estado","t","document","getElementById","innerText","contrato","ready","valor","resultado","width","height","viewBox","fill","xmlns","filter","d","stroke","strokeWidth","strokeLinecap","x","y","filterUnits","colorInterpolationFilters","floodOpacity","in","values","dy","stdDeviation","mode","in2","_this3","Data","usd","v24h","trx","_this4","accountAddress","utils","BRST_TRX_Proxy","RATE","call","balanceOf","cellStyle","borderBottom","borderRight","padding","lastCellStyle","style","minWidth","borderCollapse","href","src","alt","paddingLeft","color","fontSize","toFixed","toLocaleString","withTranslation","options","label","options2","Brut","minCompra","minventa","deposito","valueBRUT","valueUSDT","tiempo","enBrutus","tokensEmitidos","totalCirculando","enPool","solicitado","cantidadDatos","cambio24h","depositoUSDT","depositoBRUT","msj","grafico","compra","venta","handleChange","handleChange2","handleChangeBRUT","handleChangeUSDT","consultarPrecio","ajustarRate","e","evento","target","event","price","parseFloat","precioBRUT","toPrecision","proxyUrl","apiUrl","cambio","market","tokens","marketcap","usdt","circulatingSupply","aprovadoUSDT","allowance","BRUT_USDT","address","remaining","balanceUSDT","aprovadoBRUT","balanceBRUT","supplyBRUT","totalSupply","rate","alert","amount","replace","aprovado","inputs","funcion","trigger","transactionBuilder","triggerSmartContract","toHex","transaction","extendExpiration","tronLink","sign","sendRawTransaction","txid","_this5","root","dispose","am5","new","setThemes","am5themes_Animated","chart","container","children","push","am5xy","panX","panY","wheelX","wheelY","pinchZoomX","set","behavior","lineY","previousColor","previousDataObj","previousValue","downColor","interfaceColors","get","upColor","generateData","date","dataObj","strokeSettings","xAxis","xAxes","baseInterval","timeUnit","count","renderer","tooltip","yAxis","yAxes","series","valueYField","valueXField","strokes","template","labelText","on","background","adapters","add","dataItem","dataContext","scrollbar","orientation","sbDateAxis","sbValueAxis","sbSeries","consulta","i","generateDatas","setAll","appear","_this6","tabIndex","defaultValue","backgroundColor","onChange","map","option","placeholder","min","max","step","htmlFor","cursor","rel","config","DECIMAL_PLACES","ROUNDING_MODE","ROUND_HALF_DOWN","imgLoading","optionsHours","earnings","iniciado","Staking","_callSuper","_defineProperty","to","selectedCurrency","from","par","calcExchange","valueBRST","valueTRX","solicitudes","solicitudesV3","dias","days","APY","dataBRST","contractEnergy","userEnergy","ModalTitulo","ModalBody","tiempoPromediado","promE7to1day","resultCalc","diasCalc","brutCalc","balanceBRST","balanceTRX","balanceUSDD","globDepositos","eenergy","energyOn","total_required","isOwner","isAdmin","interesCompuesto","crecimientoPorcentual","precioUSDT","precioUSDD","retiroRapido","penalty","selector","rapida","valueFrom","valueTo","consultaPrecio","preClaim","handleChangeDias","handleChangeCalc","llenarBRST","llenarTRX","rentEnergy","handleCurrencyChangeFrom","handleCurrencyChangeTo","exchangeTokens","suawpTokenFromTRX","calculoEnergy","preExchange","costEnergy","parseInt","dato","oper","out","swap","element","salida","entrada","div","times","isNaN","TRON_BALANCE","TRON_PAY_BALANCE","TRON_SOLICITADO","balance","getUnconfirmedBalance","getBalance","cuenta","getAccountResources","BRST_TRX_Proxy_fast","descuentoRapido","precision","loteria","_premio","balance_token_1","minus","EnergyLimit","EnergyUsed","useTrx","reduce","acc","item","valorInicial","consultaData","diario","MIN_DEPOSIT","oneTron","todasSolicitudes","myids","deposits","solicitudesPendientesGlobales","TIEMPO","diasDeEspera","balance_Pool","espera","fromHex","owner","indexOf","pen","verSolicitudPendiente","inicio","pv","diasrestantes","boton","cantidadTrx","brst","plus","includes","disabled","extraData","number","ownerPanel","TRON_RR","energi","available","av_energy","total_energy_pool","transaccion","triggerConstantContract","energy_used","requerido","textoModal","returnObjects","energyRequired","token","tokenSelector","sunswapRouter","accept","visible","energyFactor","consume_user_resource_percent","contract_base_token","contract","decimals_base","decimals","aprove","monto","distributeTokens","totalTokens","versions","Array","remainingTokens","poolVersions","poolFees","amountIn","amountOut","feeLimit","callValue","AddressContract","isBigNumber","retorno","unSignedTransaction","sendTrx","consulta2","_this7","_this8","select","currentPrice","balance_usdt","_this9","_this0","scrollIntoView","concat","_logo","encontrado","valor_alt","find","obj","coin","lastPrice","lastData","_this1","opciones","toUpperCase","retiradas","checked","readOnly","swapButton","onInput","donacion","paddingRight","borderRadius","justifyContent","e1","objeto","daysProm","marginTop","border","unshift","Galeria","robots","MBOX","entregaNFT","conteo","estonuevo","ownerOf","URI","tokenURI","metadata","numero","recBotton","claimNFT_especifico","send","NFTs","mc","mb","totalNFT","premio","LastWiner","proximoSorteo","modalTitulo","modalBody","contarSegundos","restanteSegundos","porcentaje","comprarBRLT","precioUnidad","total","moneda","tikets","hours","minutes","seconds","deadline","onSale","preCompra","sunSwap","sorteo","handleChangeSelect","updateCountdown","getTime","timeToLive","Math","floor","lastWiner","onSaleURI","onSalemetadata","parse","text","proximaRonda","prosort","minutos","getMinutes","getDate","getHours","myTikets","globalId","tokenOfOwnerByIndex","button","valueNFT","feelimit","TRON_PAY_BALANCE_WHITE","swapContract","trxAddress","at","amount_base_token","contract_result_token","amount_result_token","dividedBy","abi_SUNSAWPv2","approve","tokenMax","balanceDCT","decimalesDCT","intercam","open","amountsE","amountB","EnergyRental","montoMin","minPrice","duration","av_band","available_bandwidth","available_energy","total_bandwidth_pool","titulo","amounts","bandOn","fromUrl","unitEnergyPrice","precios","energy","bandwidth","handleChangePeriodo","handleChangeWallet","updateAmount","recursos","calcularRecurso","calcularPrecios","toLowerCase","tmp","loc","location","GET","l","unescape","decodeURI","URL","UE","energy_minutes_100K","energy_hour_100K","energy_one_day_100K","energy_over_one_day_100K","band_minutes_1000","band_hour_1000","band_one_day_1000","band_over_one_day_1000","priceList","foundPrice","i18n","pagas","isAddress","amountButtons","margin","texto","medidor","action","required","str","charAt","slice","FaqItem","question","answer","isOpen","setIsOpen","useState","moment","faqs","ProviderPanel","provider","firma","rent","elegible","sellband","bandover","sellener","enerover","burn","noti","autofreeze","paymenthour","maxdays","ongoins","nexpayment","payoutRatio","ratioEnergy","ratioEnergyPool","paymentPoints","voteSR","newVoteSR","proEnergyTotal","proEnergy","proBand","proBandTotal","noregist","historic","dataHistoric","alturaGrafico","payment","payhere","payHere","completed","totalPayed30","allPayed","setConfig","test","navigator","userAgent","tz","guess","url","auth","tronlink","adapter","connected","localStorage","getItem","messge","getFullYear","verifyMessageV2","signMessage","setItem","info","naranja","ratio_e","ratio_e_pool","freez","providerEnergy","providerEnergyTotal","providerBand","providerBandTotal","freeNetLimit","NetLimit","freeNetUsed","NetUsed","allow_notifications","energyover","currency","activo","payout_ratio","cNaranja","srVote","amount_stable","utc","format","totales","findIndex","join","ongoing_deals","listWallets","customer","lock","order_type","confirm","unfreeze","completed_deals","delegationInfo","getDelegatedResourceAccountIndexV2","toAccounts","getDelegatedResourceV2","index2","delegatedResource","order","resource","sun","expire","ownerAddress","frozen_balance_for_energy","expire_time_for_energy","frozen_balance_for_bandwidth","expire_time_for_bandwidth","elemento","activate","active","over","prompt","sellbandover","sellenergyover","external_data","layout","verticalLayout","categoryField","categoryXField","setFreez","hour","setPaymentHour","setMaxDays","sr","setWalletSr","setCoin","estatus","maxHeight","campoFreeze","borderColor","payhour","textAlign","onMouseEnter","onMouseLeave","removeItem","fillRule","scope","toReversed","align","CsvDownloader","filename","suffix","extension","separator","wrapColumnChar","columns","displayName","datas","payout","receiverAddress","undelegateResource","faq","cookies","Cookies","path","ApiPanel","maxAge","ordenesActivas","ordenesCompletadas","delegatedExternal","ordenesNoregistradas","striptags","lgSelector","TronLinkAdapter","adressDefault","theme","documentElement","setAttribute","tryes","App","ruta","installed","loggedIn","viewer","BRST_TRX","conexion","walletConect","conectar","route","loadContracts","selecionarIdioma","innerHTML","onclick","resolvedLanguage","changeLanguage","billetera","connect","vierWallet","substring","origin","web3Contracts","Proxy","abi_PROXY","abi_POOLBRST","Proxy_fast","abi_SimpleSwap","ProxyLoteria","abi_LOTERIA","Retorno","Brst","Nft","LOTERIA","EBOT","PRO","API","Home","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","backend","loadPath","createRoot","render"],"mappings":"2ghDAEA,MAAMA,EAAYC,EAAQ,KACpBC,EAAcD,EAAQ,KACtBE,EAAgBF,EAAQ,KAExBG,EAAYH,EAAQ,IAEpBI,EAAMC,orBAENC,EAAWN,EAAQ,KAEzB,IAAIO,EAAa,CAAC,EA+ElB,SAASC,IAAmB,IAAZC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAElBG,EAAYT,EAAIU,sBAOpB,OANAD,EAAYA,EAAUE,MAAM,KAExBN,EAAQI,EAAUF,SAAQF,EAAQI,EAAUF,OAAS,GAE/C,WAAaE,EAAUJ,GAAS,2BAG5C,CAxFAF,EAAWS,MAAyB,gBAAjBZ,EAAIa,SAA6B,mCAAoC,GACxFV,EAAWW,WAAaX,EAAWS,MAAQZ,EAAIe,kBAAoB,UACnEZ,EAAWa,aAAeb,EAAWS,MAAQ,iDAE7CT,EAAWc,MAAQd,EAAWW,WAAa,cAC3CX,EAAWe,YAAcf,EAAWW,WAAa,0BAEjDX,EAAWgB,IAAM,kEAEjBhB,EAAWiB,GAAK,qCAChBjB,EAAWkB,IAAM,qCACjBlB,EAAWmB,SAAW,qCACtBnB,EAAWoB,SAAW,qCACtBpB,EAAWqB,IAAM,qCACjBrB,EAAWsB,IAAM,qCAEjBtB,EAAWuB,KAAO,qCAClBvB,EAAWwB,KAAO,qCAClBxB,EAAWyB,KAAO,qCAClBzB,EAAW0B,KAAO,qCAClB1B,EAAW2B,OAAS,qCACpB3B,EAAW4B,KAAO,qCAClB5B,EAAW6B,KAAO,qCAClB7B,EAAW8B,UAAYtC,EAEvBQ,EAAW+B,UAAY,qCACvB/B,EAAWgC,cAAgBtC,EAE3BM,EAAWiC,OAAStC,EAEhBK,EAAWkC,UAEblC,EAAWgB,IAAM,2BAEjBhB,EAAWiB,GAAK,qCAChBjB,EAAWkB,IAAM,qCACjBlB,EAAWmB,SAAW,qCACtBnB,EAAWoB,SAAW,yCAEtBpB,EAAWqB,IAAM,GACjBrB,EAAWsB,IAAM,qCAEjBtB,EAAWuB,KAAO,qCAClBvB,EAAWyB,KAAO,qCAClBzB,EAAW0B,KAAO,qCAClB1B,EAAW2B,OAAS,qCACpB3B,EAAW4B,KAAO,qCAClB5B,EAAW6B,KAAO,sCAgIL,UAAK7B,EAAYmC,SAzHhCC,iBAoBE,aAlBgBC,MAAMrC,EAAWW,WAAa,mBAC3C2B,MAAK,SAAAC,GAAc,OAAOA,EAASC,MAAQ,IAC3CF,MAAK,SAAAG,GACJ,IAAIC,EAAU,GAQd,OANID,EAAKE,IACHF,EAAKG,SACPF,EAAUD,EAAKG,QAIZF,CAET,IAAGG,OAAM,SAAAC,GAEP,OADAC,QAAQC,IAAIF,GACL,EACT,GAIJ,EAmG0CG,WArF1Cb,eAA0Bc,GAAkB,IAAVC,EAAGhD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEtC,MAAMiD,EAAU,IAAIC,IAAQ,CAC1BC,SAAUrD,EAAOkD,KAMnB,OAFAC,EAAQG,WAAWL,GAEZE,CAET,EA0EsDI,MA5HtD,SAAeC,GAAK,OAAO,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAS,IAAJF,EAAS,GAAG,EA4HbI,aAxE7DzB,eAA4B0B,EAAcC,EAASC,EAAUC,EAASC,EAAcC,EAAQC,GAAsC,IAAnBC,EAAQlE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAQjHmE,EAAOL,EAEU,MAAjBC,GAAyC,SAAjBA,GAA4C,SAAjBA,IACrDI,EAAOL,EAAUC,GAGE,MAAjBA,GAAyC,QAAjBA,GAA2C,YAAjBA,GAA+C,YAAjBA,IAClFI,EAAOL,EAAU,OAGnB,IAAIxB,EAAO,CACT,OAAUqB,EACV,SAjBAC,EADc,cAAZA,GAAuC,SAAZA,EACnB,OAEA,SAgBV,OAAUC,EACV,SAAYM,EAEZ,YAAeF,EACf,WAAcvE,EAAI0E,qBAClB,OAAUlB,IAAQmB,MAAML,GAExB,OAAUM,KAAKC,MAAS,IAExB,OAAU7E,EAAI8E,kBACd,MAAS9E,EAAI+E,gBAEb,KAAQP,EAAW,EAAI,EACvB,SAAYA,GAAsB,EAClC,aAAgBxE,EAAIgF,kBAAoB,GAoB1C,OAhBApC,EAAO1C,EAAS+E,IAAIC,QAAQC,KAAKC,UAAUxC,GAAO5C,EAAIqF,kBAAkBC,iBAEnD9C,MAAMrC,EAAWW,WAAa,cAAe,CAChEyE,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMN,KAAKC,UAAU,CAAEM,KAAM1F,EAAI2F,iBAAkB/C,WAClDH,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACtBK,OAAM,SAAC6C,GAEN,OADA3C,QAAQC,IAAI0C,GACL,CAAEC,QAAQ,EAAOC,KAAMxB,EAAkByB,KAAMC,IAAK,cAAgBJ,EAAMP,WACnF,GAKF,EAe2EY,iBAb3E,SAA0BC,GAAW,IAARvC,EAACtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/B,OAAO,IAAIP,EAAUoG,GAAGC,WAAWxC,GAAGyC,UACxC,EAW6FC,mBAT7F,SAA4BH,GAAW,IAARvC,EAACtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACjC,OAAO,IAAIP,EAAUoG,GAAGC,UAAUxC,GAAG2C,GAAG,GAAGjB,SAAS,GACtD,EAOiHkB,KALpG,WAEXtD,QAAQC,IAAI,QACd,GC5KesD,MAXH,SAAAC,GAAA,IAAGC,QAAOC,cAAaC,SAAOH,EAAA,OACxCI,IAAAC,cAACC,IAAM,KACJL,GAASG,IAAAC,cAAA,aAAQJ,GACjBC,GAAeE,IAAAC,cAAA,QAAME,KAAK,cAAcC,QAASN,IAEjDD,GAASG,IAAAC,cAAA,QAAMI,SAAS,WAAWD,QAASP,IAC5CC,GAAcE,IAAAC,cAAA,QAAMI,SAAS,iBAAiBD,QAASN,IACvDC,GAASC,IAAAC,cAAA,QAAMI,SAAS,WAAWD,QAAS,WAAWL,IACjD,E,6CCTX,IAAIO,EAAQ,KA+EGC,MA7EJ,SAAAC,GAEP,SAAAD,EAAYE,GAAQ,IAADC,E,MASsC,OATtCC,YAAA,KAAAJ,G,EACf,K,EAAAA,E,EAAA,CAAME,G,kBAANC,E,iGAEKE,MAAQ,CACTf,MAAO,QACPgB,QAAS,IAIbH,EAAKI,eAAiBJ,EAAKI,eAAeC,KAAIL,GAAOA,CACzD,CAAC,OAAAM,YAAAT,EAAAC,GAAAS,YAAAV,EAAA,EAAAW,IAAA,oBAAAC,MAED1F,iBAA2B,IAAD2F,EAAA,KAEtBd,EAAQe,aAAY,WAChBD,EAAKN,gBACT,GAAG,IAEP,GAAC,CAAAI,IAAA,uBAAAC,MAED1F,iBACI6F,cAAchB,EAClB,GAAC,CAAAY,IAAA,iBAAAC,MAED1F,iBAEI,IAAMoF,WAAYU,KAAKX,MAEnBW,KAAKd,MAAMI,SACPA,IAAYU,KAAKd,MAAMI,UACvBU,KAAKC,SAAS,IACPD,KAAKd,QAEZgB,OAAOC,EAAE,UAAUC,MAAM,QAKrC,GAAC,CAAAT,IAAA,SAAAC,MAGD,WAEI,IAAMtB,QAAOgB,WAAYU,KAAKX,MAE1BgB,EAAa5B,IAAAC,cAAAD,IAAA6B,SAAA,MAOjB,MANgB,KAAZhB,IACAe,EAAc5B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WACrEP,OAAOC,EAAE,UAAUC,MAAM,OAC7B,GAAG,qBAGC3B,IAAAC,cAAAD,IAAA6B,SAAA,KACHD,EAED5B,IAAAC,cAAA,OAAK8B,UAAU,aAAaE,GAAG,SAC3BjC,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,YAC/BlC,IAAAC,cAAA,OAAK8B,UAAU,iBACX/B,IAAAC,cAAA,OAAK8B,UAAU,gBACX/B,IAAAC,cAAA,MAAI8B,UAAU,eAAelC,GAC7BG,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,YAAY,kBAAgB,WAGhE/B,IAAAC,cAAA,OAAK8B,UAAU,cACX/B,IAAAC,cAAA,SAAIY,OAM5B,IAAC,CAxEM,CAASsB,a,QCCpB,IAAIC,EAAa,EACbC,EAAa,KACXC,EAAM,SAAA9B,GACX,SAAA8B,EAAY7B,GAAQ,IAADC,E,MAuBmB,OAvBnBC,YAAA,KAAA2B,G,EAClB,K,EAAAA,E,EAAA,CAAM7B,G,kBAANC,E,iGAEKE,MAAQ,CACZ2B,UAAW,MAEXC,WAAY,EACZC,QAAS,EACTC,WAAY,EACZC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,cAAe,EAEfC,YAAa,IAIdvC,EAAKwC,gBAAkBxC,EAAKwC,gBAAgBnC,KAAIL,GAChDA,EAAKyC,UAAYzC,EAAKyC,UAAUpC,KAAIL,GACpCA,EAAK0C,OAAS1C,EAAK0C,OAAOrC,KAAIL,GAC9BA,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAAOA,CAGtC,CAAC,OAAAM,YAAAsB,EAAA9B,GAAAS,YAAAqB,EAAA,EAAApB,IAAA,oBAAAC,MAED,WAAqB,IAADC,EAAA,KACnB,MAAQkC,KAAM/B,KAAKd,MACnB8C,SAASC,eAAe,UAAUC,UAAYH,EAAE,iBAEhDjB,EAAahB,aAAY,WAEpBvD,KAAKC,OAASqE,IAKhBA,EAHIhB,EAAKX,MAAMiD,SAASC,MAGX7F,KAAKC,MAAQ,IAFbD,KAAKC,MAAQ,IAI3BqD,EAAKiC,SAGP,GAAG,IAEJ,GAAC,CAAAnC,IAAA,uBAAAC,MAED,WACCG,cAAce,EACf,GAAC,CAAAnB,IAAA,YAAAC,MAED,SAAUyC,GACT,IAyCIC,EAzCgB7D,IAAAC,cAAA,OAAK6D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OACxEC,MAAM,8BACNlE,IAAAC,cAAA,KAAGkE,OAAO,oBACTnE,IAAAC,cAAA,QAAMmE,EAAE,+DACPC,OAAO,UAAUC,YAAY,IAAIC,cAAc,WAEjDvE,IAAAC,cAAA,YACCD,IAAAC,cAAA,UAAQgC,GAAG,aAAauC,EAAE,eAAeC,EAAE,eAAeX,MAAM,UAC/DC,OAAO,UAAUW,YAAY,iBAC7BC,0BAA0B,QAC1B3E,IAAAC,cAAA,WAAS2E,aAAa,IAAI5F,OAAO,uBACjCgB,IAAAC,cAAA,iBAAe4E,GAAG,cAAc/C,KAAK,SACpCgD,OAAO,8CACR9E,IAAAC,cAAA,YAAU8E,GAAG,MACb/E,IAAAC,cAAA,kBAAgB+E,aAAa,MAC7BhF,IAAAC,cAAA,iBAAe6B,KAAK,SACnBgD,OAAO,mEACR9E,IAAAC,cAAA,WAASgF,KAAK,SAASC,IAAI,qBAC1BlG,OAAO,uBACRgB,IAAAC,cAAA,WAASgF,KAAK,SAASJ,GAAG,gBAAgBK,IAAI,qBAC7ClG,OAAO,aA2BX,OAJI4E,EAAQ,IACXC,EApBkB7D,IAAAC,cAAA,OAAK6D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACpFlE,IAAAC,cAAA,KAAGkE,OAAO,mBACTnE,IAAAC,cAAA,QAAMmE,EAAE,8DAA8DC,OAAO,UAAUC,YAAY,IAAIC,cAAc,WAEtHvE,IAAAC,cAAA,YACCD,IAAAC,cAAA,UAAQgC,GAAG,YAAYuC,EAAE,IAAIC,EAAE,IAAIX,MAAM,UAAUC,OAAO,UAAUW,YAAY,iBAAiBC,0BAA0B,QAC1H3E,IAAAC,cAAA,WAAS2E,aAAa,IAAI5F,OAAO,uBACjCgB,IAAAC,cAAA,iBAAe4E,GAAG,cAAc/C,KAAK,SAASgD,OAAO,8CACrD9E,IAAAC,cAAA,YAAU8E,GAAG,MACb/E,IAAAC,cAAA,kBAAgB+E,aAAa,MAC7BhF,IAAAC,cAAA,iBAAe6B,KAAK,SAASgD,OAAO,6DACpC9E,IAAAC,cAAA,WAASgF,KAAK,SAASC,IAAI,qBAAqBlG,OAAO,uBACvDgB,IAAAC,cAAA,WAASgF,KAAK,SAASJ,GAAG,gBAAgBK,IAAI,qBAAqBlG,OAAO,cAWtE6E,CACR,GAAC,CAAA3C,IAAA,SAAAC,MAED,SAAOyC,GAEN,IAAIC,EAAY,UAMhB,OAJID,EAAQ,IACXC,EAAY,UAGNA,CAER,GAAC,CAAA3C,IAAA,kBAAAC,MAED1F,iBAAyB,IAAD0J,EAAA,WACjBzJ,MAAMvC,iDACVwC,MAAK,SAAAC,GAAc,OAAOA,EAASC,MAAQ,IAC3CF,MAAK,SAAAG,GAELqJ,EAAK3D,SAAS,CACbgB,WAAY1G,EAAKsJ,KAAKC,IACtB5C,QAAS3G,EAAKsJ,KAAKE,MAGrB,IAAGpJ,OAAM,SAAAC,GACRC,QAAQC,IAAIF,EAEb,UAEKT,MAAMvC,iDACVwC,MAAKF,eAAOqD,GAAC,aAAYA,EAAEjD,QAAQuJ,IAAI,IACvCzJ,MAAK,SAACmD,GAGNqG,EAAK3D,SAAS,CACbe,UAAWzD,EAAEuG,IAAMvG,EAAEyG,IACrB5C,QAAS7D,EAAEwG,KACXtC,cAAelE,EAAEuG,KAGnB,IAAGnJ,OAAM,SAACC,GACTC,QAAQC,IAAIF,EAEb,GAEF,GAAC,CAAA+E,IAAA,SAAAC,MAED1F,iBAAgB,IAAD+J,EAAA,WAERjE,KAAK2B,kBAEX,IAAMQ,WAAU+B,kBAAmBlE,KAAKd,MAExC,IAAKiD,EAASC,MAAO,OAGrB,IAAIjB,EAAagD,EAAMtG,uBAAuBsE,EAASiC,eAAeC,OAAOC,QAC7EtE,KAAKC,SAAS,CACbkB,WAAYA,IAGbgB,EAAS3I,KAAK+K,UAAUL,GAAgBI,OACtClK,MAAK,SAACqD,GAAawG,EAAKhE,SAAS,CAAEqB,QAAS6C,EAAMtG,iBAAiBJ,IAAW,IAC9E9C,MAAME,QAAQ2C,OAEhB2E,EAAS5I,KAAKgL,UAAUL,GAAgBI,OACtClK,MAAK,SAACqD,GAAawG,EAAKhE,SAAS,CAAEoB,QAAS8C,EAAMtG,iBAAiBJ,IAAW,IAC9E9C,MAAME,QAAQ2C,OAEO,uCAAnB0G,IACH/B,EAASzI,KAAK6K,UAAUL,GAAgBI,OACtClK,MAAK,SAACqD,GAAawG,EAAKhE,SAAS,CAAEsB,QAAS4C,EAAMtG,iBAAiBJ,EAAQ,IAAM,IACjF9C,MAAME,QAAQ2C,OAEhB2E,EAASxI,KAAK4K,UAAUL,GAAgBI,OACtClK,MAAK,SAACqD,GAAawG,EAAKhE,SAAS,CAAEuB,QAAS2C,EAAMtG,iBAAiBJ,EAAQ,IAAM,IACjF9C,MAAME,QAAQ2C,OAIlB,GAAC,CAAAmC,IAAA,SAAAC,MAID,WAEC,MAAQmC,KAAM/B,KAAKd,MA6BTsF,EAAY,CACnBC,aAAc,iBACdC,YAAa,iBACbC,QAAS,OAGFC,EAAgB,IACpBJ,EACHE,YAAa,QAKhB,OACCjG,IAAAC,cAAAD,IAAA6B,SAAA,KAEC7B,IAAAC,cAAA,OAAK8B,UAAU,OAEd/B,IAAAC,cAAA,OAAK8B,UAAU,UACd/B,IAAAC,cAAA,OAAK8B,UAAU,QACd/B,IAAAC,cAAA,OAAK8B,UAAU,kBACd/B,IAAAC,cAAA,OAAK8B,UAAU,cAAcE,GAAG,oBAC/BjC,IAAAC,cAAA,OAAK8B,UAAU,4BAA4BE,GAAG,eAAeC,KAAK,WACjE,kBAAgB,oBAChBlC,IAAAC,cAAA,OAAK8B,UAAU,oCACd/B,IAAAC,cAAA,SAAOgC,GAAG,UAAUmE,MA/BR,CAClBC,SAAU,QACVvC,MAAO,OACPwC,eAAgB,YA4B6BvE,UAAU,8BAEhD/B,IAAAC,cAAA,aACCD,IAAAC,cAAA,UACCD,IAAAC,cAAA,UAAKqD,EAAE,gBACPtD,IAAAC,cAAA,MAAI8B,UAAU,eAAeuB,EAAE,kBAC/BtD,IAAAC,cAAA,MAAI8B,UAAU,eAAeuB,EAAE,kBAC/BtD,IAAAC,cAAA,MAAI8B,UAAU,eAAeuB,EAAE,sBAIjCtD,IAAAC,cAAA,aACCD,IAAAC,cAAA,UACCD,IAAAC,cAAA,MAAImG,MAAOL,GACV/F,IAAAC,cAAA,KAAG8B,UAAU,yCACZwE,KAAK,WACLvG,IAAAC,cAAA,OAAKuG,IAAI,kBAAkB1C,MAAM,OAAO2C,IAAI,iBAC5CzG,IAAAC,cAAA,OAAKmG,MAAO,CAACM,YAAa,SACzB1G,IAAAC,cAAA,QAAM8B,UAAU,mBAAkB/B,IAAAC,cAAA,KAAGmG,MAAO,CAACO,MAAO,QAAQC,SAAS,SAAS,QAAQ,gBAAa5G,IAAAC,cAAA,WACjGsB,KAAKX,MAAM4B,WAAW,SAAOjB,KAAK4B,UAAU5B,KAAKX,MAAM6B,SAASzC,IAAAC,cAAA,QAAM8B,UAAW,QAAUR,KAAK6B,OAAO7B,KAAKX,MAAM6B,UAAYlB,KAAKX,MAAM6B,QAASoE,QAAQ,GAAG,SAMlK7G,IAAAC,cAAA,MAAKmG,MAAOL,GAAYxE,KAAKX,MAAMgC,SACnC5C,IAAAC,cAAA,MAAKmG,MAAOL,IAAaxE,KAAKX,MAAMgC,QAAUrB,KAAKX,MAAM4B,YAAYqE,QAAQ,GAAG,SAChF7G,IAAAC,cAAA,MAAKmG,MAAOD,IAAiB5E,KAAKX,MAAMgC,QAAUrB,KAAKX,MAAM4B,YAAYqE,QAAQ,GAAG,SAErF7G,IAAAC,cAAA,UACCD,IAAAC,cAAA,MAAKmG,MAAOL,GACX/F,IAAAC,cAAA,KAAG8B,UAAU,yCAAwCwE,KAAK,WACzDvG,IAAAC,cAAA,OAAKuG,IAAI,kBAAkB1C,MAAM,OAAO2C,IAAI,wBAC5CzG,IAAAC,cAAA,OAAKmG,MAAO,CAACM,YAAa,SACzB1G,IAAAC,cAAA,QAAM8B,UAAU,mBAAkB/B,IAAAC,cAAA,KAAGmG,MAAO,CAACO,MAAO,QAAQC,SAAS,SAAS,QAAQ,uBAAoB5G,IAAAC,cAAA,WACxGsB,KAAKX,MAAM8B,WAAYmE,QAAQ,GAAG,QAAMtF,KAAK4B,UAAU5B,KAAKX,MAAM+B,SAAS3C,IAAAC,cAAA,QAAM8B,UAAW,QAAUR,KAAK6B,OAAO7B,KAAKX,MAAM+B,UAAYpB,KAAKX,MAAM+B,QAASkE,QAAQ,GAAG,SAM7K7G,IAAAC,cAAA,MAAKmG,MAAOL,GAAaxE,KAAKX,MAAMiC,QAASiE,eAAe,UAC5D9G,IAAAC,cAAA,MAAKmG,MAAOL,IAAaxE,KAAKX,MAAMiC,QAAUtB,KAAKX,MAAM8B,YAAYoE,eAAe,SAAS,QAC7F9G,IAAAC,cAAA,MAAKmG,MAAOD,IAAiB5E,KAAKX,MAAMiC,QAAUtB,KAAKX,MAAMoC,eAAe8D,eAAe,SAAS,SAErG9G,IAAAC,cAAA,UACCD,IAAAC,cAAA,MAAKmG,MAAOL,GACX/F,IAAAC,cAAA,KAAG8B,UAAU,yCACZwE,KAAK,WACLvG,IAAAC,cAAA,OAAKuG,IAAI,kBAAkB1C,MAAM,OAAO2C,IAAI,mBAC5CzG,IAAAC,cAAA,OAAKmG,MAAO,CAACM,YAAa,SACzB1G,IAAAC,cAAA,QAAM8B,UAAU,mBAAkB/B,IAAAC,cAAA,KAAGmG,MAAO,CAACO,MAAO,QAAQC,SAAS,SAAS,QAAQ,WAAStD,EAAE,WAAWtD,IAAAC,cAAA,WAAS,iBAOxHD,IAAAC,cAAA,MAAKmG,MAAOL,GAAYxE,KAAKX,MAAMkC,SACnC9C,IAAAC,cAAA,MAAKmG,MAAOL,GAA+B,IAAnBxE,KAAKX,MAAMkC,QAAc,QACjD9C,IAAAC,cAAA,MAAKmG,MAAOD,GAAe,QAE5BnG,IAAAC,cAAA,UACCD,IAAAC,cAAA,MAAKmG,MAAO,IAAIL,EAAWC,aAAc,SACxChG,IAAAC,cAAA,KAAG8B,UAAU,yCACZwE,KAAK,WACLvG,IAAAC,cAAA,OAAKuG,IAAI,kBAAkB1C,MAAM,OAAO2C,IAAI,mBAC5CzG,IAAAC,cAAA,OAAKmG,MAAO,CAACM,YAAa,SACzB1G,IAAAC,cAAA,QAAM8B,UAAU,mBAAkB/B,IAAAC,cAAA,KAAGmG,MAAO,CAACO,MAAO,QAAQC,SAAS,SAAS,QAAQ,WAAStD,EAAE,WAAWtD,IAAAC,cAAA,WAAS,cAOxHD,IAAAC,cAAA,MAAImG,MAAO,IAAIL,EAAWC,aAAc,SAAUzE,KAAKX,MAAMmC,SAC7D/C,IAAAC,cAAA,MAAImG,MAAO,IAAIL,EAAWC,aAAc,SAA+B,IAArBzE,KAAKX,MAAMmC,QAAc,QAC3E/C,IAAAC,cAAA,MAAImG,MAAO,IAAID,EAAeH,aAAc,UAAgC,IAArBzE,KAAKX,MAAMmC,QAAgBxB,KAAKX,MAAM2B,WAAWsE,QAAQ,GAAG,kBAchI,IAAC,CA7UU,CAAS1E,aAgVN4E,oBAAkBzE,G,mGC7UjC,MAAMrJ,EAAYH,EAAQ,IAEpBkO,EAAU,CACd,CACEC,MAAO,QACP9F,MAAO,QAET,CACE8F,MAAO,OACP9F,MAAO,QAIL+F,EAAW,CACf,CACED,MAAO,UACP9F,MAAO,KAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,YACP9F,MAAO,OAET,CACE8F,MAAO,OACP9F,MAAO,MAIX,IAAIiB,EAAa,EACbC,EAAa,KAEX8E,EAAI,SAAA3G,GACR,SAAA2G,EAAY1G,GAAQ,IAADC,E,MA4C8B,OA5C9BC,YAAA,KAAAwG,G,EACjB,K,EAAAA,E,EAAA,CAAM1G,G,kBAANC,E,iGAEKE,MAAQ,CAEXwG,UAAW,EACXC,SAAU,GACVC,SAAU,aACV/K,OAAQ,aACRgL,UAAW,GACXC,UAAW,GACXrG,MAAO,GACP9D,SAAU,EACVoK,OAAQ,EACRC,SAAU,EACVC,eAAgB,EAChBC,gBAAiB,EACjBC,OAAQ,EACRC,WAAY,EACZhM,KAAM,GACNyB,aAAc,MACdwK,cAAe,GACfC,UAAW,EACXC,aAAc,MACdC,aAAc,OAEdC,IAAK,CAAC,GAIRzH,EAAK0H,QAAU1H,EAAK0H,QAAQrH,KAAIL,GAEhCA,EAAK2H,OAAS3H,EAAK2H,OAAOtH,KAAIL,GAC9BA,EAAK4H,MAAQ5H,EAAK4H,MAAMvH,KAAIL,GAE5BA,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAE9BA,EAAK6H,aAAe7H,EAAK6H,aAAaxH,KAAIL,GAC1CA,EAAK8H,cAAgB9H,EAAK8H,cAAczH,KAAIL,GAE5CA,EAAK+H,iBAAmB/H,EAAK+H,iBAAiB1H,KAAIL,GAClDA,EAAKgI,iBAAmBhI,EAAKgI,iBAAiB3H,KAAIL,GAClDA,EAAKiI,gBAAkBjI,EAAKiI,gBAAgB5H,KAAIL,GAEhDA,EAAKkI,YAAclI,EAAKkI,YAAY7H,KAAIL,GAAOA,CAEjD,CAAC,OAAAM,YAAAmG,EAAA3G,GAAAS,YAAAkG,EAAA,EAAAjG,IAAA,oBAAAC,MAED,WAAqB,IAADC,EAAA,KAClBmC,SAAS1D,MAAQ,sBACjB0B,KAAK6G,QAAQ,IAAM,MAAO,IAC1B7G,KAAKoH,kBAELtG,EAAahB,aAAY,WAEnBvD,KAAKC,OAASqE,IAKdA,EAHGhB,EAAKX,MAAMiD,SAASC,MAGV7F,KAAKC,MAAQ,IAFbD,KAAKC,MAAQ,IAI5BqD,EAAKiC,SAGT,GAAG,IACL,GAAC,CAAAnC,IAAA,uBAAAC,MAED,WACEG,cAAce,EAChB,GAAC,CAAAnB,IAAA,eAAAC,MAED,SAAa0H,GACX,IAAIC,EAASD,EAAEE,OAAO5H,MACtBI,KAAK6G,QAAQ,IAAKU,EAAQvH,KAAKX,MAAMmH,eACrCxG,KAAKC,SAAS,CAAEjE,aAAcuL,GAChC,GAAC,CAAA5H,IAAA,gBAAAC,MAED,SAAc0H,GACZ,IAAIC,EAASD,EAAEE,OAAO5H,MACtBI,KAAK6G,QAAQ,IAAK7G,KAAKX,MAAMrD,aAAcuL,GAC3CvH,KAAKC,SAAS,CAAEuG,cAAee,GACjC,GAAC,CAAA5H,IAAA,mBAAAC,MAED1F,eAAuBuN,GACrB,IAAIC,EAAQD,EAAMD,OAAO5H,MACzBI,KAAKoH,kBACLpH,KAAKC,SAAS,CACZ+F,UAAW0B,EACXzB,UAAW0B,YAAYD,EAAQ1H,KAAKX,MAAMuI,YAAYC,YAAY,KAGtE,GAAC,CAAAlI,IAAA,mBAAAC,MAED1F,eAAuBuN,GACrB,IAAIC,EAAQD,EAAMD,OAAO5H,MACzBI,KAAKoH,kBACLpH,KAAKC,SAAS,CACZgG,UAAWyB,EACX1B,UAAW2B,YAAYD,EAAQ1H,KAAKX,MAAMuI,YAAYC,YAAY,KAGtE,GAAC,CAAAlI,IAAA,kBAAAC,MAED1F,iBAEE,IAGIG,EAGA4B,EANA6L,EAAW3D,EAAM5L,MACjBwP,EAAS5D,EAAMvL,MAGfoP,EAAS,EAGb,IACE3N,QAAiBF,MAAM2N,EAAWC,GAAQ3N,MAAK,SAACqB,GAAU,OAAOA,EAAInB,MAAO,IAAGK,OAAM,SAAA6C,GAAW3C,QAAQ2C,MAAMA,EAAO,IACrHvB,EAAS5B,EAASwJ,KAAKC,IACvBkE,EAAS3N,EAASwJ,KAAKE,IAEzB,CAAE,MAAOnJ,GACPC,QAAQC,IAAIF,GACZqB,EAAS+D,KAAKX,MAAMuI,WACpBI,EAAShI,KAAKX,MAAMoH,SACtB,CAEA,IAAIwB,EAAS,EACTC,EAAS,EAEb,IACE7N,QAAiBF,MAAM2N,EAAW3D,EAAMtL,aAAauB,MAAK,SAACqB,GAAU,OAAOA,EAAInB,MAAO,IAAGK,OAAM,SAAA6C,GAAW3C,QAAQ2C,MAAMA,EAAO,IAChIyK,EAAS5N,EAAS8N,UAAUC,KAC5BF,EAAS7N,EAASgO,iBAEpB,CAAE,MAAOzN,GACPC,QAAQC,IAAIF,GACZqN,EAASjI,KAAKX,MAAM8G,SACpB+B,EAASlI,KAAKX,MAAM+G,cAEtB,CAWA,OATApG,KAAKC,SAAS,CACZwG,UAAW,IAAI/O,EAAUsQ,GAAQ9J,GAAG,GAAGjB,SAAS,IAChD2K,WAAY,IAAIlQ,EAAUuE,GAAQiC,GAAG,GAAGjB,SAAS,IACjDkJ,SAAU8B,EACV7B,eAAgB8B,IAKX7N,CAET,GAAC,CAAAsF,IAAA,SAAAC,MAED1F,iBAEE,MAAQgK,iBAAgB/B,YAAanC,KAAKd,MAC1C,IAAIwH,EAAcC,EAElB,IAAKxE,EAASC,MAAO,OAErB,IAAIkG,QAAqBnG,EAAS9I,KAAKkP,UAAUrE,EAAgB/B,EAASqG,UAAUC,SAASnE,OACzFgE,EAAaI,YAAWJ,EAAeA,EAAaI,WACrDJ,EAAapQ,QAAS,IAAGoQ,EAAeA,EAAa,IAExDA,EAAenE,EAAMtG,iBAAiByK,GAEtC,IAAIK,QAAoBxG,EAAS9I,KAAKkL,UAAUL,GAAgBI,OAChEqE,EAAcxE,EAAMtG,iBAAiB8K,GAGnCjC,EADE4B,GAAgBK,GAAgC,IAAjBL,EAClB,WAGA,cAGjB,IAAIM,QAAqBzG,EAAS5I,KAAKgP,UAAUrE,EAAgB/B,EAASqG,UAAUC,SAASnE,OACzFsE,EAAaF,YAAWE,EAAeA,EAAaF,WACrDE,EAAa1Q,QAAS,IAAG0Q,EAAeA,EAAa,IAExDA,EAAezE,EAAMtG,iBAAiB+K,GAEtC,IAAIC,QAAoB1G,EAAS5I,KAAKgL,UAAUL,GAAgBI,OAChEuE,EAAc1E,EAAMtG,iBAAiBgL,GAGnClC,EADEiC,GAAgBC,GAAgC,IAAjBD,EAClB,YAEA,eAGjB,IAAIE,QAAmB3G,EAAS5I,KAAKwP,cAAczE,OACnDwE,EAAa3E,EAAMtG,iBAAiBiL,GAEpC9I,KAAKC,SAAS,CACZyG,eACAC,eACAkC,cACAF,cACA3N,OAAQkJ,EACRmC,gBAAiByC,GAGrB,GAAC,CAAAnJ,IAAA,cAAAC,MAED1F,iBACE,MAAQiI,WAAU+B,iBAAgBhJ,WAAY8E,KAAKd,MAEnD,IAAI8J,EAAO7E,EAAMtG,uBAAuBsE,EAASqG,UAAUnE,OAAOC,QAElE2E,MAAM,WAAWD,EA4BnB,GAAC,CAAArJ,IAAA,SAAAC,MAED1F,iBAAgB,IAAD+J,EAAA,KAEb,IAAM4B,aAAc7F,KAAKX,MACzB,MAAQ8C,WAAU+B,iBAAgBhJ,WAAY8E,KAAKd,MAEnD,IAAIgK,EAASlH,SAASC,eAAe,cAAcrC,MACnDsJ,EAAS/E,EAAMtG,iBAAiBqL,EAAOC,QAAQ,KAAM,KAAM,GAE3D,IAAIC,QAAiBjH,EAAS9I,KAAKkP,UAAUrE,EAAgB/B,EAASqG,UAAUC,SAASnE,OAEzF,GAAI8E,GAAY,EAAG,CACjB,IAAIC,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOuC,EAASqG,UAAUC,SAC7C,CAAElI,KAAM,UAAWX,MAAO,mFAGxB0J,EAAU,2BACVC,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAAS9I,KAAKoP,SAAUa,EAAS,CAAC,EAAGD,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACzJyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAOzF,GANAA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAGN,OADArD,EAAKhE,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,QAASgB,QAASgI,EAAErK,eAC3C,CACT,KACG0M,EAAa,aACZzO,EAAQ8I,IAAI+F,mBAAmBJ,GAClCvP,MAAK,SAACmD,GAEL0G,EAAKhE,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,SAAUgB,QAASb,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,sBAAoB/C,EAAEyM,QAE3E,IAEFZ,QAAiBjH,EAAS9I,KAAKkP,UAAUrE,EAAgB/B,EAASqG,UAAUC,SAASnE,MAEvF,CAKA,GAHI8E,EAASV,YAAWU,EAAWA,EAASV,WAC5CU,EAAWjF,EAAMtG,iBAAiBuL,GAE9BA,GAAYF,EACd,GAAIA,GAAUrD,EAAW,CAEvB,IAAIwD,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOuE,EAAMlG,mBAAmBiL,IACnD,CAAE3I,KAAM,UAAWX,MAAOsE,IAGxBoF,EAAU,6BACVC,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASqG,UAAUC,SAAUa,EAAS,CAAC,EAAGD,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAC9JyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAOzF,GANAA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAGN,OADArD,EAAKhE,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,QAASgB,QAASgI,EAAErK,eAC3C,CACT,KACG0M,EAAa,aACZzO,EAAQ8I,IAAI+F,mBAAmBJ,GAClCvP,MAAK,SAACmD,GAEL0G,EAAKhE,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,SAAUgB,QAASb,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,gBAAc/C,EAAEyM,QAErE,IAEFhI,SAASC,eAAe,cAAcrC,MAAQ,EAGhD,MACEM,OAAO+I,MAAM,gCAAkCpD,EAAY,SAC3D7D,SAASC,eAAe,cAAcrC,MAAQiG,OAM5CuD,GAAY,GACdpH,SAASC,eAAe,cAAcrC,MAAQiG,EAC9C3F,OAAO+I,MAAM,qBAEbjH,SAASC,eAAe,cAAcrC,MAAQiG,EAC9C3F,OAAO+I,MAAM,kBAKjBjJ,KAAK8B,QACP,GAAC,CAAAnC,IAAA,QAAAC,MAED1F,iBAAe,IAAD+P,EAAA,KAEZ,MAAQnE,WAAU+C,eAAgB7I,KAAKX,OAC/B8C,WAAU+B,iBAAgBhJ,WAAY8E,KAAKd,MAEnD,IAAIgK,EAASlH,SAASC,eAAe,cAAcrC,MACnDsJ,EAAS/E,EAAMtG,iBAAiBqL,EAAOC,QAAQ,KAAM,KAAM,GAE3D,IAAIC,QAAiBjH,EAAS5I,KAAKgP,UAAUrE,EAAgB/B,EAASqG,UAAUC,SAASnE,OAEzF,GAAI8E,GAAY,EAAG,CACjB,IAAIC,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOuC,EAASqG,UAAUC,SAC7C,CAAElI,KAAM,UAAWX,MAAO,mFAGxB0J,EAAU,2BACVC,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAAS5I,KAAKkP,SAAUa,EAAS,CAAC,EAAGD,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACzJyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAOzF,GANAA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAGN,OADA2C,EAAKhK,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,QAASgB,QAASgI,EAAErK,eAC3C,CACT,KACG0M,EAAa,aACZzO,EAAQ8I,IAAI+F,mBAAmBJ,GAClCvP,MAAK,SAACmD,GAEL0M,EAAKhK,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,SAAUgB,QAASb,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,sBAAoB/C,EAAEyM,QAE3E,IACFZ,QAAiBjH,EAAS5I,KAAKgP,UAAUrE,EAAgB/B,EAASqG,UAAUC,SAASnE,MACvF,CAKA,GAHI8E,EAASV,YAAWU,EAAWA,EAASV,WAC5CU,EAAWjF,EAAMtG,iBAAiBuL,GAE9BF,EAASpD,EAGX,OAFA9D,SAASC,eAAe,cAAcrC,MAAQkG,OAC9C9F,KAAKC,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,QAASgB,QAAS,gCAAkCwG,EAAW,WAI/F,GAAIoD,EAASL,EAGX,OAFA7G,SAASC,eAAe,cAAcrC,MAAQkG,OAC9C9F,KAAKC,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,QAASgB,QAAS,sBAKlD,GAAI8J,GAAYF,EAAQ,CAEtB,IAAIG,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOuE,EAAMlG,mBAAmBiL,IACnD,CAAE3I,KAAM,UAAWX,MAAOsE,IAGxBoF,EAAU,8BACVC,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASqG,UAAUC,SAAUa,EAAS,CAAC,EAAGD,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAC9JyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAOzF,GANAA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAGN,OADA2C,EAAKhK,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,QAASgB,QAASgI,EAAErK,eAC3C,CACT,KACG0M,EAAa,aACZzO,EAAQ8I,IAAI+F,mBAAmBJ,GAClCvP,MAAK,SAACmD,GAEL0M,EAAKhK,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,SAAUgB,QAASb,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,gBAAc/C,EAAEyM,QAErE,IAEFhI,SAASC,eAAe,cAAcrC,MAAQ,EAGhD,CAGF,GAAC,CAAAD,IAAA,UAAAC,MAED1F,eAAckC,EAAMJ,EAAcF,GAEhC,IAAKkG,SAASC,eAAe,YAAa,OAEtCjC,KAAKkK,MACPlK,KAAKkK,KAAKC,UAGZ,MAAMD,EAAOE,IAASC,IAAI,YAE1BH,EAAKI,UAAU,CACbC,IAAmBF,IAAIH,KAKzB,IAAIM,EAAQN,EAAKO,UAAUC,SAASC,KAClCC,IAAcP,IAAIH,EAAM,CACtBW,MAAM,EACNC,MAAM,EACNC,OAAQ,OACRC,OAAQ,QACRC,YAAY,KAMHT,EAAMU,IAAI,SAAUN,IAAeP,IAAIH,EAAM,CACxDiB,SAAU,UAELC,MAAMF,IAAI,WAAW,GAG5B,IAII9F,EACAiG,EACAC,EANA1L,EAAQ,EACR2L,EAAgB3L,EAChB4L,EAAYtB,EAAKuB,gBAAgBC,IAAI,YACrCC,EAAUzB,EAAKuB,gBAAgBC,IAAI,YAKvC,SAASE,EAAarR,GACpBqF,EAAQrF,EAAKqF,MACb,IAAIiM,EAAOtR,EAAKsR,KAGdzG,EADExF,GAAS2L,EACHI,EAEAH,EAEVD,EAAgB3L,EAEhB,IAAIkM,EAAU,CAAED,OAAMjM,QAAOwF,SAa7B,OAVIA,IAAUiG,IACPC,IACHA,EAAkBQ,GAEpBR,EAAgBS,eAAiB,CAAEjJ,OAAQsC,IAG7CkG,EAAkBQ,EAClBT,EAAgBjG,EAET0G,CACT,CAeA,IAAIE,EAAQxB,EAAMyB,MAAMtB,KACtBC,IAAeP,IAAIH,EAAM,CACvBgC,aAAc,CAAEC,SAAUnQ,EAAcoQ,MAAO,GAC/CC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,GACzCoC,QAASlC,IAAYC,IAAIH,EAAM,CAAC,MAIhCqC,EAAQ/B,EAAMgC,MAAM7B,KACtBC,IAAgBP,IAAIH,EAAM,CACxBmC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAMzCuC,EAASjC,EAAMiC,OAAO9B,KACxBC,IAAiBP,IAAIH,EAAM,CACzBtL,KAAM,SACNoN,MAAOA,EACPO,MAAOA,EACPG,YAAa,QACbC,YAAa,UAIjBF,EAAOG,QAAQC,SAAS3B,IAAI,gBAAiB,kBAE7C,IAAIoB,EAAUG,EAAOvB,IAAI,UAAWd,IAAYC,IAAIH,EAAM,CACxD4C,UAAW,cAIbR,EAAQS,GAAG,WAAW,WACpB,IAAIC,EAAaV,EAAQZ,IAAI,cAC7BsB,EAAW9B,IAAI,OAAQ8B,EAAWtB,IAAI,QACxC,IAGAY,EAAQZ,IAAI,cAAcuB,SAASC,IAAI,QAAQ,SAAUxK,GACvD,OAAI4J,EAAQa,SACHb,EAAQa,SAASC,YAAYhI,MAE/B1C,CACT,IAKA,IAAI2K,EAAY7C,EAAMU,IACpB,aACAN,IAAuBP,IAAIH,EAAM,CAC/BoD,YAAa,aACb9K,OAAQ,MAIR+K,EAAaF,EAAU7C,MAAMyB,MAAMtB,KACrCC,IAAeP,IAAIH,EAAM,CACvBgC,aAAc,CACZC,SAAUnQ,EACVoQ,MAAO,GAETC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAIzCsD,EAAcH,EAAU7C,MAAMgC,MAAM7B,KACtCC,IAAgBP,IAAIH,EAAM,CACxBmC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAIzCuD,EAAWJ,EAAU7C,MAAMiC,OAAO9B,KACpCC,IAAiBP,IAAIH,EAAM,CACzBwC,YAAa,QACbC,YAAa,OACbX,MAAOuB,EACPhB,MAAOiB,KAMPjT,QAjGJL,eAA6BkS,GAC3B,IAAIsB,eAAyBvT,MAAMvC,iEAAwEoE,EAAe,WAAaoQ,IAAQ9R,QAAQuJ,KACnJtJ,EAAO,GAEX,IAAK,IAAIoT,EAAID,EAASxV,OAAS,EAAGyV,GAAK,IAAKA,EAC1CpT,EAAKoQ,KAAKiB,EAAa8B,EAASC,KAGlC,OAAOpT,CACT,CAwFiBqT,CAAc9R,GAC/B2Q,EAAOlS,KAAKsT,OAAOtT,GACnBkT,EAASlT,KAAKsT,OAAOtT,GAMrBkS,EAAOqB,OAAO1R,GACdoO,EAAMsD,OAAO1R,EAAMA,EAAO,IAE1B4D,KAAKkK,KAAOA,CACd,GAAC,CAAAvK,IAAA,SAAAC,MAED,WAAU,IAADmO,EAAA,KAEP,MAAO5L,YAAYnC,KAAKd,MAExB,IAAM2G,YAAWC,WAAUc,MAAKP,kBAAiBuB,aAAYnB,YAAWN,WAAUQ,eAAcD,gBAAiB1G,KAAKX,MAKtH,OAHAwG,EAAY,QAAUA,EAAY,QAClCC,EAAW,QAAUA,EAAW,QAExBrH,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,cAAcE,GAAG,kBAC9BjC,IAAAC,cAAA,OAAK8B,UAAU,4BAA4BE,GAAG,cAAcC,KAAK,WAAW,kBAAgB,mBAC1FlC,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,oCAAoC,iBAAe,QAChE/B,IAAAC,cAAA,OAAK8B,UAAU,qBACb/B,IAAAC,cAAA,OAAK8B,UAAU,kCACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAc,cAC5B/B,IAAAC,cAAA,QAAM8B,UAAU,SAAQ,sCAE1B/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,UAAQ8B,UAAU,+CAA+C,aAAW,UAAUwN,SAAS,IAAIC,aAAa,OAAOpJ,MAAO,CAAEmI,WAAY,qBAC1IvO,IAAAC,cAAA,UAAQkB,MAAO,QAAQ,yBAI7BnB,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,+DACb/B,IAAAC,cAAA,OAAK8B,UAAU,+DACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAqB,SACrC/B,IAAAC,cAAA,MAAI8B,UAAU,mBAAkB,IAAEoH,IAEpCnJ,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAqB,eACrC/B,IAAAC,cAAA,MAAI8B,UAAU,0BAA0BiG,EAAUhI,IAAAC,cAAA,KAAG8B,UAAU,6CAEjE/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAqB,eACrC/B,IAAAC,cAAA,MAAI8B,UAAU,cAAgC,EAAlB6F,GAAqBf,QAAQ,KAE3D7G,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAqB,cACrC/B,IAAAC,cAAA,MAAI8B,UAAU,aAAY,KAAc,EAAX2F,GAAcb,QAAQ,OAIzD7G,IAAAC,cAAA,OAAK8B,UAAU,OAAOE,GAAG,WAAWmE,MAAO,CAAErC,OAAQ,QAAS0L,gBAAiB,WAE/EzP,IAAAC,cAAA,UAAQ8B,UAAU,uCAAuCqE,MAAO,CAAEqJ,gBAAiB,SAAWtO,MAAOI,KAAKX,MAAMmH,cAAe2H,SAAUnO,KAAKiH,eAC3ItB,EAASyI,KAAI,SAACC,GAAM,OACnB5P,IAAAC,cAAA,UAAQiB,IAAK0O,EAAO3I,MAAMzI,WAAY2C,MAAOyO,EAAOzO,OAAQyO,EAAO3I,MAAe,KAGrF,MACDjH,IAAAC,cAAA,UAAQ8B,UAAU,uCAAuCqE,MAAO,CAAEqJ,gBAAiB,SAAWtO,MAAOI,KAAKX,MAAMrD,aAAcmS,SAAUnO,KAAKgH,cAC1IvB,EAAQ2I,KAAI,SAACC,GAAM,OAClB5P,IAAAC,cAAA,UAAQiB,IAAK0O,EAAO3I,MAAMzI,WAAY2C,MAAOyO,EAAOzO,OAAQyO,EAAO3I,MAAe,QAM5FjH,IAAAC,cAAA,OAAK8B,UAAU,8CAA8C,iBAAe,QAC1E/B,IAAAC,cAAA,OAAK8B,UAAU,sBAEb/B,IAAAC,cAAA,OAAK8B,UAAU,cACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAKuG,IAAI,kBAAkB1C,MAAM,OAAO2C,IAAI,iBAC5CzG,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,MAAI8B,UAAU,gDAA+C,qBAC7D/B,IAAAC,cAAA,QAAM8B,UAAU,wBAAuB,UACvC/B,IAAAC,cAAA,QAAM8B,UAAU,gCAA+B,YAAUR,KAAKX,MAAMuI,WAAW,QAC/EnJ,IAAAC,cAAA,KAAG8B,UAAU,cAAa,sRAKlC/B,IAAAC,cAAA,OAAK8B,UAAU,4BACb/B,IAAAC,cAAA,KAAGsG,KAAK,yCAAyCxE,UAAU,6BAA4B,gBAI7F/B,IAAAC,cAAA,OAAK8B,UAAU,iCAAiC,iBAAe,QAC7D/B,IAAAC,cAAA,OAAK8B,UAAU,oBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uCACb/B,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAI8B,UAAU,gBAAe,oBAAkB,QAAQ,QACvD/B,IAAAC,cAAA,KAAG8B,UAAU,cAAa,kBAG9B/B,IAAAC,cAAA,OAAK8B,UAAU,kBAEb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,SACX/B,IAAAC,cAAA,SAAO8B,UAAU,qCAAqCD,KAAK,SAASG,GAAG,aAAayN,SAAUnO,KAAKkH,iBAAkBoH,YAAaxI,EAAUyI,IAAKvO,KAAKX,MAAMyG,SAAU0I,IAAKxO,KAAKX,MAAMwJ,YAAajJ,MAAOI,KAAKX,MAAM2G,UAAWyI,KAAM,MAG1OhQ,IAAAC,cAAA,OAAK8B,UAAU,SACX/B,IAAAC,cAAA,SAAO8B,UAAU,qCAAqCD,KAAK,SAASG,GAAG,aAAayN,SAAUnO,KAAKmH,iBAAkBmH,YAAazI,EAAW0I,IAAKvO,KAAKX,MAAMwG,UAAW2I,IAAKxO,KAAKX,MAAMsJ,YAAa/I,MAAOI,KAAKX,MAAM4G,eAI/NxH,IAAAC,cAAA,OAAK8B,UAAU,wBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,UAAQ8B,UAAU,wDAAwDC,QAAS,kBAAMsN,EAAKjH,QAAQ,GACnGJ,EACDjI,IAAAC,cAAA,OAAK8B,UAAU,cAAc+B,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACxFlE,IAAAC,cAAA,QAAMmE,EAAE,ujCAAujCH,KAAK,QAAQI,OAAO,aAIzlCrE,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,UAAQ8B,UAAU,uDAAuDC,QAAS,kBAAMsN,EAAKhH,OAAO,GACjGJ,EACDlI,IAAAC,cAAA,OAAK8B,UAAU,cAAc+B,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACxFlE,IAAAC,cAAA,QAAMmE,EAAE,4oBAA4oBH,KAAK,QAAQI,OAAO,cAKhrBrE,IAAAC,cAAA,OAAK8B,UAAU,kCACb/B,IAAAC,cAAA,OAAK8B,UAAU,mCACb/B,IAAAC,cAAA,SAAO8B,UAAU,mCAAmCkO,QAAQ,mBAAkB,oDAEhFjQ,IAAAC,cAAA,KAAG8B,UAAU,aAKrB/B,IAAAC,cAAA,OAAK8B,UAAU,kCAAkC,iBAAe,QAC9D/B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,qBAAoB,eAGtC/B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oBACb/B,IAAAC,cAAA,SAAO8B,UAAU,gDACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAI8B,UAAU,aAAY,SAC1B/B,IAAAC,cAAA,MAAI8B,UAAU,eAAc,YAGhC/B,IAAAC,cAAA,aACED,IAAAC,cAAA,MAAImG,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQsN,EAAK7G,iBAAiB,CAAEM,OAAQ,CAAE5H,MAAOmO,EAAK1O,MAAMwJ,cAAiB,GACtHpK,IAAAC,cAAA,MAAI8B,UAAU,aAAY,QAC1B/B,IAAAC,cAAA,UAAKsB,KAAKX,MAAMwJ,cAElBpK,IAAAC,cAAA,MAAImG,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQsN,EAAK5G,iBAAiB,CAAEK,OAAQ,CAAE5H,MAAOmO,EAAK1O,MAAMsJ,cAAiB,GACtHlK,IAAAC,cAAA,MAAI8B,UAAU,aAAY,QAC1B/B,IAAAC,cAAA,UAAKsB,KAAKX,MAAMsJ,kBAO1BlK,IAAAC,cAAA,OAAK8B,UAAU,yCACb/B,IAAAC,cAAA,KAAGsG,KAAK,IAAIxE,UAAU,uBAAsB,aAAU/B,IAAAC,cAAA,KAAG8B,UAAU,8BAUjF/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,qBAE7B/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,UAAU,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAmC7C,EAAS5I,KAAKkP,QAAQ,SAAUtG,EAAS5I,KAAKkP,SAClJhK,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,SAAS,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAmC7C,EAASqG,UAAUC,QAAQ,SAAUtG,EAASqG,UAAUC,cAMrKhK,IAAAC,cAACM,EAAU4H,GAEf,IAAC,CAjxBO,CAAShG,aAoxBJ4E,qBAAkBI,G,QC5zBjC,MAAMlO,GAAYH,EAAQ,IAC1BG,GAAUmX,OAAO,CAAEC,eAAgB,EAAGC,cAAerX,GAAUsX,kBAE/D,MAAMC,GAAaxQ,IAAAC,cAAA,OAAKuG,IAAI,sBAAsBzC,OAAO,OAAO0C,IAAI,eAE9DO,GAAU,CACd,CACEC,MAAO,QACP9F,MAAO,QAET,CACE8F,MAAO,OACP9F,MAAO,QAgBL+F,GAAW,CACf,CACED,MAAO,UACP9F,MAAO,KAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,YACP9F,MAAO,OAET,CACE8F,MAAO,OACP9F,MAAO,MAILsP,GAAe,CACnB,CACExJ,MAAO,UACP9F,MAAO,KAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,WACP9F,MAAO,MAET,CACE8F,MAAO,OACP9F,MAAO,MAIX,IAAIuP,GAAW,GACXC,GAAW,EACXvO,GAAa,EACbC,GAAa,KAEXuO,GAAO,SAAApQ,GACX,SAAAoQ,EAAYnQ,GAAQ,IAADC,EAAAC,YAAA,KAAAiQ,GACjBlQ,E,wIAAAmQ,CAAA,KAAAD,EAAA,CAAMnQ,IAAOqQ,aAAApQ,EAAA,4BAoIY,SAACsI,GAC1B,IAAM+H,MAAOrQ,EAAKE,MAClB,MAAMoQ,EAAmBhI,EAAMD,OAAO5H,MACb,SAArB6P,IAA6BD,EAAK,QACb,SAArBC,IAA6BD,EAAK,QAElCC,IAAqBD,IAErBA,EADuB,QAArBC,EACG,OAEA,OAGTzN,SAASC,eAAe,oBAAoBrC,MAAQ4P,EACpDrQ,EAAKc,SAAS,CACZyP,KAAMD,EACND,KACAG,IAAKF,EAAmB,IAAMD,IAEhCrQ,EAAKyQ,cAAa,EAAOH,EAAmB,IAAMD,EAEpD,IAACD,aAAApQ,EAAA,0BAEwB,SAACsI,GACxB,IAAMiI,QAASvQ,EAAKE,MACpB,MAAMoQ,EAAmBhI,EAAMD,OAAO5H,MAEb,QAArB6P,IAA4BC,EAAO,QACd,SAArBD,IAA6BC,EAAO,OAExC1N,SAASC,eAAe,sBAAsBrC,MAAQ8P,EAEtDvQ,EAAKc,SAAS,CACZyP,OACAF,GAAIC,EACJE,IAAKD,EAAO,IAAMD,IAEpBtQ,EAAKyQ,cAAa,EAAMH,EAAmB,IAAMC,EACnD,IAxKE,MAAQ3N,KAAM5C,EAAKD,MAiG0B,OA/F7CC,EAAKE,MAAQ,CAEXwG,UAAW,EACXC,SAAU,EACVC,SAAUhE,EAAE,WAAa,MACzB8N,UAAW,GACXC,SAAU,GACVhU,SAAU,EACVoK,OAAQ,EACRC,SAAU,EACVC,eAAgB,EAChBE,OAAQ,EACRC,WAAY,EACZhM,KAAM,GACNwV,YAAa,EACbC,cAAe,EACfhU,aAAc+F,EAAE,OAChByE,cAAe,GACfyJ,KAAMlO,EAAE,WAAa,MACrBmO,KAAM,CAAC,CAAEA,KAAM,GAAIhH,OAAQ,EAAG9M,KAAM,EAAG+T,IAAK,GAAK,CAAED,KAAM,GAAIhH,OAAQ,EAAG9M,KAAM,EAAG+T,IAAK,GAAK,CAAED,KAAM,IAAKhH,OAAQ,EAAG9M,KAAM,EAAG+T,IAAK,GAAK,CAAED,KAAM,IAAKhH,OAAQ,EAAG9M,KAAM,EAAG+T,IAAK,IAC5KjP,QAAS,EACTC,WAAY,EACZC,QAAS,EACTE,QAAS,EACT8O,SAAU,GACVC,eAAgB,EAChBC,WAAY,EACZC,YAAa,GACbC,UAAW,GACXC,iBAAkB,GAClBC,aAAc,EACdC,WAAY,EACZC,SAAU,IACVC,SAAU,IACVC,YAAa,EACbC,WAAY,EACZpI,YAAa,IAAIjR,GAAU,GAC3BsZ,YAAa,IAAItZ,GAAU,GAC3BuZ,cAAe,GACfC,QAAS,KACTC,UAAU,EACVC,eAAgB,EAChBC,SAAS,EACTC,SAAS,EACTC,iBAAkB,EAClBC,sBAAuB,EACvBC,WAAY,IAAI/Z,GAAU,GAC1Bga,WAAY,IAAIha,GAAU,GAC1Bia,aAAc,IAAIja,GAAU,GAC5Bka,QAAS,EACTlC,KAAM,MACNF,GAAI,OACJG,IAAK,WACLkC,SAAU,MACVC,QAAQ,EACRC,UAAW,IAAIra,GAAU,GACzBsa,QAAS,IAAIta,GAAU,IAKzByH,EAAKyC,UAAYzC,EAAKyC,UAAUpC,KAAIL,GACpCA,EAAK0C,OAAS1C,EAAK0C,OAAOrC,KAAIL,GAC9BA,EAAK8S,eAAiB9S,EAAK8S,eAAezS,KAAIL,GAC9CA,EAAK0H,QAAU1H,EAAK0H,QAAQrH,KAAIL,GAEhCA,EAAK2H,OAAS3H,EAAK2H,OAAOtH,KAAIL,GAE9BA,EAAK4H,MAAQ5H,EAAK4H,MAAMvH,KAAIL,GAE5BA,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAC9BA,EAAK+S,SAAW/S,EAAK+S,SAAS1S,KAAIL,GAElCA,EAAK6H,aAAe7H,EAAK6H,aAAaxH,KAAIL,GAC1CA,EAAK8H,cAAgB9H,EAAK8H,cAAczH,KAAIL,GAE5CA,EAAKgT,iBAAmBhT,EAAKgT,iBAAiB3S,KAAIL,GAClDA,EAAKiT,iBAAmBjT,EAAKiT,iBAAiB5S,KAAIL,GAElDA,EAAKkT,WAAalT,EAAKkT,WAAW7S,KAAIL,GACtCA,EAAKmT,UAAYnT,EAAKmT,UAAU9S,KAAIL,GAEpCA,EAAKoT,WAAapT,EAAKoT,WAAW/S,KAAIL,GAEtCA,EAAKqT,yBAA2BrT,EAAKqT,yBAAyBhT,KAAIL,GAClEA,EAAKsT,uBAAyBtT,EAAKsT,uBAAuBjT,KAAIL,GAE9DA,EAAKyQ,aAAezQ,EAAKyQ,aAAapQ,KAAIL,GAC1CA,EAAKuT,eAAiBvT,EAAKuT,eAAelT,KAAIL,GAC9CA,EAAKwT,kBAAoBxT,EAAKwT,kBAAkBnT,KAAIL,GAEpDA,EAAKyT,cAAgBzT,EAAKyT,cAAcpT,KAAIL,GAE5CA,EAAK0T,YAAc1T,EAAK0T,YAAYrT,KAAIL,GAExCA,EAAK2T,WAAa3T,EAAK2T,WAAWtT,KAAIL,GAAOA,CAE/C,CAAC,OAAAM,YAAA4P,EAAApQ,GAAAS,YAAA2P,EAAA,EAAA1P,IAAA,oBAAAC,MAED,WAAqB,IAADC,EAAA,KAElB,MAAQkC,KAAM/B,KAAKd,MAEnB8C,SAASC,eAAe,UAAUC,UAAYH,EAAE,eAChDjB,GAAahB,aAAY,WAEnBvD,KAAKC,OAASqE,KAKdA,GAHGhB,EAAKX,MAAMiD,SAASC,MAGV7F,KAAKC,MAAQ,IAFbD,KAAKC,MAAQ,IAI5BqD,EAAKiC,SAGT,GAAG,IAEL,GAAC,CAAAnC,IAAA,uBAAAC,MAED,WACMI,KAAKkK,MACPlK,KAAKkK,KAAKC,UAEZpK,cAAce,GAEhB,GAAC,CAAAnB,IAAA,eAAAC,MA0CD,SAAa0H,GACX,IAAIC,EAASD,EAAEE,OAAO5H,MACtBI,KAAK6G,QAAQ,IAAKU,EAAQvH,KAAKX,MAAMmH,cAAexE,SAASC,eAAe,YAAYrC,OACxFI,KAAKC,SAAS,CAAEjE,aAAcuL,GAChC,GAAC,CAAA5H,IAAA,gBAAAC,MAED,SAAc0H,GACZ,IAAIC,EAASwL,SAASzL,EAAEE,OAAO5H,OAC/BI,KAAK6G,QAAQ,IAAK7G,KAAKX,MAAMrD,aAAcuL,EAAQvF,SAASC,eAAe,YAAYrC,OACvFI,KAAKC,SAAS,CAAEuG,cAAee,GACjC,GAAC,CAAA5H,IAAA,mBAAAC,MAED,SAAiB6H,GACf,IAAIuL,EAAOvL,EAAMD,OAAO5H,MAEpBqT,GAASjT,KAAKX,MAAMwR,SAAW7Q,KAAKX,MAAM8B,YAAenB,KAAKX,MAAMqR,aAAgB,MAAOpL,QAAQ,GACvG2N,GAAcF,SAASC,GACvBhT,KAAKC,SAAS,CACZ2Q,SAAUmC,SAASC,GACnBrC,WAAYsC,GAEhB,GAAC,CAAAtT,IAAA,mBAAAC,MAED,SAAiB6H,GACf,IAAIuL,EAAOvL,EAAMD,OAAO5H,MACpBqT,GAASD,EAAOhT,KAAKX,MAAM8B,YAAenB,KAAKX,MAAMqR,aAAgB,MAAOpL,QAAQ,GACxF2N,GAAcF,SAAS/S,KAAKX,MAAMuR,UAElC5Q,KAAKC,SAAS,CACZ4Q,SAAUmC,EACVrC,WAAYsC,GAEhB,GAAC,CAAAtT,IAAA,eAAAC,MAED,WAA8C,IAAjCsT,EAAGjb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAUkb,EAAIlb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,YACzBkJ,aAAYsQ,aAAYC,cAAe1R,KAAKX,MAC9C+T,EAAUF,EAAM,WAAa,aAE7BG,EAAS,IAAI3b,GAAU,GAE3B,GAAI+Z,EAAWzT,YAAc,GAAK0T,EAAW1T,YAAc,EAAG,OAAOqV,EAErE,IAAIC,EAAWtR,SAASC,eAAemR,GAASxT,MAAOuJ,QAAQ,KAAM,KASrE,OARAmK,EAAU,IAAI5b,GAAUiQ,WAAW2L,IAE/BJ,EACFlT,KAAKC,SAAS,CAAE+R,QAASsB,IAEzBtT,KAAKC,SAAS,CAAE8R,UAAWuB,IAGrBH,GACN,IAAK,YACHE,EAASC,EAAQC,IAAI9B,GACrB4B,EAASA,EAAOE,IAAIpS,GAEpB,MAEF,IAAK,YACHkS,EAASC,EAAQE,MAAM/B,GACvB4B,EAASA,EAAOG,MAAMrS,GACtB,MAEF,IAAK,YACHkS,EAASC,EAAQC,IAAI7B,GACrB2B,EAASA,EAAOE,IAAIpS,GAEpB,MAEF,IAAK,YACHkS,EAASC,EAAQE,MAAM9B,GACvB2B,EAASA,EAAOG,MAAMrS,GAEtB,MAEF,IAAK,WACHkS,EAASC,EAAQE,MAAMrS,GAEvB,MAEF,IAAK,WACHkS,EAASC,EAAQC,IAAIpS,GAuBzB,OAdAiS,EAAWF,EAAmB,aAAb,WAEZO,MAAMJ,EAAOpW,SAAS,OACzB+E,SAASC,eAAemR,GAASxT,MAAQyT,EAAOpW,SAAS,KAKtDiW,EAGHlT,KAAKC,SAAS,CAAE8R,UAAWsB,IAF3BrT,KAAKC,SAAS,CAAE+R,QAASqB,IAKpBA,CAET,GAAC,CAAA1T,IAAA,SAAAC,MAED1F,iBAAgB,IAAD0J,EAAA,KAEb,IAAM6M,mBAAkBqB,UAAW9R,KAAKX,MACxC,MAAQ8C,WAAU+B,iBAAgBhJ,UAAS6G,KAAM/B,KAAKd,MAEtD,IAAKiD,EAASC,MAAO,OAGrB,IAAInG,EAASkI,EAAMtG,uBAAuBsE,EAASiC,eAAeC,OAAOC,QAEzEtE,KAAKC,SAAS,CACZkB,WAAYlF,IAGdkG,EAASiC,eAAesP,eAAepP,OACpClK,MAAK,SAAC+L,GACLvC,EAAK3D,SAAS,CAAEkG,SAAUhC,EAAMtG,iBAAiBsI,IACnD,IAEFhE,EAASiC,eAAeuP,mBAAmBrP,OACxClK,MAAK,SAACkM,GACL1C,EAAK3D,SAAS,CAAEqG,OAAQnC,EAAMtG,iBAAiByI,IACjD,IAEFnE,EAASiC,eAAewP,kBAAkBtP,OACvClK,MAAK,SAACmM,GACL3C,EAAK3D,SAAS,CAAEsG,WAAYpC,EAAMtG,iBAAiB0I,IACrD,IAEFpE,EAAS3I,KAAKuP,cAAczE,OACzBlK,MAAK,SAACgM,GACLxC,EAAK3D,SAAS,CAAEmG,eAAgBjC,EAAMtG,iBAAiBuI,IACzD,IAEF,IAAI9E,QAAgBa,EAAS3I,KAAK+K,UAAUL,GAAgBI,OACzDlK,MAAK,SAAC0W,GAML,OALAA,EAAc3M,EAAMtG,iBAAiBiT,GACrClN,EAAK3D,SAAS,CACZ6Q,YAAaA,EACbxP,QAASwP,IAEJA,CACT,IAEF3O,EAAS9I,KAAKkL,UAAUL,GAAgBI,OACrClK,MAAK,SAACuO,GACL/E,EAAK3D,SAAS,CAAE0I,YAAaxE,EAAMtG,iBAAiB8K,IACtD,IAEFxG,EAAS7I,KAAKiL,UAAUL,GAAgBI,OACrClK,MAAK,SAAC4W,GACLpN,EAAK3D,SAAS,CAAE+Q,YAAa7M,EAAMtG,iBAAiBmT,EAAa,KACnE,IAEFhR,KAAKiS,iBAEY,IAAb7C,KACFpP,KAAK6G,QAAQ,IAAM,MAAO,GAAI,OAC9BuI,MAIsC,MAApC2D,SAAS/S,KAAKX,MAAMsR,aACtB3Q,KAAKoS,iBAAiB,CAAE5K,OAAQ,CAAE5H,MAAO0B,KAGa,IAApDyR,SAAS/Q,SAASC,eAAe,QAAQrC,SAC3CoC,SAASC,eAAe,QAAQrC,MAAQ0B,GAK1C,IAAIuS,QAAgB3Y,EAAQ8I,IAAI8P,sBAAsB5P,GACnDvJ,OAAMT,eAAOoN,GAEZ,OADAzM,QAAQC,IAAIwM,EAAErK,kBACD/B,EAAQ8I,IAAI+P,WAAW7P,EACtC,IAEF2P,GAAoB,IAAM,EAC1B7T,KAAKC,SAAS,CACZ8Q,WAAY8C,IAGd,IAAIG,QAAe9Y,EAAQ8I,IAAIiQ,oBAAoB/P,GAChDvJ,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,EAAErK,YACP,CAAC,CACV,IAEE2U,EAAWmB,eAAe5Q,EAAS+R,oBAAoBC,kBAAkB7P,QAAUyO,eAAe5Q,EAAS+R,oBAAoBE,YAAY9P,QAAW,IAC1JtE,KAAKC,SAAS,CAAE2R,YAChB,IAAIyC,EAAUlQ,EAAMtG,wBAAwBsE,EAASkS,QAAQC,UAAUhQ,QAAQ,IAC3EqN,EAAeoB,eAAe5Q,EAAS+R,oBAAoBK,kBAAkBjQ,QACjFqN,EAAe,IAAIja,GAAUia,GAAc5T,WAAW,GAAGyW,MAAMH,GAC3D1C,EAAe,IAAGA,EAAe,IAAIja,GAAU,IACnDsI,KAAKC,SAAS,CAAE0R,iBAEhB,IAAIrB,EAAa,EAEb0D,EAAOS,cACTnE,EAAa0D,EAAOS,aAGlBT,EAAOU,aACTpE,GAAc0D,EAAOU,YAEvB1U,KAAKC,SAAS,CAAEqQ,eAEhB,IAAIY,EAAU,KAEV2C,GAAW,IACb3C,SAAiBlR,KAAK4S,cAAcd,IAAS5T,GAAG,GAAGF,YAGrDgC,KAAKC,SAAS,CAAEiR,YAEhB,IAAIyD,SAAgB3U,KAAK8S,WAAW5B,IAAUjU,SAAS,IACvD+C,KAAKC,SAAS,CAAE0U,WAEhBxa,MAAMvC,4EAAmF6Y,GACtFrW,MAAKF,eAAOqD,GAAC,aAAYA,EAAEjD,QAAQuJ,IAAI,IACvCzJ,MAAK,SAACsT,GACL,GAAIA,EAASxV,OAAS,EAAG,CAEvB,IAAIwY,EAAehD,EAASkH,QAAO,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKlV,KAAK,GAAE,GACpE8Q,EAAe,IAAIhZ,GAAUgZ,EAAehD,EAASxV,QAAQ8F,WAE7D,IAAIwT,EAAwB5N,EAAKvE,MAAM+B,QAEvC,GAAIsM,EAASxV,QAAU,EAAG,CACxB,MAAM6c,EAAerH,EAASA,EAASxV,OAAS,GAAG0H,MAGnD4R,GAFmB9D,EAAS,GAAG9N,MAEQmV,GAAgBA,EAAgB,IACvEvD,GAAgD9D,EAASxV,MAC3D,CAEA,IAAIqZ,GAAoB,EAAIC,EAAwB,MAAQf,EAE5D7M,EAAK3D,SAAS,CACZyQ,eACAc,wBACAD,oBAEJ,CAEF,IACC5W,OAAM,SAAC2M,GAAQ,OAAO,CAAM,IAG/BnN,MAAMvC,gFACHwC,MAAKF,eAAOqD,GAAC,aAAYA,EAAEjD,QAAQuJ,IAAI,IACvCzJ,MAAK,SAAC4a,GACL,GAAIA,EAAa9c,OAAS,EAAG,CAE3BiX,GAAW,GAEX,IAAIc,EAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAEhC,IAAK,IAAIjY,EAAQ,EAAGA,EAAQiY,EAAK/X,OAAQF,IAEvCmX,GAASxE,KAAK,CACZsF,KAAMA,EAAKjY,GACXgM,IAAM1C,EAAU0T,EAAa,GAAGpV,MAAU0B,EAAU0T,EAAa/E,EAAKjY,IAAQ4H,MAC9EqV,QAAU3T,EAAU0T,EAAa,GAAGpV,MAAU0B,EAAU0T,EAAa/E,EAAKjY,IAAQ4H,OAAUqQ,EAAKjY,KAKrG4L,EAAK3D,SAAS,CACZmQ,SAAU4E,GAEd,CACF,IACCra,OAAM,SAAC2M,GAEN,OADAzM,QAAQ2C,MAAM8J,GACP,EACT,IAEFnF,EAASiC,eAAe8Q,cAAc5Q,OACnClK,MAAK,SAACyL,GACLjC,EAAK3D,SAAS,CAAE4F,UAAW1B,EAAMtG,iBAAiBgI,IACpD,IAEF1D,EAAS3I,KAAK+O,UAAUrE,EAAgB/B,EAASiC,eAAeqE,SAASnE,OACtElK,MAAK,SAACuM,GACL/C,EAAK3D,SAAS,CAAE0G,aAAcxC,EAAMtG,iBAAiB8I,IACvD,IAEFxM,MAAM,iDACHC,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBF,MAAK,SAACmD,GACLqG,EAAK3D,SAAS,CAAEwR,WAAY,IAAI/Z,GAAU6F,EAAEsG,KAAKsR,UACnD,IACCxa,OAAM,SAAC2M,GAAQzM,QAAQC,IAAIwM,EAAG,IAEjCnN,MAAM,iDACHC,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBF,MAAK,SAACmD,GACLqG,EAAK3D,SAAS,CAAEyR,WAAY,IAAIha,GAAU6F,EAAEsG,KAAKsR,UACnD,IACCxa,OAAM,SAAC2M,GAAQzM,QAAQC,IAAIwM,EAAG,IAGjC,IAAIvB,QAAiB5D,EAASiC,eAAegR,iBAAiBlR,GAAgBI,OAC1E+Q,EAAQ,GAEZ,IAAK,IAAIrd,EAAQ,EAAGA,EAAQ+N,EAAS7N,OAAQF,IAC3Cqd,EAAM1K,KAAKoI,SAAShN,EAAS/N,KAG/B,IAAIsd,QAAiBnT,EAASiC,eAAemR,gCAAgCjR,OAC7EgR,EAAWA,EAAS,GAEpB,IAAIrE,EAAgB,GAEhB/K,EAAmE,IAA1D6M,eAAe5Q,EAASiC,eAAeoR,SAASlR,QAEzDmR,GAAgBvP,EAAM,OAAmB2B,YAAY,GAIrD6N,EAAe,IAAIhe,SAAgBwD,EAAQ8I,IAAI+P,WAAW5R,EAASiC,eAAeqE,UAAU1K,WAAW,GAEvGqT,EAAiB,IAAI1Z,GAAU,GAEnCsI,KAAKC,SAAS,CACZ0V,OAAQzP,EACR+J,KAAMwF,IAKR,IAAIpE,EAAUnN,IAAmBhJ,EAAQuN,QAAQmN,cAAezT,EAASiC,eAAeyR,QAAQvR,QAC5FgN,GAAU,EAdG,CAAC,qCAAsC,qCAAsC,sCAgB/EwE,QAAQ5R,IAAmB,IACxCoN,GAAU,GAGZtR,KAAKC,SAAS,CAAEoR,UAASC,YAEzB,IAAK,IAAItZ,EAAQ,EAAGA,EAAQsd,EAASpd,OAAQF,IAAS,CAEpD,IAAI+d,QAAY5T,EAASiC,eAAe4R,sBAAsBV,EAAStd,IAAQsM,OAC/EyR,EAAMA,EAAI,GACV,IAAIE,EAAgC,IAAvBlD,SAASgD,EAAI7P,QAEtBgQ,EAAK,IAAI3Z,KAAK0Z,EAAS/P,GAEvBiQ,IAAkBF,EAAS/P,EAAS3J,KAAKC,OAAK,OAAoBqL,YAAY,GAE9EuO,EAAQ3X,IAAAC,cAAA,SAAG,oCAEX2X,EAAc,IAAI3e,GAAUqb,SAASgD,EAAIO,OAAO9C,MAAMT,SAASgD,EAAI9Z,SAAS8B,WAAW,GA0C3F,GAzCAqT,EAAiBA,EAAemF,KAAKF,EAAYnY,GAAG,IAEhDmX,EAAMmB,SAASzD,SAASuC,EAAStd,MAAYme,EAAgB,IAC/DC,EACE3X,IAAAC,cAAA,UAAQ8B,UAAU,6BAA6BiW,UAAQ,EAAC,gBAAc,QACnE,2BAA2B,IAAChY,IAAAC,cAAA,KAAG8B,UAAU,gCAK3C6U,EAAMmB,SAASzD,SAASuC,EAAStd,MAAYme,GAAiB,GAAM9E,KAKrE+E,EAFEV,EAAa1X,WAAaqY,EAAYtY,WAAW,GAAGG,GAAG,GAAGF,WAG1DS,IAAAC,cAAA,UAAQ8B,UAAU,6BAA6BiW,UAAQ,EAAC,gBAAc,QACnE1U,EAAE,+BAAiC,IAAI,IAACtD,IAAAC,cAAA,KAAG8B,UAAU,8BAOxD/B,IAAAC,cAAA,UAAQ8B,UAAU,uBAAuBC,QAASvG,uBAC1C0J,EAAKsO,SAASa,SAASuC,EAAStd,KACtC4L,EAAK9B,QACP,GACGC,EAAE,SAAW,IAAI,IAACtD,IAAAC,cAAA,KAAG8B,UAAU,kBASpC2V,GAAiB,IACnBA,EAAgB,GAGdd,EAAMmB,SAASzD,SAASuC,EAAStd,MAAYqZ,GAAWC,EAAS,CACnE,IAAIoF,EAAYjY,IAAAC,cAAAD,IAAA6B,SAAA,OAEZ+Q,GAAWC,KACboF,EAAYjY,IAAAC,cAAAD,IAAA6B,SAAA,KAAE7B,IAAAC,cAAA,SAAG,YAAYD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,kCAAoC9J,EAAQuN,QAAQmN,QAAQG,EAAI/a,SAAUE,EAAQuN,QAAQmN,QAAQG,EAAI/a,SAAYyD,IAAAC,cAAA,aAGpMuS,EAAcjZ,GAEZyG,IAAAC,cAAA,OAAK8B,UAAU,WAAWE,GAAI,QAAUqS,SAASuC,EAAStd,IAAS2H,IAAK,OAASoT,SAASuC,EAAStd,KACjGyG,IAAAC,cAAA,OAAK8B,UAAU,eAEb/B,IAAAC,cAAA,MAAI8B,UAAU,oBAAoBuB,EAAE,YAAa,CAAE4U,OAAQ5D,SAASuC,EAAStd,MAAW,IAAE,OAAQ+a,SAASgD,EAAIO,MAAQ,IAAM,EAAE,UAGjI7X,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,KAAG8B,UAAU,cACVkW,EACDjY,IAAAC,cAAA,SAAG,WAAY2X,EAAYtY,WAAW,GAAGG,GAAG,GAAGjB,SAAS,IAAI,OAAIwB,IAAAC,cAAA,WAChED,IAAAC,cAAA,SAAIqD,EAAE,eAAkB,IAAGgR,SAASgD,EAAI9Z,QAAU,IAAM,EAAG,OAAIwC,IAAAC,cAAA,WAC/DD,IAAAC,cAAA,SAAIqD,EAAE,mBAAsB,IAAEmU,EAAGjZ,aAGrCwB,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,KAAG8B,UAAU,cAAcuB,EAAE,iBAAkB,CAAEmO,KAAMiG,IAAkBE,EAAYtY,WAAW,GAAGG,GAAG,GAAGjB,SAAS,IAAI,QACtHwB,IAAAC,cAAA,WACC0X,GAEH3X,IAAAC,cAAA,OAAK8B,UAAU,eAEb/B,IAAAC,cAAA,YAKR,CACF,CAEA0S,EAAiBA,EAAerT,WAAW,GAAGd,SAAS,IAEvD,IAAI2Z,EAAcnY,IAAAC,cAAAD,IAAA6B,SAAA,KAClB7B,IAAAC,cAAA,SAAO6B,KAAK,OAAOG,GAAG,SAAS4N,YAAY,yBAC3C7P,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBC,QAASvG,iBAC3C,IAAImP,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAO1E,EAAQuN,QAAQiB,MAAM1H,SAASC,eAAe,aAK1E,IAEE,IAAIsH,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAAS+R,oBAAoBzL,SAH3G,yBAG8H,CAAC,EAAGY,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAErDA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAEnD9O,QAAQC,IAAI6O,GACZV,MAAM,eAAiBU,EAAYlM,OAAS,UAAYkM,EAAYK,KAEtE,CAAE,MAAOxM,GACP3C,QAAQC,IAAI0C,GACZyL,MAAMzL,EAAMP,WACd,CAEF,GAAG,OACHwB,IAAAC,cAAA,UAAQ8B,UAAU,iBAAiBC,QAASvG,iBAC1C,IAAImP,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAO1E,EAAQuN,QAAQiB,MAAM1H,SAASC,eAAe,aAK1E,IAEE,IAAIsH,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAAS+R,oBAAoBzL,SAH3G,4BAG8H,CAAC,EAAGY,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAErDA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAEnD9O,QAAQC,IAAI6O,GACZV,MAAM,eAAiBU,EAAYlM,OAAS,UAAYkM,EAAYK,KAEtE,CAAE,MAAOxM,GACP3C,QAAQC,IAAI0C,GACZyL,MAAMzL,EAAMP,WACd,CAEF,GAAG,UAEHwB,IAAAC,cAAA,WAAS,YACGyF,EAAMtG,uBAAuBsE,EAASiC,eAAeyS,UAAUvS,QACzE7F,IAAAC,cAAA,YAKFsB,KAAKC,SAAS,CACZ8P,YAAakB,EAAc/Y,UAGzBoZ,GAAWD,IACbJ,EAActG,KAAKlM,IAAAC,cAAA,OAAKiB,IAAI,eACzB0R,EAAUuF,EAAanY,IAAAC,cAAAD,IAAA6B,SAAA,QAI5B2Q,EAActG,KAAKlM,IAAAC,cAAA,OAAKiB,IAAI,gBAAe,iBAC1B+V,EAAazY,SAAS,IAAI,SAG3C+C,KAAKC,SAAS,CACZgR,gBACAG,mBAIF,IAAID,GAAW,EACX2F,EAAS,EAOb,GALA3F,QAAiBhX,MAAMvC,0CACpBwC,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBF,MAAK,SAACmD,GAAC,OAAKA,EAAEwZ,SAAS,IACvBpc,OAAM,kBAAM,CAAK,IAEhBwW,EAAU,CACZ,IAAIzD,QAAiBvT,MAAMvC,mDACxBwC,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IAEnBoT,EAASsJ,UAAU9e,OAAS,IAC9B4e,EAASpJ,EAASsJ,UAAU,GAAGD,WAI/B5F,IADE2F,EAAsC,IAA7BpJ,EAASuJ,kBAKxB,CAGAjX,KAAKC,SAAS,CACZkR,YAGJ,GAAC,CAAAxR,IAAA,WAAAC,MAED1F,eAAewG,GAAK,IAADuD,EAAA,KAEjB,IAAMqM,aAAYa,YAAanR,KAAKX,MACpC,MAAQnE,UAASiH,WAAU+B,iBAAgBnC,KAAM/B,KAAKd,MACtD,IAAIgS,EAAU,EAEV7H,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOc,IAI5B,IAAIwW,QAAoBhc,EAAQsO,mBAAmB2N,wBAAwBjc,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAF3G,mBACE,CAAC,EACoIY,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAChLvJ,OAAM,WAAQ,MAAO,CAAC,CAAE,IAQ3B,GANIuc,EAAYE,YACdlG,GAAWgG,EAAYE,YAEvBlG,GAAW,IAGTA,EAAUZ,GAAca,EAAU,CAEpC,IAAIkG,EAAYnG,EAAUZ,EAEtB+G,EAAY,KACdA,EAAY,KAEZA,GAAa,IAGf,IAAIja,EAAO,CAAE,SAAY,SAAU,OAAUia,EAAW,SAAY,QAChEpF,QAAuB9X,MAAMvC,+CAA0C,CACzEsF,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMN,KAAKC,UAAUK,KACpBhD,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IAEnB2B,EAAS,IAAIvE,GAAUua,EAAevK,OAAOxJ,GAAG,GAEhDoZ,EAAavV,EAAE,oBAAqB,CAAEwV,eAAe,IAEzDvX,KAAKC,SAAS,CACZsQ,YAAa+G,EAAW,GACxB9G,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGgX,EAAW,GAAG,IAAC7Y,IAAAC,cAAA,SAAIwS,EAAQ,IAAEoG,EAAW,IAAQA,EAAW,GAAG7Y,IAAAC,cAAA,SAAI4R,EAAW,IAAEgH,EAAW,IAAO,IAAEA,EAAW,GAAG,IAAC7Y,IAAAC,cAAA,SAAI2Y,EAAU,IAAEC,EAAW,IAAQA,EAAW,GAAG7Y,IAAAC,cAAA,SAAIzC,EAAOgB,SAAS,IAAI,QAASqa,EAAW,GAC3N7Y,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAASvG,iBACzD,SAAU+J,EAAKsO,WAAW8E,GAAY,CAEpC,IAAIhO,EAAS,CAEX,CAAE9I,KAAM,UAAWX,MAAOc,IAGxB4I,EAAU,mBACd,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAAUa,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAENrD,EAAKhE,SAAS,CACZsQ,YAAa,QACbC,UAAWlJ,EAAErK,aAGfiD,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IACFuJ,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJ6J,EAAKhE,SAAS,CACZsQ,YAAa,SACbC,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,kBAAgBqJ,EAAYK,KACvCvL,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,cAIrH7B,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,GAIJ,CACF,GAAIkX,EAAW,OAKnBpX,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,KAAO,CAEL,IAAIiJ,EAAS,CAEX,CAAE9I,KAAM,UAAWX,MAAOc,IAGxB4I,EAAU,mBACd,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAAUa,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAENrD,EAAKhE,SAAS,CACZsQ,YAAa,QACbC,UAAWlJ,EAAErK,aAGfiD,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IACFuJ,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJ6J,EAAKhE,SAAS,CACZsQ,YAAa,SACbC,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,kBAAgBqJ,EAAYK,KACvCvL,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,cAIrH7B,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,GAEJ,CACF,GAAC,CAAAT,IAAA,YAAAC,MAED,SAAUyC,GACR,IAyCIC,EAzCgB7D,IAAAC,cAAA,OAAK6D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OACvEC,MAAM,8BACNlE,IAAAC,cAAA,KAAGkE,OAAO,oBACRnE,IAAAC,cAAA,QAAMmE,EAAE,+DACNC,OAAO,UAAUC,YAAY,IAAIC,cAAc,WAEnDvE,IAAAC,cAAA,YACED,IAAAC,cAAA,UAAQgC,GAAG,aAAauC,EAAE,eAAeC,EAAE,eAAeX,MAAM,UAC9DC,OAAO,UAAUW,YAAY,iBAC7BC,0BAA0B,QAC1B3E,IAAAC,cAAA,WAAS2E,aAAa,IAAI5F,OAAO,uBACjCgB,IAAAC,cAAA,iBAAe4E,GAAG,cAAc/C,KAAK,SACnCgD,OAAO,8CACT9E,IAAAC,cAAA,YAAU8E,GAAG,MACb/E,IAAAC,cAAA,kBAAgB+E,aAAa,MAC7BhF,IAAAC,cAAA,iBAAe6B,KAAK,SAClBgD,OAAO,mEACT9E,IAAAC,cAAA,WAASgF,KAAK,SAASC,IAAI,qBACzBlG,OAAO,uBACTgB,IAAAC,cAAA,WAASgF,KAAK,SAASJ,GAAG,gBAAgBK,IAAI,qBAC5ClG,OAAO,aA2Bf,OAJI4E,EAAQ,IACVC,EApBiB7D,IAAAC,cAAA,OAAK6D,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACnFlE,IAAAC,cAAA,KAAGkE,OAAO,mBACRnE,IAAAC,cAAA,QAAMmE,EAAE,8DAA8DC,OAAO,UAAUC,YAAY,IAAIC,cAAc,WAEvHvE,IAAAC,cAAA,YACED,IAAAC,cAAA,UAAQgC,GAAG,YAAYuC,EAAE,IAAIC,EAAE,IAAIX,MAAM,UAAUC,OAAO,UAAUW,YAAY,iBAAiBC,0BAA0B,QACzH3E,IAAAC,cAAA,WAAS2E,aAAa,IAAI5F,OAAO,uBACjCgB,IAAAC,cAAA,iBAAe4E,GAAG,cAAc/C,KAAK,SAASgD,OAAO,8CACrD9E,IAAAC,cAAA,YAAU8E,GAAG,MACb/E,IAAAC,cAAA,kBAAgB+E,aAAa,MAC7BhF,IAAAC,cAAA,iBAAe6B,KAAK,SAASgD,OAAO,6DACpC9E,IAAAC,cAAA,WAASgF,KAAK,SAASC,IAAI,qBAAqBlG,OAAO,uBACvDgB,IAAAC,cAAA,WAASgF,KAAK,SAASJ,GAAG,gBAAgBK,IAAI,qBAAqBlG,OAAO,cAWzE6E,CACT,GAAC,CAAA3C,IAAA,SAAAC,MAED,SAAOyC,GAEL,IAAIC,EAAY,UAMhB,OAJID,EAAQ,IACVC,EAAY,UAGPA,CAET,GAAC,CAAA3C,IAAA,iBAAAC,MAED1F,iBAAwB,IAAD+P,EAAA,KAErB,aAAa9P,MAAMvC,iDAChBwC,MAAKF,eAAOqD,GAAC,aAAYA,EAAEjD,QAAQuJ,IAAI,IACvCzJ,MAAK,SAAAmD,GAMJ,OAJA0M,EAAKhK,SAAS,CACZmB,QAAS7D,EAAEwG,OAGNxG,CAET,IACC5C,OAAM,SAAAC,GAA2B,OAAlBC,QAAQC,IAAIF,GAAa,CAAG,GAEhD,GAAC,CAAA+E,IAAA,aAAAC,MAED,WACEoC,SAASC,eAAe,YAAYrC,MAAQI,KAAKX,MAAMyR,WAGzD,GAAC,CAAAnR,IAAA,YAAAC,MAED,WACEoC,SAASC,eAAe,cAAcrC,MAAQI,KAAKX,MAAM0R,UAG3D,GAAC,CAAApR,IAAA,gBAAAC,MAED1F,iBAAqC,IAAjB4X,EAAM7Z,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACpByX,EAAO1N,SAASC,eAAe,sBAAsBrC,MACrD4P,EAAKxN,SAASC,eAAe,oBAAoBrC,OAE/C0Q,cAAetQ,KAAKX,MAC1B,MAAQnE,UAASgJ,iBAAgB/B,YAAanC,KAAKd,MAwBnD,IAAIsY,EAAiB,IAAI9f,GAAU,GAE/B+f,EAxBJ,SAAuB7Y,GAErB,IAAI6J,EAAU,qCAEd,OAAQ7J,GACN,IAAK,OACH6J,EAAU,qCACV,MAEF,IAAK,OACHA,EAAU,qCACV,MAEF,QACEA,GAAU,EAId,OAAOA,CAET,CAIYiP,CAAchI,GAE1B,GAAI+H,EAAO,CAET,IAAIE,EAAgB,qCAEpB,MAAMhS,EAAW,CACfzI,OAAQ,OACRC,QAAS,CAAEya,OAAQ,mBAAoB,eAAgB,oBACvDxa,KAAMN,KAAKC,UAAU,CAAE6C,MAAO+X,EAAeE,SAAS,KAGxD,IAAIC,QAAqB3d,MAAM,6CAA8CwL,GAC1EvL,MAAK,SAAAqB,GAAG,OAAIA,EAAInB,MAAM,IACtBK,OAAM,SAAAC,GAA6B,OAApBC,QAAQ2C,MAAM5C,GAAa,CAAC,CAAE,IAG9Ckd,EADEA,EAAaC,8BACAD,EAAaC,8BAAgC,IAE7C,EAGjB,IAAIC,EAAsB9c,EAAQ+c,SAAS9T,EAAMvK,UAAW6d,GACxDS,EAAgBnF,eAAeiF,EAAoBG,WAAW7T,QAE9D8T,QAAeJ,EAAoBzP,UAAUrE,EAAgByT,GAAerT,OAKhF,GAJI8T,EAAO1P,YAAW0P,EAASA,EAAO1P,WACtC0P,EAASrF,SAASqF,GAGdA,GAAU,IAAS,CAErB,IAAI/O,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAO1E,EAAQuN,QAAQiB,MAAMiO,IAChD,CAAEpX,KAAM,UAAWX,MAAO,mFAGxB0J,EAAU,2BACd,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmB2N,wBAAwBjc,EAAQuN,QAAQiB,MAAM+N,GAAQnO,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAClJvJ,OAAM,WAAQ,MAAO,CAAC,CAAE,IAEvB4O,EAAQ6N,cAEVI,EAAiBA,EAAejB,KAAKhN,EAAQ6N,aAEjD,CAGA,IAAIiB,EAAQ,IAAI3gB,GAAU,GAAGqG,UAAUma,GAAeha,GAAG,GAAGjB,SAAS,IAEjEyQ,QAAiBvT,MAAM,mDAAqDsd,EAAQ,wDAA0DY,EAAQ,wCACvJje,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBF,MAAK,SAACmD,GAAC,OAAKA,EAAEhD,KAAK,EAAE,IAExB,SAAS+d,EAAiBC,EAAaC,GACrC,IAAI/a,EAAS,IAAIgb,MAAMD,EAAStgB,QAAQwK,KAAK,GACzCgW,EAAkBH,EAGtB,IAAK,IAAI5K,EAAI,EAAGA,EAAI6K,EAAStgB,QAAUwgB,EAAkB,EAAG/K,IAC1DlQ,EAAOkQ,GAAK,EACZ+K,IAIF,IAAI1gB,EAAQ,EACZ,KAAO0gB,EAAkB,GACvBjb,EAAOzF,KACP0gB,IACA1gB,GAASA,EAAQ,GAAKwgB,EAAStgB,OAGjC,OAAOuF,CACT,CAEA,IAAI4L,EAAS,CACX,CAAE9I,KAAM,YAAaX,MAAO8N,EAASxF,QACrC,CAAE3H,KAAM,WAAYX,MAAO8N,EAASiL,cACpC,CAAEpY,KAAM,YAAaX,MAAO0Y,EAAiB5K,EAASxF,OAAOhQ,OAAQwV,EAASiL,eAC9E,CAAEpY,KAAM,WAAYX,MAAO8N,EAASkL,UACpC,CACErY,KAAM,oCACNX,MAAO,CACL,IAAIlI,GAAUgW,EAASmL,UAAU9a,UAAUma,GAAeha,GAAG,GAAGjB,SAAS,IACzE,IAAIvF,GAAUgW,EAASoL,WAAWtF,MAAM,MAAOzV,UAAU,GAAGG,GAAG,GAAGjB,SAAS,IAC1E/B,EAAQuN,QAAQiB,MAAMxF,GAAiBiF,QAAQ,MAAO,OACrD4J,SAASxW,KAAKC,MAAQ,KAAS,KAAKS,SAAS,OAMjDqM,EAAU,0FACd,MAAM7D,EAAU,CAAEsT,SAAU,KAAaC,UAAW,GACpD,IAAIzP,QAAgBrO,EAAQsO,mBAAmB2N,wBAAwBjc,EAAQuN,QAAQiB,MAAMiO,GAAgBrO,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAC1JvJ,OAAM,WAAQ,MAAO,CAAC,CAAE,IAEvB4O,EAAQ6N,cAEVI,EAAiBA,EAAejB,KAAKhN,EAAQ6N,YAAcU,GAG/D,CAGA,GAAW,SAAPtI,EAAe,CAEjB,IAAInG,EAAS,GAETC,EAAU,YACd,MAAM7D,EAAU,CAAEuT,UAAW,KAC7B,IAAIzP,QAAgBrO,EAAQsO,mBAAmB2N,wBAAwBjc,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAAUa,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAC5KvJ,OAAM,WAAQ,MAAO,CAAC,CAAE,IAEvB4O,EAAQ6N,cAEVI,EAAiBA,EAAejB,KAAKhN,EAAQ6N,aAIjD,KAAO,CAEL,IAAI/N,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAO,YAGxBqZ,EAAkB9W,EAASiC,eAAeqE,QAE1CqJ,IACFmH,EAAkB9W,EAAS+R,oBAAoBzL,SAGjD,IAAIa,EAAU,wBACVwI,IACFxI,EAAU,yBAEZ,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmB2N,wBAAwBjc,EAAQuN,QAAQiB,MAAMuP,GAAkB3P,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAC5JvJ,OAAM,WAAQ,MAAO,CAAC,CAAE,IAEvB4O,EAAQ6N,cAEVvc,QAAQC,IAAI,UAAWyO,EAAQ6N,YAAa7N,GAC5CiO,EAAiBA,EAAejB,KAAKhN,EAAQ6N,aAGjD,CAiBA,OAfAI,EAAiBA,EAAejB,KAAK,KACrC1b,QAAQC,IAAI,YAAa0c,EAAeva,SAAS,KAEjDua,EAAiBA,EAAehD,MAAMlE,GACtCzV,QAAQC,IAAI,aAAc0c,EAAeva,SAAS,KAE9Cua,EAAexZ,YAAc,EAC/BwZ,EAAiB,IAAI9f,GAAU,GAE3B8f,EAAexZ,WAAa,OAAOwZ,EAAiB,IAAI9f,GAAU,OAIxEmD,QAAQC,IAAI,QAAS0c,EAAeva,SAAS,KAEtCua,CAET,GAAC,CAAA7X,IAAA,aAAAC,MAED1F,eAAiB4B,GAIf,GAA4B,KAF5BA,EAAW,IAAIpE,GAAUoE,GAAUoC,GAAG,IAEzBF,WAAkB,OAAO,IAAItG,GAAU,GAEpD,IAAIgW,QAAiBvT,MAAMvC,+CAA0C,CACnEsF,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMN,KAAKC,UAAU,CAAE,SAAY,SAAU,OAAUjB,EAASmB,SAAS,IAAK,SAAY,WACzF7C,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBK,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,IACL,CACT,IAEF,IAAKoG,EAAU,OAAO,EAEtB,IAAIiH,EAAS,IAAIjd,GAAUgW,EAAShG,OAAOxJ,GAAG,GAI9C,OAFA8B,KAAKC,SAAS,CAAE0U,OAAQA,EAAO1X,SAAS,MAEjC0X,CAET,GAAC,CAAAhV,IAAA,aAAAC,MAED1F,eAAiB4B,GAAW,IAADiS,EAAA,KAEpBrW,GAAUwhB,YAAYpd,KACzBA,EAAW,IAAIpE,GAAUoE,IAG3BA,EAAWA,EAASoC,GAAG,GAAGF,WAE1B,MAAQ9C,UAASgJ,iBAAgBnC,KAAM/B,KAAKd,MAC5C,IAAMiS,YAAanR,KAAKX,MAExB,IAAK8R,EAAU,OAAO,EAEtB,GAAIrV,GAAY,EAAG,OAAO,EACtBA,EAAW,OAAOA,EAAW,MAEjCkE,KAAKC,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,qBAAmB2O,IAClCuB,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,8EAKfJ,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC,IAAI+Y,GAAU,EAEVld,QAAe+D,KAAK8S,WAAWhX,GAEnC,IAAKG,EAAQ,OAAO,EAEpB,MAAMmd,QAA4Ble,EAAQsO,mBAAmB6P,QAAQzhB,qCAAkCsD,EAAQoB,MAAML,GAASiI,GAExHhI,QAA0BgE,OAAOhF,QAAQ8I,IAAI8F,KAAKsP,GACrDze,OAAM,SAAC2M,GAUN,OATAyG,EAAK9N,SAAS,CACZsQ,YAAa,qBACbC,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGgH,EAAErK,WACdwB,IAAAC,cAAA,WAASD,IAAAC,cAAA,WACTD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,iBAAiBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAG,YAIjHF,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,IAGF,IAAKlE,EAAqB,OAAO,EAEjC8D,KAAKC,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,yBAAuB2O,IACtCuB,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,sIAKfJ,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC,IAAIkZ,QAAkBnV,EAAMxI,aAAauI,EAAgB,SAAUpI,EAAU,IAAK,MAAOG,EAAQC,GAwBjG,OAtBIod,EAAU7b,QAEZuC,KAAKC,SAAS,CACZsQ,YAAaxO,EAAE,kBAAmB,CAAEwV,eAAe,IAAQ,GAC3D/G,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGyB,EAAE,kBAAmB,CAAEwV,eAAe,IAAQ,GAAG9Y,IAAAC,cAAA,WAASD,IAAAC,cAAA,UAAQ6B,KAAK,SAAS,kBAAgB,QAAQC,UAAU,mBAAmBuB,EAAE,kBAAmB,CAAEwV,eAAe,IAAQ,OAGnMrX,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC+Y,GAAU,IAIVnZ,KAAKC,SAAS,CACZsQ,YAAaxO,EAAE,mBAAoB,CAAEwV,eAAe,IAAQ,GAC5D/G,UAAWzO,EAAE,mBAAoB,CAAEwV,eAAe,EAAM7Z,KAAM4b,EAAU5b,KAAME,IAAK0b,EAAU1b,MAAO,KAGtGsC,OAAOC,EAAE,iBAAiBC,MAAM,SAI3B+Y,CAET,GAAC,CAAAxZ,IAAA,cAAAC,MAED1F,iBAAmC,IAADqf,EAAA,SAAhBzH,EAAM7Z,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,IAEhBqY,cAAetQ,KAAKX,MAEtB6R,SAAiBlR,KAAK4S,cAAcd,IAAS5T,GAAG,GAChDjC,QAAe+D,KAAK8S,WAAW5B,GAEnCrW,QAAQC,IAAIoW,EAAQjU,SAAS,KAEzBiU,EAAQlT,WAAa,GAEvBgC,KAAKC,SAAS,CACZsQ,YAAa,gBACbC,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,2BACa7B,IAAAC,cAAA,SAAIwS,EAAQqF,KAAKjG,GAAYpS,GAAG,GAAGF,WAAWuH,eAAe,SAAS,WAAW9G,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,YAElHD,IAAAC,cAAA,SAAI4R,EAAW/K,eAAe,SAAS,WAAW9G,IAAAC,cAAA,WAAS,QAC/DD,IAAAC,cAAA,SAAIwS,EAAQlT,WAAWuH,eAAe,SAAS,WAAW,QAAK9G,IAAAC,cAAA,SAAIzC,EAAOgB,SAAS,IAAI,QAC5FwB,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAASvG,uBAC/Cqf,EAAKhH,WAAWrB,IACxBqI,EAAK7G,eAAeZ,EAExB,GAAG,gBAEHrT,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,iBAAiBC,QAASvG,iBAExDqf,EAAK7G,eAAeZ,EACtB,GAAG,sCAMP5R,OAAOC,EAAE,iBAAiBC,MAAM,SAGhCJ,KAAK0S,eAAeZ,EAKxB,GAAC,CAAAnS,IAAA,iBAAAC,MAED1F,iBAAsC,IAAjB4X,EAAM7Z,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAIzB,OAHW+J,SAASC,eAAe,sBAAsBrC,MAG1C,IAFNoC,SAASC,eAAe,oBAAoBrC,OAInD,IAAK,YACHI,KAAK2S,kBAAkB,GACvB,MAEF,IAAK,YACH3S,KAAK2S,kBAAkB,GAEvB,MAEF,IAAK,WACH3S,KAAK+G,MAAM+K,GACX,MAEF,QAEE9R,KAAK8G,SAGX,GAAC,CAAAnH,IAAA,oBAAAC,MAED1F,iBAAqC,IAADsf,EAAA,SAAZC,EAAMxhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAE/B,MAAQiD,UAASgJ,iBAAgBnC,KAAM/B,KAAKd,MAC5C,IAAMuS,aAAYC,cAAe1R,KAAKX,MAGlCoY,EAAmB,IAAXgC,EAAe,qCAAuC,qCAE9DC,EAA0B,IAAXD,EAAehI,EAAaC,EAE3CiG,EAAgB,qCAEhBxV,EAAWjH,EAAQ+c,SAAS9T,EAAMrK,cAAe6d,GAGjDK,EAAsB9c,EAAQ+c,SAAS9T,EAAMvK,UAAW6d,GACxDS,EAAgBnF,eAAeiF,EAAoBG,WAAW7T,QAE9DqV,EAAe,IAAIjiB,GAAUqb,eAAeiF,EAAoBzT,UAAUL,GAAgBI,SAASvG,WAAWma,GAE9GG,EAAQrW,SAASC,eAAe,cAAcrC,MAIlD,GAHAyY,EAAQA,EAAMlP,QAAQ,KAAM,KAC5BkP,EAAQ,IAAI3gB,GAAU2gB,GAElBsB,EAAazb,GAAG,GAAGF,WAAa,GAAKqa,EAAMra,WAAa2b,EAAa3b,WAUvE,OATAgC,KAAKC,SAAS,CACZsQ,YAAa,QACbC,UAAY/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,sCACwB0X,EAAoBpZ,OAAO0F,OAAO,kCAI1EpE,OAAOC,EAAE,iBAAiBC,MAAM,QAEzB,QAIT,IAAIgY,QAAeJ,EAAoBzP,UAAUrE,EAAgByT,GAAerT,OAIhF,GAHI8T,EAAO1P,YAAW0P,EAASA,EAAO1P,WACtC0P,EAASrF,SAASqF,GAEdA,GAAUuB,EAAa3b,WAAY,CAErCgC,KAAKC,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,eAAa2O,IAC5BuB,UAAY/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,wCAGhBJ,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC,IAAIiJ,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAO1E,EAAQuN,QAAQiB,MAAMiO,IAChD,CAAEpX,KAAM,UAAWX,MAAO,mFAGxB0J,EAAU,2BACd,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMsO,EAAoBvP,SAAUa,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAEpKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAazF,GAXAA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAQN,OANAkS,EAAKvZ,SAAS,CACZsQ,YAAaxO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAClE/G,UAAWzO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAAK,MAAQjQ,EAAErK,aAGjFiD,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,KACGuJ,EAAa,OAqBlB,GApBAA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WAOJ,OANAof,EAAKvZ,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,eAAa2O,IAC5BuB,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,yCAGfJ,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,IAAGzF,OAAM,SAAC2M,GASR,OAPAkS,EAAKvZ,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,QAAM2O,IACrBuB,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGgH,EAAErK,cAGlBiD,OAAOC,EAAE,iBAAiBC,MAAM,SAEzB,CACT,KACGuJ,EAAa,MAGpB,CAEA,IAAI+D,QAAiBvT,MAAM,mDAAqDsd,EAAQ,wDAA0DY,EAAMta,UAAUma,GAAeha,GAAG,GAAGjB,SAAS,IAAM,wCACnM7C,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBF,MAAK,SAACmD,GAAC,OAAKA,EAAEhD,KAAK,EAAE,IAuBxB,IAAI8O,EAAS,CACX,CAAE9I,KAAM,YAAaX,MAAO8N,EAASxF,QACrC,CAAE3H,KAAM,WAAYX,MAAO8N,EAASiL,cACpC,CAAEpY,KAAM,YAAaX,MAxBvB,SAA0B2Y,EAAaC,GACrC,IAAI/a,EAAS,IAAIgb,MAAMD,EAAStgB,QAAQwK,KAAK,GACzCgW,EAAkBH,EAGtB,IAAK,IAAI5K,EAAI,EAAGA,EAAI6K,EAAStgB,QAAUwgB,EAAkB,EAAG/K,IAC1DlQ,EAAOkQ,GAAK,EACZ+K,IAIF,IAAI1gB,EAAQ,EACZ,KAAO0gB,EAAkB,GACvBjb,EAAOzF,KACP0gB,IACA1gB,GAASA,EAAQ,GAAKwgB,EAAStgB,OAGjC,OAAOuF,CACT,CAK8B6a,CAAiB5K,EAASxF,OAAOhQ,OAAQwV,EAASiL,eAC9E,CAAEpY,KAAM,WAAYX,MAAO8N,EAASkL,UACpC,CACErY,KAAM,oCACNX,MAAO,CACL,IAAIlI,GAAUgW,EAASmL,UAAU9a,UAAUma,GAAeha,GAAG,GAAGjB,SAAS,IACzE,IAAIvF,GAAUgW,EAASoL,WAAWtF,MAAM,MAAOzV,UAAU,GAAGG,GAAG,GAAGjB,SAAS,IAC1E/B,EAAQuN,QAAQiB,MAAMxF,GAAiBiF,QAAQ,MAAO,OACrD4J,SAASxW,KAAKC,MAAQ,KAAS,KAAKS,SAAS,OAQrD,IAAIsM,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASsG,SAFrF,0FACE,CAAEsQ,SAAU,KAAaC,UAAW,GAC2E3P,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACzJyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAEzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAQN,OANAkS,EAAKvZ,SAAS,CACZsQ,YAAaxO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAClE/G,UAAWzO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAAK,MAAQjQ,EAAErK,aAGjFiD,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,IACGuJ,IACLA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJof,EAAKvZ,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,cAAY2O,IAC3BuB,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,qCAGfJ,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,UAEI+D,EAAM7I,MAAM,GAElB0E,KAAK8G,OAAOuR,EAAM9E,IAAImG,IACxB,GAAC,CAAA/Z,IAAA,SAAAC,MAED1F,iBAAyC,IAAD0f,EAAA,SAA3B1Q,EAAMjR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAIP,GAAU,GAClC,MAAQwD,UAASiH,WAAU+B,iBAAgBnC,KAAM/B,KAAKd,MAUtD,GARIgK,EAAOlL,YAAc,IACvBkL,EAASvB,WAAW3F,SAASC,eAAe,cAAcrC,OAC1DsJ,EAAS,IAAIxR,GAAUwR,IAIzBA,EAASA,EAAOnL,UAAU,GAAGG,GAAG,GAAGF,WAE/BkL,GAAU,EAWZ,YATAlJ,KAAKC,SAAS,CACZsQ,YAAaxO,EAAE,wBAAyB,CAAEwV,eAAe,IAAQ,GACjE/G,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGyB,EAAE,wBAAyB,CAAEwV,eAAe,IAAQ,GAChE9Y,IAAAC,cAAA,WAASD,IAAAC,cAAA,WACTD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,iBAAiBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,aAQtH,MAAQ8D,aAAc7F,KAAKX,MAI3B,SAFoBnE,EAAQ8I,IAAI8P,yBAEjB5K,EACb,GAAIA,GAAUrD,EAAW,CAEvB,IAAIwD,EAAS,GAKTC,EAAU,YACd,MAAM7D,EAAU,CAAEuT,UAAW9P,GAC7B,IAAIK,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAAUa,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KAYzF,GAXAA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAQN,OANAsS,EAAK3Z,SAAS,CACZsQ,YAAaxO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAClE/G,UAAWzO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAAK,MAAQjQ,EAAErK,aAGjFiD,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,KACGuJ,EAAa,OAClBA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJwf,EAAK3Z,SAAS,CACZsQ,YAAaxO,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GAC7D/G,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGyB,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GAC5D9Y,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,cAIrH7B,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,GAGJ,MACE4B,SAASC,eAAe,cAAcrC,MAAQiG,EAC9C7F,KAAKC,SAAS,CACZsQ,YAAaxO,EAAE,SACfyO,UAAWzO,EAAE,wBAAyB,CAAEwV,eAAe,EAAMhJ,IAAK1I,IAAa,KAGjF3F,OAAOC,EAAE,iBAAiBC,MAAM,aAMlC4B,SAASC,eAAe,cAAcrC,MAAQ,GAC9CI,KAAKC,SAAS,CACZsQ,YAAaxO,EAAE,SACfyO,UAAWzO,EAAE,sBAAuB,CAAEwV,eAAe,EAAMhJ,IAAK1I,IAAa,KAG/E3F,OAAOC,EAAE,iBAAiBC,MAAM,cAI5B+D,EAAM7I,MAAM,GAClB0E,KAAK8B,QAGP,GAAC,CAAAnC,IAAA,QAAAC,MAED1F,eAAY4X,GAAS,IAAD+H,EAAA,KAElB,MAAQ9X,KAAM/B,KAAKd,OACX4G,YAAa9F,KAAKX,MAE1B,IAAI6J,EAASlH,SAASC,eAAe,cAAcrC,MACnDsJ,EAASA,EAAOC,QAAQ,KAAM,KAC9BD,EAAS,IAAIxR,GAAUwR,GAAQnL,UAAU,GAEzC,IAAMmG,iBAAgB/B,WAAUjH,WAAY8E,KAAKd,MAE7C+Z,EAAkB/d,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAChEqJ,IACFmH,EAAkB/d,EAAQuN,QAAQiB,MAAMvH,EAAS+R,oBAAoBzL,UAGvE,IAAIW,QAAiBjH,EAAS3I,KAAK+O,UAAUrE,EAAgB+U,GAAiB3U,OAG9E,GAFA8E,EAAW2J,SAAS3J,GAEhBA,GAAYF,EAAOlL,WAAY,CAEjCgC,KAAKC,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,gBACfkQ,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,6DAGfJ,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC,IAAIiJ,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOqZ,GAC1B,CAAE1Y,KAAM,UAAWX,MAAO,mFAGxB0J,EAAU,2BACd,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAAS3I,KAAKiP,SAAUa,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IAC9JyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAENuS,EAAK5Z,SAAS,CACZsQ,YAAa,QACbC,UAAWlJ,EAAErK,aAGfiD,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IACFuJ,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJyf,EAAK5Z,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,UACfkQ,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,wBAAsBqJ,EAAYK,QAGjD9J,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IAEFgJ,QAAiBjH,EAAS3I,KAAK+O,UAAUrE,EAAgB+U,GAAiB3U,OAC1E8E,EAAW2J,SAAS3J,EAEtB,CAEA,GAAIA,GAAYF,EAAOlL,WAErB,GAAIkL,EAAOlL,YAAc8H,EAAkB,CAEzC9F,KAAKC,SAAS,CACZsQ,YAAa9R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,sBAAoB2O,IACnCuB,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,gEAKfJ,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC,IAAIiJ,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAOsJ,EAAOjM,SAAS,MAGxCqM,EAAU,wBACVwI,IACFxI,EAAU,yBAEZ,MAAM7D,EAAU,CAAC,EACjB,IAAI8D,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBwP,EAAiB3P,EAAS7D,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACjIyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAENuS,EAAK5Z,SAAS,CACZsQ,YAAa,QACbC,UAAWlJ,EAAErK,aAGfiD,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IACFuJ,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJyf,EAAK5Z,SAAS,CACZsQ,YAAa,mBACbC,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,8CAA2C7B,IAAAC,cAAA,KAAGsG,KAAM,sCAAwC2E,EAAYK,KAAM4E,IAAI,sBAAsBpH,OAAO,UAAWmC,EAAYK,MACjLvL,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,cAIrH7B,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IAGG0R,GACH9P,SAASC,eAAe,gBAAgB6X,gBAI5C,MACE9Z,KAAKC,SAAS,CACZsQ,YAAa,OACbC,UAAU,8BAADuJ,OAAgCjU,EAAQ,WAGnD5F,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC4B,SAASC,eAAe,cAAcrC,MAAQkG,OAM5CoD,EAASE,GACPA,GAAY,GACdpJ,KAAKC,SAAS,CACZsQ,YAAa,OACbC,UAAW,2EAA6E1K,EAAW,UAGrG5F,OAAOC,EAAE,iBAAiBC,MAAM,UAYlCJ,KAAKC,SAAS,CACZsQ,YAAa,OACbC,UAAW,uEAGbtQ,OAAOC,EAAE,iBAAiBC,MAAM,SAIlC4B,SAASC,eAAe,cAAcrC,MAAQkG,EAKhD9F,KAAK8B,QAGP,GAAC,CAAAnC,IAAA,UAAAC,MAGD1F,eAAckC,EAAMJ,EAAcF,EAAU+V,GAE1C,IAAM1Q,aAAYsQ,aAAYC,cAAe1R,KAAKX,MAElD,IAAK2C,SAASC,eAAe,iBAAkB,OAE3CjC,KAAKkK,MACPlK,KAAKkK,KAAKC,UAGZ,MAAMD,EAAOE,IAASC,IAAI,iBAC1BH,EAAK8P,MAAM7P,UACXD,EAAKI,UAAU,CACbC,IAAmBF,IAAIH,KAKzB,IAAIM,EAAQN,EAAKO,UAAUC,SAASC,KAClCC,IAAcP,IAAIH,EAAM,CACtBW,MAAM,EACNC,MAAM,EACNC,OAAQ,OACRC,OAAQ,QACRC,YAAY,KAMHT,EAAMU,IAAI,SAAUN,IAAeP,IAAIH,EAAM,CACxDiB,SAAU,UAELC,MAAMF,IAAI,WAAW,GAG5B,IAIIG,EACAC,EALAE,EAAYtB,EAAKuB,gBAAgBC,IAAI,YACrCC,EAAUzB,EAAKuB,gBAAgBC,IAAI,YAEnCH,EAAgB,EAIpB,SAASK,EAAarR,EAAM2K,GAC1B,IAAItF,EAAQrF,EAAKqF,MACjB,GAAIsF,EAAK,CACP,IAAI+U,EAAa1f,EAAK2f,UAAUC,MAAK,SAACC,GAAG,OAAKA,EAAIC,OAASnV,CAAG,IAG5DtF,EADEqa,EACMA,EAAW5X,MAEX,CAEZ,CAEA,IAAI+C,EAAQoG,EAER5L,GAAS2L,IACXnG,EAAQuG,GAGVJ,EAAgB3L,EAEhB,IAAIkM,EAAU,CAAED,KAAMtR,EAAKsR,KAAMjM,MAAOA,EAAOwF,MAAOA,GAatD,OAVIA,IAAUiG,IACPC,IACHA,EAAkBQ,GAEpBR,EAAgBS,eAAiB,CAAEjJ,OAAQsC,IAG7CkG,EAAkBQ,EAClBT,EAAgBjG,EAET0G,CACT,CAEA,IAAIwO,EAAYnZ,EAEhB,OAAQ0Q,GACN,IAAK,OACHyI,GAAwB7I,EACxB,MAEF,IAAK,OACH6I,GAAwB5I,EACxB,MAEF,QACEG,GAAW,EAGf,IAAI0I,EAAW,CAAE1O,KAAMtP,KAAKC,MAAOoD,MAAO0a,GA+B1C,IAAItO,EAAQxB,EAAMyB,MAAMtB,KACtBC,IAAeP,IAAIH,EAAM,CACvBgC,aAAc,CAAEC,SAAUnQ,EAAcoQ,MAAO,GAC/CC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,GACzCoC,QAASlC,IAAYC,IAAIH,EAAM,CAAC,MAIhCqC,EAAQ/B,EAAMgC,MAAM7B,KACtBC,IAAgBP,IAAIH,EAAM,CACxBmC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAMzCuC,EAASjC,EAAMiC,OAAO9B,KACxBC,IAAiBP,IAAIH,EAAM,CACzBtL,KAAM,SACNoN,MAAOA,EACPO,MAAOA,EACPG,YAAa,QACbC,YAAa,UAIjBF,EAAOG,QAAQC,SAAS3B,IAAI,gBAAiB,kBAE7C,IAAIoB,EAAUG,EAAOvB,IAAI,UAAWd,IAAYC,IAAIH,EAAM,CACxD4C,UAAW,cAIbR,EAAQS,GAAG,WAAW,WACpB,IAAIC,EAAaV,EAAQZ,IAAI,cAC7BsB,EAAW9B,IAAI,OAAQ8B,EAAWtB,IAAI,QACxC,IAGAY,EAAQZ,IAAI,cAAcuB,SAASC,IAAI,QAAQ,SAAUxK,GACvD,OAAI4J,EAAQa,SACHb,EAAQa,SAASC,YAAYhI,MAE/B1C,CACT,IAKA,IAAI2K,EAAY7C,EAAMU,IACpB,aACAN,IAAuBP,IAAIH,EAAM,CAC/BoD,YAAa,aACb9K,OAAQ,MAIR+K,EAAaF,EAAU7C,MAAMyB,MAAMtB,KACrCC,IAAeP,IAAIH,EAAM,CACvBgC,aAAc,CAAEC,SAAUnQ,EAAcoQ,MAAO,GAC/CC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAIzCsD,EAAcH,EAAU7C,MAAMgC,MAAM7B,KACtCC,IAAgBP,IAAIH,EAAM,CACxBmC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAIzCuD,EAAWJ,EAAU7C,MAAMiC,OAAO9B,KACpCC,IAAiBP,IAAIH,EAAM,CACzBwC,YAAa,QACbC,YAAa,OACbX,MAAOuB,EACPhB,MAAOiB,KAMPjT,QA5GJL,eAA6BkS,GAE3B,IAAIsB,QAAiBvT,MAAMvC,iEAAwEoE,EAAe,WAAaoQ,GAC5HhS,MAAKF,eAAOqD,GAAC,aAAYA,EAAEjD,QAAQuJ,IAAI,IACvClJ,OAAM,WAAQ,OAAO,CAAM,IAE9B,GAAI+S,EAAU,CACZnC,EAAgB,EAChBF,EAAgB,GAChBC,EAAkB,GAClB,IAAI/Q,EAAO,GACX,IAAK,IAAIoT,EAAID,EAASxV,OAAS,EAAGyV,GAAK,IAAKA,EAC1CpT,EAAKoQ,KAAKiB,EAAa8B,EAASC,GAAIkE,IAMtC,OAHAtX,EAAKoQ,KAAK4P,GAGHhgB,CACT,CACE,OAAO,CAGX,CAqFiBqT,CAAc9R,GAC3BvB,IACFkS,EAAOlS,KAAKsT,OAAOtT,GACnBkT,EAASlT,KAAKsT,OAAOtT,IAOvBkS,EAAOqB,OAAO1R,GACdoO,EAAMsD,OAAO1R,EAAMA,EAAO,IAE1B4D,KAAKkK,KAAOA,CACd,GAAC,CAAAvK,IAAA,SAAAC,MAED,WAAU,IAAD4a,EAAA,KAEP,MAAQrY,WAAUJ,KAAM/B,KAAKd,MAC7B,IAKIub,GALE/K,OAAMF,KAAIuC,YAAW5Q,aAAY0E,YAAWC,WAAUoK,OAAMU,WAAU5U,eAAcyU,mBAAkBV,cAAakB,gBAAeO,wBAAuBlB,aAAYwB,SAAQF,UAASD,eAAc1B,OAAMtH,cAAaqI,cAAaF,cAAaC,aAAYiB,WAAYhS,KAAKX,MAEpRwG,EAAY,QAAUA,EAAY,IAAM6J,EAAKgL,cAC7C5U,EAAW,QAAUA,EAAW,IAAM0J,EAAGkL,cAKvCD,EADmB,SAAjBze,EACSkT,GAEAvJ,GAGb,IAAIgV,EAAYlc,IAAAC,cAAAD,IAAA6B,SAAA,MAEZoP,EAAO,IAAMF,IAAO,aACtBmL,EAAalc,IAAAC,cAAA,OAAK8B,UAAU,YAC1B/B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,SAAO6B,KAAK,WAAWqa,QAAS9I,EAAQ+I,UAAQ,EAACpa,QAAS,WAAQ+Z,EAAKva,SAAS,CAAE6R,QAASA,GAAU,EAAGjN,MAAO,CAAE8J,OAAQ,aAAqB,IAAClQ,IAAAC,cAAA,SAAG,UAAU,kBAAeD,IAAAC,cAAA,SAAIiT,EAAazT,GAAG,GAAGjB,SAAS,IAAI,QAAQ,WAAQwB,IAAAC,cAAA,SAAIkT,EAAQ,UAAUnT,IAAAC,cAAA,WACrPD,IAAAC,cAAA,SAAO6B,KAAK,WAAWqa,SAAU9I,EAAQ+I,UAAQ,EAACpa,QAAS,WAAQ+Z,EAAKva,SAAS,CAAE6R,QAASA,GAAU,EAAGjN,MAAO,CAAE8J,OAAQ,aAAqB,IAAClQ,IAAAC,cAAA,SAAG,YAAY,gBAAaD,IAAAC,cAAA,SAAG,SAAS,WAAQD,IAAAC,cAAA,SAAIuR,EAAK,SAAS,sBAKxN,IAAI6K,EACFrc,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBqE,MAAO,CAAEtC,MAAO,QAAU9B,QAAS,kBAAM+Z,EAAK3H,YAAYf,EAAO,GAAE,QAC9F9R,KAAKX,MAAMqQ,KAAMgL,cAAgB,OAAU1a,KAAKX,MAAMmQ,GAAIkL,eAG1D,QAAPlL,GAAgBsC,GAAUH,EAAa3T,WAAagU,EAAQhU,aAC9D8c,EAAarc,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBqE,MAAO,CAAEtC,MAAO,SAAW,yDAK1EwP,EAAU/T,WAAa,IACzB8c,EAAarc,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBqE,MAAO,CAAEtC,MAAO,SAAW,6BAC/C,EAAE,IAAEmN,EAAKgL,gBAIxC,IAAI7G,EAAU9C,EACd,OAAQrB,GACN,IAAK,OACHmE,EAAUlL,EACV,MACF,IAAK,OACHkL,EAAU7C,EACV,MACF,IAAK,OACH6C,EAAU/C,EAad,OANIiB,EAAU/T,WAAa6V,IACzBiH,EAAarc,IAAAC,cAAA,UAAQ8B,UAAU,iBAAiBqE,MAAO,CAAEtC,MAAO,SAAW,cAC7DmN,EAAKgL,cAAc,uBAI3Bjc,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,cAAcE,GAAG,kBAC9BjC,IAAAC,cAAA,OAAK8B,UAAU,4BAA4BE,GAAG,cAAcC,KAAK,WAAW,kBAAgB,mBAC1FlC,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,oCAAoC,iBAAe,QAChE/B,IAAAC,cAAA,OAAK8B,UAAU,qBACb/B,IAAAC,cAAA,OAAK8B,UAAU,kCACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAeuB,EAAE,aAAc,CAAE0V,MAAO,UACtDhZ,IAAAC,cAAA,QAAM8B,UAAU,SAAQ,yBAE1B/B,IAAAC,cAAA,OAAK8B,UAAU,6BAEb/B,IAAAC,cAAA,UAAQ8B,UAAU,+CAA+CE,GAAG,WAAW,aAAW,UAAUsN,SAAS,IAAInJ,MAAO,CAAEmI,WAAY,oBAAsB+N,QAAS,SAACxd,GAEpKid,EAAK3T,QAAQ,IAAK2T,EAAKnb,MAAMrD,aAAcwe,EAAKnb,MAAMmH,cAAexE,SAASC,eAAe,YAAYrC,MAC3G,GACEnB,IAAAC,cAAA,UAAQkB,MAAM,OAAM,cACpBnB,IAAAC,cAAA,UAAQkB,MAAM,QAAO,4BACrBnB,IAAAC,cAAA,UAAQkB,MAAM,QAAO,yBAI3BnB,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,+DACb/B,IAAAC,cAAA,OAAK8B,UAAU,+DACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAsBuB,EAAE,UACxCtD,IAAAC,cAAA,MAAI8B,UAAU,mBAAmBR,KAAKX,MAAM8B,WAAW,SAEzD1C,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAqB,eACrC/B,IAAAC,cAAA,MAAI8B,UAAU,0BAA2BR,KAAKX,MAAM+B,QAASkE,QAAQ,GAAG7G,IAAAC,cAAA,KAAG8B,UAAU,6CAEvF/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAsBuB,EAAE,gBACxCtD,IAAAC,cAAA,MAAI8B,UAAU,cAA0C,EAA5BR,KAAKX,MAAM+G,gBAAoBd,QAAQ,GAAG,UAExE7G,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,QAAM8B,UAAU,sBAAsBuB,EAAE,YACxCtD,IAAAC,cAAA,MAAI8B,UAAU,cAAoC,EAAtBR,KAAKX,MAAM8G,UAAcb,QAAQ,GAAG,WAItE7G,IAAAC,cAAA,OAAK8B,UAAU,OAAOE,GAAG,gBAAgBmE,MAAO,CAAErC,OAAQ,QAAS0L,gBAAiB,WAGpFzP,IAAAC,cAAA,UAAQ8B,UAAU,uCAAuCqE,MAAO,CAAEqJ,gBAAiB,SAAWtO,MAAOI,KAAKX,MAAMmH,cAAe2H,SAAUnO,KAAKiH,eAC3IwT,EAASrM,KAAI,SAACC,GAAM,OACnB5P,IAAAC,cAAA,UAAQiB,IAAK0O,EAAO3I,MAAMzI,WAAY2C,MAAOyO,EAAOzO,OAAQyO,EAAO3I,MAAe,KAGrF,MACDjH,IAAAC,cAAA,UAAQ8B,UAAU,uCAAuCqE,MAAO,CAAEqJ,gBAAiB,SAAWtO,MAAOI,KAAKX,MAAMrD,aAAcmS,SAAUnO,KAAKgH,cAC1IvB,GAAQ2I,KAAI,SAACC,GAAM,OAClB5P,IAAAC,cAAA,UAAQiB,IAAK0O,EAAO3I,MAAMzI,WAAY2C,MAAOyO,EAAOzO,OAAQyO,EAAO3I,MAAe,QAQ5FjH,IAAAC,cAAA,OAAK8B,UAAU,8CAA8C,iBAAe,QAC1E/B,IAAAC,cAAA,OAAK8B,UAAU,qBACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OACE+B,QAAS,WAEP,MAAQvF,UAASgJ,kBAAmBsW,EAAKtb,MACzCsb,EAAKva,SAAS,CACZsQ,YAAaxO,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GAC7D/G,UACE/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,OAGA7B,IAAAC,cAAA,SAAO6B,KAAK,SAASG,GAAG,OAAOF,UAAU,oBAAoB8N,YAAY,WACzE7P,IAAAC,cAAA,UACE6B,KAAK,SACLC,UAAU,6BACVC,QAASvG,iBACP,IAAI8gB,EAAWhZ,SAASC,eAAe,QAAQrC,MAC/Cob,EAAW,IAAItjB,GAAUsjB,GAAUjd,UAAU,GAAGG,GAAG,GAQnD,MAAMuH,EAAU,CAAEuT,UAAWgC,GAC7B,IAAIzR,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAFpG,WAEuHhD,EAPxH,GAOyIvK,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAQN,OANAkT,EAAKva,SAAS,CACZsQ,YAAaxO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAClE/G,UAAWzO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAAK,MAAQjQ,EAAErK,aAGjFiD,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,IACGuJ,IACLA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJogB,EAAKva,SAAS,CACZsQ,YAAaxO,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GAC7D/G,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGyB,EAAE,mBAAoB,CAAEwV,eAAe,IAAQ,GAC3D9Y,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,cAIrH7B,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IAIJ,GAEC2B,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,IAC1C,OAET9Y,IAAAC,cAAA,SAAO6B,KAAK,SAASG,GAAG,QAAQF,UAAU,oBAAoB8N,YAAY,WAC1E7P,IAAAC,cAAA,UACE6B,KAAK,SACLC,UAAU,6BACVC,QAASvG,iBACP,IAAI8gB,EAAWhZ,SAASC,eAAe,SAASrC,MAChDob,EAAW,IAAItjB,GAAUsjB,GAAUjd,UAAU,GAAGG,GAAG,GAGnD,IAAImL,EAAS,CAEX,CAAE9I,KAAM,UAAWX,MAAOob,IAK5B,IAAIzR,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASiC,eAAeqE,SAFpG,kBACE,CAAC,EAC6HY,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACxKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAQN,OANAkT,EAAKva,SAAS,CACZsQ,YAAaxO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAClE/G,UAAWzO,EAAE,yBAA0B,CAAEwV,eAAe,IAAQ,GAAK,MAAQjQ,EAAErK,aAGjFiD,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,IACGuJ,IACLA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJogB,EAAKva,SAAS,CACZsQ,YAAaxO,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GAC7D/G,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGyB,EAAE,mBAAoB,CAAEwV,eAAe,IAAQ,GAC3D9Y,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAI2B,EAAE,cAIrH7B,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,IAEJ,GAEC2B,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,OAKzDrX,OAAOC,EAAE,iBAAiBC,MAAM,OAClC,EACA6E,IAAI,kBACJ1C,MAAM,OACN2C,IAAI,wBAENzG,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,MAAI8B,UAAU,gDAAgDuB,EAAE,kBAChEtD,IAAAC,cAAA,QAAM8B,UAAU,wBAAuB,UACvC/B,IAAAC,cAAA,QAAM8B,UAAU,gCAA+B,YAAUR,KAAKX,MAAM8B,WAAW,QAC/E1C,IAAAC,cAAA,KAAG8B,UAAU,cAAcuB,EAAE,yBAKrCtD,IAAAC,cAAA,OAAK8B,UAAU,4BACb/B,IAAAC,cAAA,KAAGsG,KAAK,yCAAyCxE,UAAU,6BAA6BuB,EAAE,yBAMhGtD,IAAAC,cAAA,OAAK8B,UAAU,iCAAiC,iBAAe,QAG7D/B,IAAAC,cAAA,OAAK8B,UAAU,oBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uCACb/B,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAI8B,UAAU,gBAAgBuB,EAAE,iBAAiB,WAGrDtD,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,OAEb/B,IAAAC,cAAA,OAAK8B,UAAU,eAAc,QAC7B/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8D,OAAO,OAAOyC,IAAK,iBAAmBjF,KAAKX,MAAMqQ,KAAO,OAAQxK,IAAI,eAE3EzG,IAAAC,cAAA,OAAK8B,UAAU,QAAQqE,MAAO,CAAEM,YAAa,MAAO8V,aAAc,QAChExc,IAAAC,cAAA,UACEmG,MAAO,CAAEO,MAAO,QAAS8I,gBAAiB,iBAAkBS,OAAQ,UAAWuM,aAAc,yBAC7F1a,UAAU,cACVE,GAAG,qBACHyN,SAAUnO,KAAKwS,0BAEf/T,IAAAC,cAAA,UAAQkB,MAAM,OAAM,QACpBnB,IAAAC,cAAA,UAAQkB,MAAM,QAAO,SACrBnB,IAAAC,cAAA,UAAQkB,MAAM,QAAO,SACrBnB,IAAAC,cAAA,UAAQkB,MAAM,QAAO,WAIzBnB,IAAAC,cAAA,OAAK8B,UAAU,QAAQqE,MAAO,CAAEM,YAAa,QAC3C1G,IAAAC,cAAA,SAAO8B,UAAU,qCAAqCqE,MAAO,CAAEqW,aAAc,yBAA2B3a,KAAK,SAASG,GAAG,aAAaqa,QAAS,kBAAMP,EAAK5K,cAAa,EAAO4K,EAAKnb,MAAMqQ,KAAO,IAAM8K,EAAKnb,MAAMmQ,GAAG,EAAElB,YAAazI,EAAW0I,IAAKvO,KAAKX,MAAMwG,UAAW4I,KAAM,OAKnRhQ,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,eAAc,MAC7B/B,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,OAAK8D,OAAO,OAAOyC,IAAK,iBAAmBjF,KAAKX,MAAMmQ,GAAK,OAAQtK,IAAI,eAEzEzG,IAAAC,cAAA,OAAK8B,UAAU,QAAQqE,MAAO,CAAEM,YAAa,MAAO8V,aAAc,QAChExc,IAAAC,cAAA,UACEmG,MAAO,CAAEO,MAAO,QAAS8I,gBAAiB,iBAAkBS,OAAQ,UAAWuM,aAAc,yBAC7F1a,UAAU,cACVE,GAAG,mBACHyN,SAAUnO,KAAKyS,wBAEfhU,IAAAC,cAAA,UAAQkB,MAAM,QAAO,SACrBnB,IAAAC,cAAA,UAAQkB,MAAM,OAAM,UAKxBnB,IAAAC,cAAA,OAAK8B,UAAU,QAAQqE,MAAO,CAAEM,YAAa,QAE3C1G,IAAAC,cAAA,SAAO8B,UAAU,qCAAqCqE,MAAO,CAAEqW,aAAc,yBAA2B3a,KAAK,SAASG,GAAG,WAAWqa,QAAS,kBAAMP,EAAK5K,cAAa,EAAM4K,EAAKnb,MAAMmQ,GAAK,IAAMgL,EAAKnb,MAAMqQ,KAAK,EAAEpB,YAAaxI,EAAUyI,IAAKvO,KAAKX,MAAMyG,SAAU2I,KAAM,UAQhRhQ,IAAAC,cAAA,OAAK8B,UAAU,wBACZma,EACDlc,IAAAC,cAAA,OAAK8B,UAAU,OAEb/B,IAAAC,cAAA,OAAK8B,UAAU,sBACZsa,IAILrc,IAAAC,cAAA,OAAK8B,UAAU,cAAcqE,MAAO,CAAEsW,eAAgB,kBACpD1c,IAAAC,cAAA,KAAG8B,UAAU,cAAcuB,EAAE,cAAe,CAAEqZ,GAAK9K,EAAY/K,eAAe,YAC9E9G,IAAAC,cAAA,KAAG8B,UAAU,cAAa,SAAOR,KAAKX,MAAMsV,OAAO,YAS3DlW,IAAAC,cAAA,OAAK8B,UAAU,kCAAkC,iBAAe,QAC9D/B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,QAAQqE,MAAO,CAAEO,MAAO,mBAAqBrD,EAAE,UAGjEtD,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oBACb/B,IAAAC,cAAA,SAAO8B,UAAU,gDACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAI8B,UAAU,aAAauB,EAAE,UAC7BtD,IAAAC,cAAA,MAAI8B,UAAU,eAAeuB,EAAE,WAC/BtD,IAAAC,cAAA,MAAI8B,UAAU,eAAeuB,EAAE,YAGnCtD,IAAAC,cAAA,aACED,IAAAC,cAAA,MAAImG,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQ+Z,EAAKnI,YAAa,GACnE5T,IAAAC,cAAA,MAAI8B,UAAU,aAAY,QAC1B/B,IAAAC,cAAA,UAAKsB,KAAKX,MAAMyR,aAChBrS,IAAAC,cAAA,UAAK,IAAIhH,GAAUsI,KAAKX,MAAMyR,YAAc9Q,KAAKX,MAAM8B,WAAanB,KAAKX,MAAMqS,YAAYxT,GAAG,GAAGF,WAAWuH,eAAe,SAAS,UAGtI9G,IAAAC,cAAA,MAAImG,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQ+Z,EAAKlI,WAAY,GAClE7T,IAAAC,cAAA,MAAI8B,UAAU,aAAY,OAC1B/B,IAAAC,cAAA,UAAKsB,KAAKX,MAAM0R,YAChBtS,IAAAC,cAAA,UAAK,IAAIhH,GAAUsI,KAAKX,MAAM0R,WAAa/Q,KAAKX,MAAMqS,YAAYxT,GAAG,GAAGF,WAAWuH,eAAe,SAAS,UAG7G9G,IAAAC,cAAA,MAAImG,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQ+Z,EAAKlI,WAAY,GAClE7T,IAAAC,cAAA,MAAI8B,UAAU,aAAY,QAC1B/B,IAAAC,cAAA,UAAKsB,KAAKX,MAAMsJ,YAAYpD,eAAe,UAC3C9G,IAAAC,cAAA,UAAI,UAGND,IAAAC,cAAA,MAAImG,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQ+Z,EAAKlI,WAAY,GAClE7T,IAAAC,cAAA,MAAI8B,UAAU,aAAY,QAC1B/B,IAAAC,cAAA,UAAKsB,KAAKX,MAAM2R,YAAYzL,eAAe,UAC3C9G,IAAAC,cAAA,UAAI,cAQdD,IAAAC,cAAA,OAAK8B,UAAU,yCACb/B,IAAAC,cAAA,KAAGsG,KAAK,IAAIxE,UAAU,uBAAuBuB,EAAE,SAAStD,IAAAC,cAAA,KAAG8B,UAAU,+BAWrF/B,IAAAC,cAAA,OAAK8B,UAAU,YAEb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,+BAC3B/B,IAAAC,cAAA,MAAI8B,UAAU,iBAAiBR,KAAKX,MAAMiC,QAAQ,YAAUtB,KAAKX,MAAMiC,QAAUtB,KAAKX,MAAM8B,YAAYmE,QAAQ,GAAG,SAErH7G,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oBACb/B,IAAAC,cAAA,SAAO8B,UAAU,yCACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAKqD,EAAE,QACPtD,IAAAC,cAAA,UAAKqD,EAAE,WACPtD,IAAAC,cAAA,UAAKqD,EAAE,kBAGXtD,IAAAC,cAAA,aACGyQ,GAASf,KAAI,SAACiN,GAAM,OACnB5c,IAAAC,cAAA,MAAIiB,IAAK0b,EAAOpL,KAAKhT,YACnBwB,IAAAC,cAAA,UAAKqD,EAAE,eAAgB,CAAEmO,KAAMmL,EAAOpL,QACtCxR,IAAAC,cAAA,UAAM2c,EAAOrX,IAAKsB,QAAQ,GAAG,QAC7B7G,IAAAC,cAAA,MAAI8B,UAAU,iBAAkB6a,EAAOpG,OAAQ3P,QAAQ,GAAG,QAAMvD,EAAE,OAAO,KACtE,UASnBtD,IAAAC,cAAA,OAAK8B,UAAU,SAASE,GAAG,gBACzBjC,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,+CACb/B,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAI8B,UAAU,oBAAoBuB,EAAE,eAAgB,CAAEwV,eAAe,EAAMZ,OAAQ5G,IAAe,GAChGtR,IAAAC,cAAA,UAAQ8B,UAAU,8BAA8BC,QAAS,kBAAM+Z,EAAK1Y,QAAQ,GACzEC,EAAE,eAAgB,CAAEwV,eAAe,IAAQ,GAAG,IAAC9Y,IAAAC,cAAA,KAAG8B,UAAU,yBAEjE/B,IAAAC,cAAA,KAAG8B,UAAU,cAAcuB,EAAE,eAAgB,CAAEwV,eAAe,IAAQ,MAI1E9Y,IAAAC,cAAA,OAAK8B,UAAU,aACZyQ,KAMPxS,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAcuB,EAAE,iBAAiB,IAACtD,IAAAC,cAAA,WAAS,SAA+B,IAAxB8S,GAA6BlM,QAAQ,GAAG,MAAO7G,IAAAC,cAAA,WAE/GD,IAAAC,cAAA,MAAI8B,UAAU,gBAAgBqE,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WAAQuB,SAASC,eAAe,QAAQrC,MAAQ4a,EAAKnb,MAAMyR,YAAa0J,EAAKpI,iBAAiB,CAAE5K,OAAQ,CAAE5H,MAAO4a,EAAKnb,MAAMyR,cAAiB,GAC/M/O,EAAE,kBAAmB/B,KAAKX,MAAMiC,QAAQ,YAAUtB,KAAKX,MAAMiC,QAAUtB,KAAKX,MAAM8B,YAAYmE,QAAQ,GAAG,SAG9G7G,IAAAC,cAAA,OAAK8B,UAAU,aAEb/B,IAAAC,cAAA,SAAG,kBACHD,IAAAC,cAAA,SAAO6B,KAAK,SAASG,GAAG,WAAWuN,aAAcwC,EAAkBnC,YAAamC,EAAmB,QAASlC,IAAK,EAAGE,KAAM,EAAGsM,QAAS7gB,iBACpI,IAAIohB,EAAWvI,SAAS/Q,SAASC,eAAe,YAAYrC,aACtD4a,EAAKva,SAAS,CAAEwQ,iBAAkBgD,MAAM6H,GAAY,EAAIA,IAC9Dd,EAAK1Y,QACP,IAEArD,IAAAC,cAAA,OAAK8B,UAAU,mCAAmCqE,MAAO,CAAE0W,UAAW,OAAQ/Y,OAAQ,QAASgZ,OAAQ,sCAAuCN,aAAc,SAE1Jzc,IAAAC,cAAA,SAAO8B,UAAU,yCAEf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,YACOD,IAAAC,cAAA,WACTD,IAAAC,cAAA,SAAO6B,KAAK,SAASG,GAAG,OAAOuN,aAAc2C,EAAUmK,QAAS/a,KAAKmS,mBAA2B1T,IAAAC,cAAA,WAASD,IAAAC,cAAA,WACzGD,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBC,QAAS,WAAQyP,EAAOA,EAAKuL,QAAQ,CAAEvL,KAAMU,EAAU1H,OAAQvB,WAAY3F,SAASC,eAAe,QAAQrC,MAAOuJ,QAAQ,KAAM,MAAO/M,KAAMG,KAAKC,MAAO2T,IAAKqB,GAAyB,GAAG,cAGhO/S,IAAAC,cAAA,UAAI,YACOD,IAAAC,cAAA,WACTD,IAAAC,cAAA,SAAO6B,KAAK,SAASG,GAAG,OAAOuN,aAAc,EAAG8M,QAAS/a,KAAKoS,uBAMtE3T,IAAAC,cAAA,SAAO8B,UAAU,yCACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAKqD,EAAE,MAAO,CAAEqK,MAAO,MACvB3N,IAAAC,cAAA,UAAKqD,EAAE,cACPtD,IAAAC,cAAA,UAAKqD,EAAE,sBAGXtD,IAAAC,cAAA,aACGwR,EAAK9B,KAAI,SAACgM,GAOT,OALAA,EAAIlR,OAASvB,WAAWyS,EAAIlR,QAC5BkR,EAAIlR,OAASuK,MAAM2G,EAAIlR,SAAWkR,EAAIlR,QAAU,EAAIsR,EAAKnb,MAAMiC,QAAU8Y,EAAIlR,OAC7EkR,EAAIlK,KAAOuD,MAAM2G,EAAIlK,MAAQ,EAAIkK,EAAIlK,KACrCkK,EAAIhe,KAAOqX,MAAM2G,EAAIhe,MAAQG,KAAKC,MAAQ4d,EAAIhe,KAG5CqC,IAAAC,cAAA,MAAIiB,IAAK,iBAAmBya,EAAIlK,KAAO,IAAMkK,EAAIlR,OAAS,IAAMkR,EAAIhe,MAClEqC,IAAAC,cAAA,UAAK0b,EAAIlK,MACTzR,IAAAC,cAAA,UAAK0b,EAAIlR,OAAO,QAAKzK,IAAAC,cAAA,YACd0b,EAAIlR,OAAS/H,GAAYmE,QAAQ,GAAG,QAC3C7G,IAAAC,cAAA,WAAO0b,EAAIlR,OAAS/H,GAAeqQ,EAAwB4I,EAAIlK,KAAQ,MAAO5K,QAAQ,GAAG,QAG/F,UAQZ7G,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,qBAE7B/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,UAAU,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAqCb,EAAM3K,KAAO,SAAU2K,EAAM3K,MACnIiF,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,wBAAwB,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAqCb,EAAMlL,SAAW,SAAUkL,EAAMlL,UACrJwF,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,qBAAqB,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAqCb,EAAMjL,SAAW,SAAUiL,EAAMjL,eAQ5JuF,IAAAC,cAAA,OAAK8B,UAAU,aAAaE,GAAG,gBAC7BjC,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,YACjClC,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,gBACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAeR,KAAKX,MAAMkR,aACxC9R,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,YAAY,kBAAgB,WAG9D/B,IAAAC,cAAA,OAAK8B,UAAU,cACb/B,IAAAC,cAAA,SAAIsB,KAAKX,MAAMmR,eAO3B,IAAC,CA//EU,CAAS5P,aAkgFP4E,qBAAkB6J,IC7xEjC,IAAIxO,GAAa,EACbC,GAAa,KAEX4a,GAAO,SAAAzc,GACZ,SAAAyc,EAAYxc,GAAQ,IAADC,E,MAQmB,OARnBC,YAAA,KAAAsc,G,EAClB,K,EAAAA,E,EAAA,CAAMxc,G,kBAANC,E,iGAEKE,MAAQ,CACZqC,YAAa,IAIdvC,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAAOA,CAEtC,CAAC,OAAAM,YAAAic,EAAAzc,GAAAS,YAAAgc,EAAA,EAAA/b,IAAA,oBAAAC,MAGD,WAAqB,IAADC,EAAA,KACnBmC,SAAS1D,MAAQ,wBAEjBwC,GAAahB,aAAY,WAEpBvD,KAAKC,OAASqE,KAKhBA,GAHIhB,EAAKX,MAAMiD,SAASC,MAGX7F,KAAKC,MAAQ,IAFbD,KAAKC,MAAQ,IAI3BqD,EAAKiC,SAGP,GAAG,IACJ,GAAC,CAAAnC,IAAA,uBAAAC,MAED,WACCG,cAAce,GACf,GAAC,CAAAnB,IAAA,SAAAC,MAGD1F,iBAAgB,IAAD0J,EAAA,KAEd,IAAMzB,YAAanC,KAAKd,MAExB,IAAKiD,EAASC,MAAO,OAErB,IAAIuZ,EAAS,GAEb,IAAK,IAAI3jB,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CAWxC,GAAe,UAVIgI,KAAKd,MAAMiD,SAASyZ,KAAKC,WAAW7b,KAAKd,MAAMgF,eAAgBlM,GAAOsM,OACvFlK,MAAK,SAAC0hB,GACN,GAAIA,EAC4B,OAA/BH,EAAOhR,KAAKoI,SAAS+I,IAAiB,CAExC,IACCnhB,OAAM,WACN,OAAO,CACR,IAGA,KAGF,CAEA,IAAIohB,EAAY,GAEhB,IAAK,IAAI/jB,EAAQ,EAAGA,EAAQ2jB,EAAOzjB,OAAQF,IAAS,CACnD,IAAIqF,QAAa2C,KAAKd,MAAMiD,SAASzI,KAAKsiB,QAAQL,EAAO3jB,IAAQsM,OACjEyX,EAAU/jB,GAASkI,OAAOhF,QAAQuN,QAAQmN,QAAQvY,KAAU2C,KAAKd,MAAMgF,cACxE,CAEA,IAAK,IAAIlM,EAAQ,EAAGA,EAAQ2jB,EAAOzjB,OAAQF,IAAS,CAEnD,IAAIikB,QAAYjc,KAAKd,MAAMiD,SAASzI,KAAKwiB,SAASP,EAAO3jB,IAAQsM,OAE7D6X,QAAiBhiB,MAAMgK,EAAM5L,MAAQ0jB,GAAK7hB,MAAK,SAACqB,GAAU,OAAOA,EAAInB,MAAO,IAAGK,MAAME,QAAQ2C,OACjG2e,EAASC,OAAST,EAAO3jB,GACzB2jB,EAAO3jB,GAASmkB,CAEjB,CAEA,IAAIza,EAAc,GACd2a,EAAa5d,IAAAC,cAAAD,IAAA6B,SAAA,MAEjB,IAAK,IAAItI,EAAQ,EAAGA,EAAQ2jB,EAAOzjB,OAAQF,IASzCqkB,EAPIN,EAAU/jB,GAODyG,IAAAC,cAAAD,IAAA6B,SAAA,MALZ7B,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBC,QAASvG,uBACtC0J,EAAK1E,MAAMiD,SAASyZ,KAAKU,oBAAoBtkB,GAAOukB,MAC3D,GAAG,SAML7a,EAAY1J,GACXyG,IAAAC,cAAA,OAAK8B,UAAU,6BAA6Bb,IAAK,WAAa3H,GAC7DyG,IAAAC,cAAA,OAAK8B,UAAU,QACd/B,IAAAC,cAAA,OAAK8B,UAAU,aACd/B,IAAAC,cAAA,OAAK8B,UAAU,uBACd/B,IAAAC,cAAA,OAAK8B,UAAU,6BACd/B,IAAAC,cAAA,KAAGsG,KAAM2W,EAAO3jB,GAAOwG,MAAOoQ,IAAI,sBAAsBpH,OAAO,UAC9D/I,IAAAC,cAAA,OAAKuG,IAAK0W,EAAO3jB,GAAOwG,MAAO0G,IAAKyW,EAAO3jB,GAAO4G,KAAM4B,UAAU,oBAGpE/B,IAAAC,cAAA,OAAK8B,UAAU,wCACd/B,IAAAC,cAAA,UAAI,IAAEid,EAAO3jB,GAAOokB,OAAO,IAAET,EAAO3jB,GAAO4G,MAC1Cyd,OAURrc,KAAKC,SAAS,CACb0b,OAAQA,EACRja,YAAaA,GAGf,GAAC,CAAA/B,IAAA,SAAAC,MAED,WAEC,OACCnB,IAAAC,cAAAD,IAAA6B,SAAA,KAEC7B,IAAAC,cAAA,OAAK8B,UAAU,wBACd/B,IAAAC,cAAA,OAAK8B,UAAU,mBACd/B,IAAAC,cAAA,OAAK8B,UAAU,gBACd/B,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,KAAG8B,UAAU,QAAO,UAGtB/B,IAAAC,cAAA,OAAK8B,UAAU,8DACd/B,IAAAC,cAAA,MAAI8B,UAAU,cACb/B,IAAAC,cAAA,MAAI8B,UAAU,mBAAkB,sBAChC/B,IAAAC,cAAA,MAAI8B,UAAU,0BAAyB/B,IAAAC,cAAA,KAAGsG,KAAK,gCAAgC4J,IAAI,sBAAsBpH,OAAO,UAAS,cAI5H/I,IAAAC,cAAA,OAAK8B,UAAU,OACbR,KAAKX,MAAMqC,aAKhB,IAAC,CApJW,CAASd,aAuJP4E,qBAAkBkW,I,UCrdjC,MAAMhkB,GAAYH,EAAQ,IAE1B,IAAIogB,GAAgB,qCAChB7W,GAAa,GAEX0b,GAAI,SAAAvd,GAER,SAAAud,EAAYtd,GAAQ,IAADC,E,MAmDsC,OAnDtCC,YAAA,KAAAod,G,EACjB,K,EAAAA,E,EAAA,CAAMtd,G,kBAANC,E,iGAEKE,MAAQ,CACX0G,SAAU,aACV/K,OAAQmE,EAAKD,MAAMgF,eACnB2E,YAAa,EACbjB,WAAY,EACZ6U,GAAI,EACJC,GAAI,EACJC,SAAU,EACVC,OAAQ,aACRC,UAAW,aACXC,cAAe,aACfC,YAAa,GACbC,UAAW,GACXC,eAAgB,KAChBC,iBAAkB,KAClBC,WAAY,EAEZC,YAAa,EACbC,aAAc,IACdC,MAAO,IACPC,OAAQ,MAERC,OAAQ,GAERtN,KAAM,GACNuN,MAAO,KACPC,QAAS,KACTC,QAAS,KAETC,SAAU,EAEVC,OAAQpf,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,yBAIZnB,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAC9BA,EAAKiI,gBAAkBjI,EAAKiI,gBAAgB5H,KAAIL,GAEhDA,EAAK2e,UAAY3e,EAAK2e,UAAUte,KAAIL,GACpCA,EAAK2H,OAAS3H,EAAK2H,OAAOtH,KAAIL,GAG9BA,EAAK4e,QAAU5e,EAAK4e,QAAQve,KAAIL,GAChCA,EAAK6e,OAAS7e,EAAK6e,OAAOxe,KAAIL,GAE9BA,EAAK6H,aAAe7H,EAAK6H,aAAaxH,KAAIL,GAC1CA,EAAK8e,mBAAqB9e,EAAK8e,mBAAmBze,KAAIL,GAEtDA,EAAK+e,gBAAkB/e,EAAK+e,gBAAgB1e,KAAIL,GAAOA,CAGzD,CAAC,OAAAM,YAAA+c,EAAAvd,GAAAS,YAAA8c,EAAA,EAAA7c,IAAA,oBAAAC,MAED1F,iBAA2B,IAAD2F,EAAA,KAExBnE,YAAWxB,iBACT2F,EAAKiC,QACP,GAAG,KAEHhB,GAAW6J,KAAK7K,aAAY,kBAAMD,EAAKqe,iBAAiB,GAAE,MAE1Dpd,GAAW6J,KAAK7K,aAAY,WAE1B,IAAIod,EAAmBnK,SAASlT,EAAKR,MAAM4d,eAAkB1gB,KAAKC,MAAQ,KAE1EqD,EAAKI,SAAS,CACZid,iBAAkBA,EAClBC,WAAaD,EAAmB,OAAU,KAG9C,GAAG,MAEHpc,GAAW6J,KAAK7K,aAAY5F,iBACtB2F,EAAKX,MAAMiD,SAASC,QACtBrC,cAAce,GAAW,IACzBA,GAAW6J,KAAK7K,aAAY,kBAAMD,EAAKiC,QAAQ,GAAE,OAEnDjC,EAAKiC,QACP,GAAG,KAGL,GAAC,CAAAnC,IAAA,uBAAAC,MAED,WAEE,IAAK,IAAI5H,EAAQ,EAAGA,EAAQ8I,GAAW5I,OAAQF,IAC7C+H,cAAce,GAAW9I,GAI7B,GAAC,CAAA2H,IAAA,eAAAC,MAED,SAAa0H,GACX,IAAI1H,EAAQmT,SAASzL,EAAEE,OAAO5H,QAC1B6T,MAAM7T,IAAUA,EAAQ,KAAGA,EAAQ,GACvCI,KAAKC,SAAS,CACZmd,YAAaxd,EACb0d,MAAO1d,EAAQI,KAAKX,MAAMge,cAE9B,GAAC,CAAA1d,IAAA,qBAAAC,MAED,SAAmB0H,GACjB,IAAI1H,EAAQ0H,EAAEE,OAAO5H,MACrBI,KAAKC,SAAS,CACZsd,OAAQ3d,GAEZ,GAAC,CAAAD,IAAA,kBAAAC,MAED,WACE,GAAIkB,GAAW5I,QAAU,EAAG,CAE1B,IAAIsE,GAAM,IAAID,MAAO4hB,UACjBC,EAAape,KAAKX,MAAMue,SAAWphB,EAGnC0T,EAAOmO,KAAKC,MAAMF,EAAU,OAC5BX,EAAQY,KAAKC,MAAOF,EAAU,MAAwB,MACtDV,EAAUW,KAAKC,MAAOF,EAAU,KAAmB,KACnDT,EAAUU,KAAKC,MAAOF,EAAU,IAAkB,KAGpDlO,GADEA,GAAQ,EACI,UAEA,WAGZuN,GAAS,IACXA,EAAQ,IAAMA,GAGZC,GAAW,IACbA,EAAU,IAAMA,GAGdC,GAAW,IACbA,EAAU,IAAMA,GAIdS,EAAa,IACflO,EAAO,GACPuN,EAAQ,KACRC,EAAU,KACVC,EAAU,MAGZ3d,KAAKC,SAAS,CACZiQ,OACAuN,QACAC,UACAC,WAEJ,CACF,GAAC,CAAAhe,IAAA,SAAAC,MAED1F,iBAAgB,IAAD0J,EAAA,KAEb,MAAM,SAACzB,EAAW,KAAM+B,kBAAkBlE,KAAKd,MAE/C,IAAKiD,IAAaA,EAASC,MAAO,OAwBlC,IAAItG,EAAW,EACQ,uCAAnBoI,IACFpI,EAAWiX,eAAgB5Q,EAASxI,KAAK4K,UAAUvE,KAAKd,MAAMgF,gBAAgBI,SAEhF,IAAIqY,EAAW5J,eAAgB5Q,EAASxI,KAAKoP,cAAczE,QACvDsY,EAAS7J,gBAAgB5Q,EAASkS,QAAQuI,SAAStY,QAAQ,IAAM,IAAM,EACvEuY,EAAY9J,eAAe5Q,EAASkS,QAAQkK,YAAYja,QAE5DtE,KAAKC,SAAS,CACZ0c,WACAC,SACAC,cAGF,IAAI2B,EAAY,6DAA+D7B,EAC3E8B,EAAiB3hB,KAAK4hB,kBAAmBvkB,MAAMgK,EAAM5L,MAAQimB,IAAYG,QAEzEd,EAASpf,IAAAC,cAAA,OAAK8B,UAAU,qBAAqBb,IAAK,gBAAkBgd,GACtEle,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,mCACb/B,IAAAC,cAAA,UAAI,WAASie,EAAS,cAExBle,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,OAAKuG,IAAKwZ,EAAejgB,MAAO0G,IAAKuZ,EAAe7f,KAAO,MAAQ6f,EAAe9H,OAAQnW,UAAU,mBAEtG/B,IAAAC,cAAA,UAAQ8B,UAAU,uBAAuBC,QAAS,kBAAMmD,EAAKka,WAAW,GAAG,KAAG,MAAM,IAAE9d,KAAKX,MAAMie,MAAQ,IAAI,OAAK,WAM1Htd,KAAKC,SAAS,CAAE4d,WAEhB,IAAIf,EAAgB/J,eAAe5Q,EAASkS,QAAQuK,eAAeta,QACnEtE,KAAKC,SAAS,CAAEgd,eAAgBH,IAChC,IAAI+B,EAAU/B,EACdA,EAAgB,IAAIvgB,KAAqB,IAAhBugB,GAEzB9c,KAAKC,SAAS,CAAE2d,SAAUd,IAE1B,IAAIgC,EAAUhC,EAAciC,aAExBD,EAAU,KACZA,EAAU,IAAMA,GAGlB9e,KAAKC,SAAS,CACZwc,GAAI3gB,EACJghB,cAAe,OAASA,EAAckC,UAAY,MAAQlC,EAAcmC,WAAa,IAAMH,EAAU,MACrGD,YAIF,IAAIK,EAAWnM,eAAgB5Q,EAASxI,KAAK4K,UAAUL,GAAgBI,SAqBjEkZ,UAAWxd,KAAKX,MAEtB,IAAK,IAAIrH,EAAQ,EAAGA,EAAQknB,EAAUlnB,IAAS,CAE7C,IAAImnB,EAAWpM,eAAgB5Q,EAASxI,KAAKylB,oBAAoBlb,EAAgBlM,GAAOsM,QAEpF2X,QAAY9Z,EAASxI,KAAKuiB,SAASiD,GAAU7a,OAC7C6X,EAAWrf,KAAK4hB,kBAAmBvkB,MAAMgK,EAAM5L,MAAQ0jB,IAAM0C,QAI7DU,EAAS5gB,IAAAC,cAAAD,IAAA6B,SAAA,MAETV,EAAQ,IAAIlI,GAAUqb,eAAe5Q,EAASkS,QAAQiL,SAASH,GAAU7a,SAASvG,WAAW,GAAGG,GAAG,GAAGjB,SAAS,IAE/G2C,EAAQ,IACVyf,EAAU5gB,IAAAC,cAAA,OAAK8B,UAAU,wCACvB/B,IAAAC,cAAA,UAAQ8B,UAAU,mBAAmB,SAAOZ,EAAM,UAItD4d,EAAOxlB,GAELyG,IAAAC,cAAA,OAAK8B,UAAU,QAAQb,IAAK,iBAAmBwf,GAC7C1gB,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,wCACb/B,IAAAC,cAAA,UAAI,WAASygB,IAEf1gB,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,OAAKuG,IAAKkX,EAAS3d,MAAO0G,IAAKiX,EAASvd,KAAO,MAAQud,EAASxF,OAAQnW,UAAU,mBAEnF6e,MAOXrf,KAAKC,SAAS,CACZud,UAGJ,CAIF,GAAC,CAAA7d,IAAA,YAAAC,MAED1F,iBAI4B,QAAtB8F,KAAKX,MAAMke,cACPvd,KAAK+d,QAAQ/d,KAAKX,MAAMke,QAEhCvd,KAAK8G,QAEP,GAAC,CAAAnH,IAAA,SAAAC,MAGD1F,iBAAgB,IAAD+J,EAAA,KAEb,MAAO/I,UAAQgJ,iBAAgB/B,YAAYnC,KAAKd,OACzCke,cAAYE,SAAStd,KAAKX,MAGjC,IAAIkgB,EAAW,IAIXnC,EAAc,IAAGmC,EAAW,KAC5BnC,EAAc,KAAImC,EAAW,KAEjC,IAAIlW,EAAS,CACX,CAAE9I,KAAM,UAAWX,MAAO1E,EAAQuN,QAAQiB,MAAMxF,IAChD,CAAE3D,KAAM,UAAWX,MAAOwd,IAI5B,MAAM3X,EAAU,CAAEuT,UAAW,IAAIthB,GAAU4lB,GAAOvf,UAAU,GAAGG,GAAG,GAAGjB,SAAS,IAAKsiB,SAAUA,GAC7F,IAAIhW,QAAgBrO,EAAQsO,mBAAmBC,qBAAqBvO,EAAQuN,QAAQiB,MAAMvH,EAASkS,QAAQ5L,SAF7F,8BAEgHhD,EAAS4D,EAAQnO,EAAQuN,QAAQiB,MAAMxF,IACjKyF,QAAoBzO,EAAQsO,mBAAmBI,iBAAiBL,EAAQI,YAAa,KACzFA,QAAoBzJ,OAAO2J,SAAS3O,QAAQ8I,IAAI8F,KAAKH,GAClDhP,OAAM,SAAC2M,GAUN,OARArD,EAAKhE,SAAS,CACZ8c,YAAa,QACbC,UAAW1V,EAAErK,aAGfpC,QAAQ2C,MAAM8J,GAEdpH,OAAOC,EAAE,WAAWC,MAAM,SACnB,CACT,IAEEuJ,IACFA,QAAoBzO,EAAQ8I,IAAI+F,mBAAmBJ,GAChDvP,MAAK,WACJ6J,EAAKhE,SAAS,CACZ8c,YAAa,2BACbC,UAAW,oEAEb9c,OAAOC,EAAE,WAAWC,MAAM,QAC1B6D,EAAKnC,QACP,IACCnH,OAAM,SAAC2M,GAQN,OANArD,EAAKhE,SAAS,CACZsQ,YAAa,QACbC,UAAWlJ,EAAErK,aAGfiD,OAAOC,EAAE,WAAWC,MAAM,SACnB,CACT,KAGJJ,KAAK8B,QACP,GAAC,CAAAnC,IAAA,SAAAC,MAED1F,iBAAgB,IAAD+P,EAAA,KAEb,MAAO9H,YAAYnC,KAAKd,OACjB2f,WAAW7e,KAAKX,MAGvB,IAAIud,EAAS7J,eAAe5Q,EAASkS,QAAQC,UAAUhQ,QAEnD+O,EAASN,eAAe5Q,EAASiC,eAAeob,yBAAyBlb,QAEzE/H,KAAKC,OAAoB,IAAVqiB,GAAmBxL,GAAUuJ,EAC9Cza,EAASkS,QAAQ2J,SAASzB,OACvBniB,MAAKF,eAAOqD,GACX1C,QAAQC,IAAIyC,SACN0M,EAAKnI,SACXmI,EAAKhK,SAAS,CACZ8c,YAAa,YACbC,UAAW,oEAEb9c,OAAOC,EAAE,WAAWC,MAAM,OAC5B,IACCzF,OAAM,SAAC2M,GACNzM,QAAQC,IAAIwM,GACZ2C,EAAKhK,SAAS,CACZ8c,YAAa,WACbC,UAAW,qGAEb9c,OAAOC,EAAE,WAAWC,MAAM,OAC5B,KAEFJ,KAAKC,SAAS,CACZ8c,YAAa,cACbC,UAAW,uGAEb9c,OAAOC,EAAE,WAAWC,MAAM,SAG5BJ,KAAK8B,QACP,GAAC,CAAAnC,IAAA,kBAAAC,MAED1F,iBAEE,IAAI+B,QAAe+D,KAAKd,MAAMiD,SAASkS,QAAQhQ,OAAOC,OAOtD,OANArI,EAAS8W,SAAS9W,GAAU,IAAM,EAElC+D,KAAKC,SAAS,CACZ2H,WAAY3L,IAGPA,CAET,GAAC,CAAA0D,IAAA,UAAAC,MAID1F,eAAcmgB,GAEZ,IAAI5C,EACAgI,EACAC,EAEJ,GACO,SADCrF,EAGJ5C,EAAQ,qCACRgI,EAAe,qCACfC,EAAa,qCAUjB,IAAI1H,QAA4BhY,KAAKd,MAAMhE,QAAQ+c,WAAW0H,GAAGlI,GAC7DmI,QAA0B5H,EAAoBzT,UAAUkb,GAAcnb,OAC1Esb,EAAoB7M,SAAS6M,GAC7BA,EAAoB,IAAIloB,GAAUkoB,GAAmB7hB,WAAW,QAAWia,EAAoBG,WAAW7T,QAE1G,IAAIub,QAA8B7f,KAAKd,MAAMhE,QAAQ+c,WAAW0H,GAAGD,GAC/DI,QAA4BD,EAAsBtb,UAAUkb,GAAcnb,OAC9Ewb,EAAsB/M,SAAS+M,GAC/BA,EAAsB,IAAIpoB,GAAUooB,GAAqB/hB,WAAW,QAAW8hB,EAAsB1H,WAAW7T,QAGhH,IAAIoD,EAAQ,IAAIhQ,GAAUkoB,GAAmBG,UAAUD,GAGvDpY,EAAQA,EAAM8L,MAAMxT,KAAKX,MAAM+d,aAAa5J,MAAMxT,KAAKX,MAAMge,cAI7DpU,MAAM,8BAAgCvB,EAAMzK,SAAS,IAAM,WAAa+a,EAAoBpZ,OAAO0F,OAAS,cAAgB0T,EAAoBpZ,OAAO0F,QAGvJ,IAAInC,QAAiBnC,KAAKd,MAAMhE,QAAQ+c,SAAS+H,GAAerI,IAE5DS,QAAeJ,EAAoBzP,UAAUvI,KAAKd,MAAMgF,eAAgByT,IAAerT,OAC3F8T,EAASrF,SAASqF,GAEdA,GAAU,SACNJ,EAAoBiI,QAAQtI,GAAe,kFAAkF4E,OAGrI,IAAIlG,EAActD,SAAS/S,KAAKX,MAAM+d,YAAcpd,KAAKX,MAAMge,aAAe,IAAM,GAEhF6C,EAAW,IAAIxoB,GAAUsI,KAAKX,MAAM8gB,YAAYpiB,UAAWiC,KAAKX,MAAM+gB,cAAenjB,SAAS,IAE9FojB,QAAiBle,EAAS,YAAYkU,EAAa6J,EAAU,CAAClgB,KAAKd,MAAMhE,QAAQuN,QAAQiB,MAAM+N,GAAQzX,KAAKd,MAAMhE,QAAQuN,QAAQiB,MAAMgW,IAAc1f,KAAKd,MAAMgF,eAAiB6O,SAASxW,KAAKC,MAAQ,KAAS,KAAK+f,OAE1N1hB,QAAQC,IAAIulB,EAGd,GAAC,CAAA1gB,IAAA,SAAAC,MAED,WAEE,MAAOud,aAAWU,SAAQ3N,OAAMuN,QAAOC,UAASC,UAASb,gBAAeF,SAAQD,WAAUE,YAAWW,UAAUxd,KAAKX,MAEpH,OACEZ,IAAAC,cAAAD,IAAA6B,SAAA,KAEE7B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,kBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAKuG,IAAI,kCAAkC1C,MAAM,OAAO2C,IAAI,GAAGL,MAAO,CAAEqW,aAAc,WAG1Fzc,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,YAEFD,IAAAC,cAAA,OAAK8B,UAAU,YACb/B,IAAAC,cAAA,OAAK8B,UAAU,6DAEZqd,IAILpf,IAAAC,cAAA,OAAK8B,UAAU,YACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,wBACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,qDACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,MAAI8B,UAAU,mBAAkB,eAAa0P,EAAK,IAAEuN,EAAM,IAAEC,EAAQ,IAAEC,IAExElf,IAAAC,cAAA,OAAKgC,GAAG,gBAEVjC,IAAAC,cAAA,OAAK8B,UAAU,gBAAgBqE,MAAO,CAAE,OAAU,OAAO,aAAa,oCACpEpG,IAAAC,cAAA,OAAK8B,UAAU,iCAAiCqE,MAAO,CAAE,MAASsY,EAAa,IAAK,OAAU,OAAS,WAAc,yBACjJ,UAAa,gCACb,mBAAoB,uJAAyJxc,KAAK,iBAGxJlC,IAAAC,cAAA,SAAIoe,MAIVre,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,wBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,qDACb/B,IAAAC,cAAA,MAAI8B,UAAU,mBAAkB,SAChC/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,MAAI8B,UAAU,aAAaoc,EAAO,QAClCne,IAAAC,cAAA,QAAM8B,UAAU,qCAAoC/B,IAAAC,cAAA,KAAG8B,UAAU,gCAGrE/B,IAAAC,cAAA,OAAKgC,GAAG,gBAIdjC,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,wBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WACxGP,OAAOogB,KAAK,oEAAqE,SACnF,GAEE7hB,IAAAC,cAAA,MAAI8B,UAAU,mBAAkB,YAChC/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,MAAI8B,UAAU,aAAamc,EAAS,KAGxCle,IAAAC,cAAA,OAAKgC,GAAG,qBAIdjC,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,wBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAE8J,OAAQ,WAAalO,QAAS,WACxGP,OAAOogB,KAAK,gEAAkEzD,EAAW,SAC3F,GAEEpe,IAAAC,cAAA,MAAI8B,UAAU,mBAAkB,eAChC/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,MAAI8B,UAAU,aAAa,IAAEqc,KAIjCpe,IAAAC,cAAA,OAAKgC,GAAG,0BAY1BjC,IAAAC,cAAA,OAAK8B,UAAU,aAEb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QAEb/B,IAAAC,cAAA,OAAK8B,UAAU,cAEb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU,cACxB/B,IAAAC,cAAA,SAAG,uIAEDD,IAAAC,cAAA,WAASD,IAAAC,cAAA,YAIXD,IAAAC,cAAA,OAAK8B,UAAU,OACZgd,OAWX/e,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QAEb/B,IAAAC,cAAA,OAAK8B,UAAU,cAEb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU,6BAGxB/B,IAAAC,cAAA,SAAG,uTAEDD,IAAAC,cAAA,WAAUD,IAAAC,cAAA,YAIZD,IAAAC,cAAA,UAAI,kBAAmBD,IAAAC,cAAA,WACvBD,IAAAC,cAAA,UACED,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,mBAAmB,wFAExBD,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,oBAAoB,4FAGzBD,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,wBAAwB,6EAG7BD,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,6BAA6B,qFAKpCD,IAAAC,cAAA,UAAI,uBAEJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,iBAAiB,4DAGtBD,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,qBAAqB,sFAG1BD,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAG,mCAAmC,4GAI1CD,IAAAC,cAAA,KAAG8B,UAAU,eACX/B,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,+GAIpBD,IAAAC,cAAA,KAAG8B,UAAU,eACX/B,IAAAC,cAAA,KAAGsG,KAAK,sEAAsExE,UAAU,mBAAmB,UAAO,iCAA+B,cAQ7J/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,qBAE7B/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,YAAY,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAqCb,EAAM/K,IAAM,SAAU+K,EAAM/K,KACpIqF,IAAAC,cAAA,WACAD,IAAAC,cAAA,SAAG,QAAQ,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,mCAAqCb,EAAMxK,KAAO,SAAUwK,EAAMxK,YAQ7I8E,IAAAC,cAAA,OAAK8B,UAAU,aAAaE,GAAG,UAC7BjC,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,YACjClC,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,gBACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAeR,KAAKX,MAAM0d,aACxCte,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,YAAY,kBAAgB,WAG9D/B,IAAAC,cAAA,OAAK8B,UAAU,cACZR,KAAKX,MAAM2d,cAQ1B,IAAC,CA7tBO,CAASpc,aAguBJ4E,qBAAkBgX,ICtuBjC,MAAM9kB,GAAYH,EAAQ,IAEpBgpB,GAAW,CACf,CAAErX,OAAQ,KAAOyV,KAAM,OACvB,CAAEzV,OAAQ,IAAQyV,KAAM,QACxB,CAAEzV,OAAQ,KAAQyV,KAAM,QACxB,CAAEzV,OAAQ,IAASyV,KAAM,MACzB,CAAEzV,OAAQ,IAASyV,KAAM,OAGrB6B,GAAU,CACd,CAAEtX,OAAQ,IAAMyV,KAAM,MACtB,CAAEzV,OAAQ,IAAMyV,KAAM,MACtB,CAAEzV,OAAQ,IAAMyV,KAAM,MACtB,CAAEzV,OAAQ,IAAOyV,KAAM,OACvB,CAAEzV,OAAQ,IAAOyV,KAAM,QAGzB,IAAI7d,GAEE2f,GAAY,SAAAxhB,GAEhB,SAAAwhB,EAAYvhB,GAAQ,IAADC,E,MAgDoB,OAhDpBC,YAAA,KAAAqhB,G,EACjB,K,EAAAA,E,EAAA,CAAMvhB,G,kBAANC,E,iGAEKE,MAAQ,CAEX0G,SAAU,aACV/K,OAAQ,aACRiB,OAAQ,OACRL,aAAc,GACdC,QAAS,SACTC,SAAU,KACV4kB,SAAU,KACVC,SAAU,OACV5kB,QAAS,EACTC,aAAc,MACd4kB,SAAU,OACVC,QAAS,IAAInpB,GAAU,GACvBsf,UAAW,IAAItf,GAAU,GACzBopB,oBAAqB,GACrBC,iBAAkB,GAClBC,qBAAsB,EACtB/J,kBAAmB,EACnBgK,OAAQ,SACR7jB,KAAM,qBACN8jB,QAASX,GACTpP,UAAU,EACVgQ,QAAQ,EACRC,SAAS,EAETC,gBAAiB,IAAI3pB,GAAU,GAC/B4pB,QAAS,CAAEC,OAAQ,GAAIC,UAAW,IAElCrlB,UAAU,GAIZgD,EAAKsiB,oBAAsBtiB,EAAKsiB,oBAAoBjiB,KAAIL,GACxDA,EAAKuiB,mBAAqBviB,EAAKuiB,mBAAmBliB,KAAIL,GAEtDA,EAAKwiB,aAAexiB,EAAKwiB,aAAaniB,KAAIL,GAE1CA,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAE9BA,EAAKyiB,SAAWziB,EAAKyiB,SAASpiB,KAAIL,GAClCA,EAAK0iB,gBAAkB1iB,EAAK0iB,gBAAgBriB,KAAIL,GAChDA,EAAK2iB,gBAAkB3iB,EAAK2iB,gBAAgBtiB,KAAIL,GAEhDA,EAAK2e,UAAY3e,EAAK2e,UAAUte,KAAIL,GACpCA,EAAK2H,OAAS3H,EAAK2H,OAAOtH,KAAIL,GAAOA,CAEvC,CAAC,OAAAM,YAAAghB,EAAAxhB,GAAAS,YAAA+gB,EAAA,EAAA9gB,IAAA,oBAAAC,MAED1F,iBAA2B,IAAD2F,EAAA,KAExB,MAAQkC,KAAM/B,KAAKd,MAEnB8C,SAASC,eAAe,UAAUC,UAAYH,EAAE,eAGhDrG,YAAW,WACTmE,EAAKiC,QACP,GAAG,KAEHhB,GAAahB,aAAY,WACvBD,EAAKiC,QAEP,GAAG,IAEL,GAAC,CAAAnC,IAAA,uBAAAC,MAED,WACEG,cAAce,GAChB,GAAC,CAAAnB,IAAA,qBAAAC,MAED,SAAmB6H,GACjB,IAAIuL,EAAOvL,EAAMD,OAAO5H,MACxBI,KAAKC,SAAS,CACZrE,aAAcoX,GAElB,GAAC,CAAArT,IAAA,sBAAAC,MAED1F,eAA0BuN,GACxB,IAAIuL,EAAQvL,EAAMD,OAAO5H,MAAOmiB,cAC5BC,EAAM,IAEVhgB,SAASC,eAAe,WAAWrC,MAAQoT,GAEvCA,EAAK1a,MAAM,KAAKJ,OAAS,GAAK8a,EAAK1a,MAAM,QAAQJ,OAAS,KAC5D8pB,EAAM,MAGJhP,EAAK1a,MAAM,KAAKJ,OAAS,GAAK8a,EAAK1a,MAAM,OAAOJ,OAAS,KAC3D8pB,EAAM,WAGFhiB,KAAKC,SAAS,CAClBlE,QAASgX,SAASC,GAClBhX,aAAcgmB,EACdpB,SAAU7N,SAASC,GAAQgP,IAG7BhiB,KAAK6hB,iBAGP,GAAC,CAAAliB,IAAA,eAAAC,MAED,SAAasJ,GAEX,IAAMrN,WAAYmE,KAAKX,MAEnBqhB,EAAW,KACC,cAAZ7kB,IACF6kB,EAAW,KAGb1gB,KAAKC,SAAS,CAAEygB,aAEhB,IAAI5kB,EAAW,EACf,GAAIoN,EAAQ,CACVpN,EAAWoN,EACX,IACElH,SAASC,eAAe,UAAUrC,MAAQsJ,CAE5C,CAAE,MAAO5B,GACPzM,QAAQC,IAAIwM,EACd,CAEF,MACE,IACExL,EAAWkG,SAASC,eAAe,UAAUrC,KAE/C,CAAE,MAAO0H,GACPzM,QAAQC,IAAIwM,EACd,CAYF,OARAxL,EAAWiX,SAASjX,IAEhBiX,SAASjX,GAAY4kB,GAAYjN,MAAM3X,MACzCA,EAAW4kB,GAGb1gB,KAAKC,SAAS,CAAEnE,aAETA,CAET,GAAC,CAAA6D,IAAA,SAAAC,MAED1F,iBACE,IAAMknB,WAAYphB,KAAKX,YAEjBW,KAAK8hB,kBAEX,IAAIG,EAAMjgB,SAASkgB,SAASld,KAC5B,IAAKid,EAAInM,QAAQ,UAAY,GAAKmM,EAAInM,QAAQ,OAAS,IAAMsL,EAAS,CACpE,IAGIY,EAFAG,EADYF,EAAI3pB,MAAM,KAAK,GACXA,MAAM,KACtBoT,EAAM,CAAC,EAGX,IAAK,IAAIiC,EAAI,EAAGyU,EAAID,EAAIjqB,OAAQyV,EAAIyU,EAAGzU,IACrCqU,EAAMG,EAAIxU,GAAGrV,MAAM,KACnBoT,EAAIsW,EAAI,IAAMK,SAASC,UAAUN,EAAI,KAIvC,GAAIjP,SAASrH,EAAY,SAAM,KAAO,CACpC,IAAI5P,EAAWiX,SAASrH,EAAY,QAChC7P,EAAU,SACV+kB,EAAW,YACSzoB,IAApBuT,EAAc,WAChB7P,EAAU6P,EAAc,UAIxB7P,EADc,SAAZA,GAAkC,cAAZA,EACd,YAEA,cAGY1D,IAApBuT,EAAc,WAChBkV,EAAWlV,EAAc,gBAIrB1L,KAAKC,SAAS,CAClBnE,WACAD,UACAG,aAAc,IACdD,QAAS,IACT6kB,WACAQ,SAAS,IAGXphB,KAAK2hB,aAAa7lB,GAElBkE,KAAK8d,WACP,MAEmB3lB,IAAfuT,EAAS,WACL1L,KAAKC,SAAS,CAAE9D,SAAUuP,EAAS,KAG7C,CAEA1L,KAAK6hB,iBAEP,GAAC,CAAAliB,IAAA,WAAAC,MAED1F,iBAEE,IAAMiX,WAAUgQ,UAAWnhB,KAAKX,MAE5BqO,GAAW,EACf,MAAM6U,EAAM3qB,yCAmBZ,GAjBA8V,QAAiBvT,MAAMooB,GACpBnoB,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBK,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,IACL,CACT,IAEF6J,EAAWzD,EAASqJ,UACpBoK,EAASzT,EAASqJ,UAElBrJ,QAAiBvT,MAAMooB,EAAM,aAC1BnoB,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IACpBK,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,IACL,CACT,KAEGoG,EAAU,OAAO,EAEtB,IAAIqT,EAAmB,CACrB,CACEH,SAAU,OACV7J,UAAWrJ,EAASsJ,UAAU,GAAGD,WAEnC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASsJ,UAAU,GAAGD,WAEnC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASsJ,UAAU,GAAGD,WAEnC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASsJ,UAAU,GAAGD,WAEnC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASsJ,UAAU,GAAGD,WAEnC,CACE6J,SAAU,MACV7J,UAAWrJ,EAASsJ,UAAU,GAAGD,YAKjC+J,EAAsB,CACxB,CACEF,SAAU,OACV7J,UAAWrJ,EAASmT,QAAQ,GAAG9J,WAEjC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASmT,QAAQ,GAAG9J,WAEjC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASmT,QAAQ,GAAG9J,WAEjC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASmT,QAAQ,GAAG9J,WAEjC,CACE6J,SAAU,KACV7J,UAAWrJ,EAASmT,QAAQ,GAAG9J,WAEjC,CACE6J,SAAU,MACV7J,UAAWrJ,EAASmT,QAAQ,GAAG9J,YAI/B6J,EAAW5e,SAASC,eAAe,WAAWrC,MAClDI,KAAKC,SAAS,CAAE2gB,aAEhB,IAAI5J,EAAY+J,EAAiB5G,MAAK,SAAAC,GAAG,OAAIA,EAAIwG,WAAaA,CAAQ,IACtE5J,EAAY,IAAItf,GAAUsf,EAAUD,WACpC/W,KAAKC,SAAS,CAAE+W,cAEhB,IAAI6J,EAAUC,EAAoB3G,MAAK,SAAAC,GAAG,OAAIA,EAAIwG,WAAaA,CAAQ,IAavE,OAZAC,EAAU,IAAInpB,GAAUmpB,EAAQ9J,WAChC/W,KAAKC,SAAS,CAAE4gB,YAEhB7gB,KAAKC,SAAS,CACZ6gB,sBACAC,mBACAC,qBAAsBtT,EAASsT,qBAC/B/J,kBAAmBvJ,EAASuJ,kBAC5B9F,WACAgQ,WAGKhQ,CACT,GAAC,CAAAxR,IAAA,kBAAAC,MAED1F,uBAEQ8F,KAAK4hB,WAEX,IAAMN,UAASV,WAAU/kB,WAAYmE,KAAKX,MAItCqO,QAAiBvT,MAFXvC,mDAEsB,CAC9BsF,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAGjB/C,MAAKF,eAAOqD,GAAC,aAAWA,EAAEjD,MAAM,IAChCK,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,IACL,CACT,IAGEoG,IACF4T,EAAgB,OAAI,CAClB,CACEV,SAAU,OACV4B,GAAI,IAAI9qB,GAAUgW,EAAS+U,qBAAqB1kB,UAAU,GAAGG,GAAG,GAAGF,YAErE,CACE4iB,SAAU,KACV4B,GAAI,IAAI9qB,GAAUgW,EAASgV,kBAAkB3kB,UAAU,GAAGG,GAAG,GAAGF,YAElE,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASiV,qBAAqB5kB,UAAU,GAAGG,GAAG,GAAGF,YAErE,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASkV,0BAA0B7kB,UAAU,GAAGG,GAAG,GAAGF,YAE1E,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASkV,0BAA0B7kB,UAAU,GAAGG,GAAG,GAAGF,YAE1E,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASkV,0BAA0B7kB,UAAU,GAAGG,GAAG,GAAGF,YAE1E,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASkV,0BAA0B7kB,UAAU,GAAGyV,MAAM,EAAI,GAAGtV,GAAG,GAAGF,YAEvF,CACE4iB,SAAU,KACV4B,GAAI,IAAI9qB,GAAUgW,EAASkV,0BAA0B7kB,UAAU,GAAGyV,MAAM,GAAK,GAAGtV,GAAG,GAAGF,YAExF,CACE4iB,SAAU,KACV4B,GAAI,IAAI9qB,GAAUgW,EAASkV,0BAA0B7kB,UAAU,GAAGyV,MAAM,IAAQtV,GAAG,GAAGF,aAI1FsjB,EAAmB,UAAI,CACrB,CACEV,SAAU,OACV4B,GAAI,IAAI9qB,GAAUgW,EAASmV,mBAAmBrP,MAAM,KAAMtV,GAAG,GAAGF,YAElE,CACE4iB,SAAU,KACV4B,GAAI,IAAI9qB,GAAUgW,EAASoV,gBAAgBtP,MAAM,KAAMtV,GAAG,GAAGF,YAE/D,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASqV,mBAAmBvP,MAAM,KAAMtV,GAAG,GAAGF,YAElE,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASqV,mBAAmBvP,MAAM,KAAMtV,GAAG,GAAGF,YAElE,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASsV,wBAAwBxP,MAAM,KAAMtV,GAAG,GAAGF,YAEvE,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASsV,wBAAwBxP,MAAM,KAAMtV,GAAG,GAAGF,YAEvE,CACE4iB,SAAU,IACV4B,GAAI,IAAI9qB,GAAUgW,EAASsV,wBAAwBxP,MAAM,KAAMA,MAAM,EAAI,GAAGtV,GAAG,GAAGF,YAEpF,CACE4iB,SAAU,KACV4B,GAAI,IAAI9qB,GAAUgW,EAASsV,wBAAwBxP,MAAM,KAAMA,MAAM,GAAK,GAAGtV,GAAG,GAAGF,YAErF,CACE4iB,SAAU,KACV4B,GAAI,IAAI9qB,GAAUgW,EAASsV,wBAAwBxP,MAAM,KAAMA,MAAM,IAAQtV,GAAG,GAAGF,aAIvFgC,KAAKC,SAAS,CAAEqhB,aAGlB,IAAI2B,EAAY3B,EAAQzlB,GAExB,GAAIonB,EAAU/qB,OAAS,EAAG,CAExB,MAAMgrB,EAAaD,EAAU9I,MAAK,SAAAzS,GAAK,OAAIA,EAAMkZ,WAAaA,CAAQ,SACnDzoB,IAAf+qB,GACFljB,KAAKC,SAAS,CAAEohB,gBAAiB6B,EAAWV,IAEhD,CAEA,OAAOlB,CACT,GAAC,CAAA3hB,IAAA,kBAAAC,MAED1F,iBAEE,IAAM6H,KAAM/B,KAAKd,MAEjBc,KAAK8hB,kBAEL,IAAMjmB,UAAS6kB,WAAUzkB,SAAQ2kB,YAAa5gB,KAAKX,MAE/CvD,EAAWkE,KAAK2hB,eAEhBlnB,GAAK,EAELmmB,EAAS9K,QAAQ,MAAQ,KAEvB/C,SAAS6N,EAAS,IAAM,GAAK7N,SAAS6N,EAAS,IAAM,MACvD5gB,KAAKC,SAAS,CACZghB,OAAQlf,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GACxDna,KAAM2E,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,KAGxD9c,GAAK,EAELyF,OAAOC,EAAE,iBAAiBC,MAAM,SAGlCwgB,EAAWA,EAAStoB,MAAM,KAAK,IAI7BsoB,EAAS9K,QAAQ,MAAQ,IAEG,IAA1B/C,SAAS6N,EAAS,MACpB5gB,KAAKC,SAAS,CACZghB,OAAQlf,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GACxDna,KAAM2E,EAAE,sBACRhG,QAAS,MAGXtB,GAAK,EAELyF,OAAOC,EAAE,iBAAiBC,MAAM,SAGlCwgB,EAAW,MAITA,EAAS9K,QAAQ,MAAQ,IAEG,IAA1B/C,SAAS6N,EAAS,MACpB5gB,KAAKC,SAAS,CACZghB,OAAQlf,EAAE,oBAAqB,CAAEwV,eAAe,IAAQ,GACxDna,KAAM2E,EAAE,sBACRhG,QAAS,MAGXtB,GAAK,EAELyF,OAAOC,EAAE,iBAAiBC,MAAM,SAGlCwgB,EAAW,QAIb,IAAIqC,EAAYjjB,KAAKX,MAAMiiB,QAAQzlB,GAEnC,GAAIpB,GAAMwoB,EAAU/qB,OAAS,EAAG,CAE9B,MAAMgrB,EAAaD,EAAU9I,MAAK,SAAAzS,GAAK,OAAIA,EAAMkZ,WAAaA,CAAQ,IAEtE3kB,EAAS,IAAIvE,GAAUwrB,EAAWV,IAAIhP,MAAM1X,GAE5CG,EAASA,EAAOsa,KAAK,GAErBta,EAASA,EAAO8B,WAAW,GAAGG,GAAG,GAEjC8B,KAAKC,SAAS,CAAEohB,gBAAiB6B,EAAWV,KAExCzP,SAASjX,IAAa4kB,GACxB1gB,KAAKC,SAAS,CAAE0gB,SAAU1kB,GAG9B,MACEA,EAAS,QAQX,OAJA+D,KAAKC,SAAS,CACZhE,OAAQA,IAGHA,CACT,GAAC,CAAA0D,IAAA,YAAAC,MAED1F,iBAAmB,IAAD0J,EAAA,KAChB,MAAQ7B,KAAM/B,KAAKd,YAEbc,KAAK4hB,WAEX,IAAMhmB,eAAcE,WAAUC,UAASC,eAAcH,UAASsV,WAAUgQ,SAAQnK,YAAW6J,UAAS5J,oBAAmB+J,wBAAyBhhB,KAAKX,OAC/I6E,iBAAgBhJ,UAASioB,QAASnjB,KAAKd,MAE7C,IAAKiS,IAAagQ,EAQhB,OAPAnhB,KAAKC,SAAS,CACZghB,OAAQkC,EAAKphB,EAAE,uBAAwB,CAAEwV,eAAe,IAAQ,GAChEna,KAAOqB,IAAAC,cAAA,YAAOykB,EAAKphB,EAAE,uBAAwB,CAAEwV,eAAe,IAAQ,WAIxErX,OAAOC,EAAE,iBAAiBC,MAAM,QAK9B4W,EAAUhZ,WAAiC,KAApBiZ,IACzB9F,GAAW,EAEK,WAAZtV,IACFmE,KAAKC,SAAS,CACZghB,OAAQxiB,IAAAC,cAAAD,IAAA6B,SAAA,KAAGyB,EAAE,qBAAsB,CAAEwV,eAAe,IAAQ,IAC5Dna,KAAMqB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,IAAC7B,IAAAC,cAAA,OAAKuG,IAAI,qCAAqCC,IAAI,kBAAkBL,MAAO,CAAEqW,aAAc,OAAQ3Y,MAAO,UAAgB,IAAC9D,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAUqD,EAAE,qBAAsB,CAAEwV,eAAe,IAAQ,MAG1MrX,OAAOC,EAAE,iBAAiBC,MAAM,UAKhCygB,EAAQ7iB,WAAoC,KAAvBgjB,IACvBG,GAAS,EACO,WAAZtlB,IACFmE,KAAKC,SAAS,CACZghB,OAAQlf,EAAE,qBAAsB,CAAEwV,eAAe,IAAQ,GACzDna,KAAM2E,EAAE,qBAAsB,CAAEwV,eAAe,IAAQ,KAGzDrX,OAAOC,EAAE,iBAAiBC,MAAM,UAIpC,IAAIgjB,SAAepjB,KAAK6hB,mBAAmB7jB,WAE3C,GAAIyV,MAAM2P,GAOR,OANApjB,KAAKC,SAAS,CACZghB,OAAQ,QACR7jB,KAAM,gDAGR8C,OAAOC,EAAE,iBAAiBC,MAAM,QAUlC,GANqB,KAAjBxE,GAAwBV,EAAQmoB,UAAUznB,IAC5CoE,KAAKC,SAAS,CACZrE,aAAcsI,IAIdyD,WAAWyb,GAAS,IAAI1rB,SAAgBwD,EAAQ8I,IAAI+P,WAAW7P,IAAiBnG,WAAW,GAAGC,WAQhG,OAPAgC,KAAKC,SAAS,CACZghB,OAAQkC,EAAKphB,EAAE,sBAAuB,CAAEwV,eAAe,IAAQ,GAC/Dna,KAAOqB,IAAAC,cAAA,YAAOykB,EAAKphB,EAAE,sBAAuB,CAAEwV,eAAe,IAAQ,WAIvErX,OAAOC,EAAE,iBAAiBC,MAAM,QAYlC,GANqB,KAAjBxE,GAAwBV,EAAQmoB,UAAUznB,IAC5CoE,KAAKC,SAAS,CACZrE,aAAcsI,IAIG,uCAAjBtI,EAWF,OAVAoE,KAAKC,SAAS,CACZghB,OAAQkC,EAAKphB,EAAE,uBAAwB,CAAEwV,eAAe,IAAQ,GAChEna,KAAOqB,IAAAC,cAAA,YACJykB,EAAKphB,EAAE,uBAAwB,CAAEwV,eAAe,IAAQ,GACzD9Y,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQ8B,UAAU,iBAAiB,kBAAgB,SAAQ,cAI/DN,OAAOC,EAAE,iBAAiBC,MAAM,QAKlC,GAAgB,WAAZvE,GACF,GAAIC,EAAWkb,EAAUhZ,WAOvB,OANAgC,KAAKC,SAAS,CACZghB,OAAQ,QACR7jB,KAAM,0FAGR8C,OAAOC,EAAE,iBAAiBC,MAAM,aAIlC,GAAItE,EAAW+kB,EAAQ7iB,WAOrB,OANAgC,KAAKC,SAAS,CACZghB,OAAQ,QACR7jB,KAAM,0FAGR8C,OAAOC,EAAE,iBAAiBC,MAAM,QAOpCJ,KAAKC,SAAS,CACZghB,OAAQxiB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,6BACVlD,KAAOqB,IAAAC,cAAA,YACLD,IAAAC,cAAA,SAAG,SAAS,IAAE5C,EAAW,IAAMD,EAAU,IAAME,EAAUC,EAAayC,IAAAC,cAAA,WACtED,IAAAC,cAAA,SAAG,SAAS,IAAE0kB,EAAM,OAAI3kB,IAAAC,cAAA,WACxBD,IAAAC,cAAA,SAAG,QAAQ,IAAEsB,KAAKX,MAAMzD,aAAa6C,IAAAC,cAAA,WACrCD,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,iBAAiBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAG,UAAO3B,IAAAC,cAAA,KAAG8B,UAAU,oBAChI,IACD/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAAkBC,QAAS,WAAQmD,EAAKkD,OAAOhL,EAAUC,EAASC,EAAcH,EAASD,EAAcwnB,EAAO,GAAG,WAAQ3kB,IAAAC,cAAA,KAAG8B,UAAU,wBAI1KN,OAAOC,EAAE,iBAAiBC,MAAM,OAGlC,GAAC,CAAAT,IAAA,SAAAC,MAED1F,iBAAgB,IAAD+J,EAAA,KAEb,IAAMnI,WAAUC,UAASC,eAAcH,UAASD,eAAcK,SAAQE,YAAa6D,KAAKX,MAExF,MAAM4P,EAAaxQ,IAAAC,cAAA,OAAKuG,IAAI,sBAAsBzC,OAAO,OAAO0C,IAAI,eAEpElF,KAAKC,SAAS,CACZghB,OAAQxiB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,uBAAqB2O,GAC/B7R,KAAMqB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,sDAGVJ,OAAOC,EAAE,iBAAiBC,MAAM,QAEhC,MAAMgZ,QAA4BpZ,KAAKd,MAAMhE,QAAQsO,mBAAmB6P,QAAQzhB,qCAAkCoI,KAAKd,MAAMhE,QAAQoB,MAAML,GAAS+D,KAAKd,MAAMgF,gBAEzJhI,QAA0BgE,OAAOhF,QAAQ8I,IAAI8F,KAAKsP,GACrDze,OAAM,SAAC2M,GAUN,OATArD,EAAKhE,SAAS,CACZsQ,YAAa,qBACbC,UAAW/R,IAAAC,cAAAD,IAAA6B,SAAA,KAAGgH,EAAErK,WACdwB,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WACVD,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,iBAAiBC,QAAS,WAAQP,OAAOC,EAAE,iBAAiBC,MAAM,OAAQ,GAAG,YAIjHF,OAAOC,EAAE,iBAAiBC,MAAM,SACzB,CACT,IAEF,IAAKlE,EAAqB,OAAO,EAEjC8D,KAAKC,SAAS,CACZghB,OAAQxiB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,iCAA+B2O,GACzC7R,KAAM,6FAGR,IAAIkc,QAAkBnV,EAAMxI,aAAaC,EAAcC,EAASC,EAAUC,EAASC,EAAcC,EAAQC,EAAmBC,GAExHmd,EAAU7b,QAEZuC,KAAKC,SAAS,CACZghB,OAAQ,yBACR7jB,KAAMqB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,wCAAqC7B,IAAAC,cAAA,WAAUD,IAAAC,cAAA,WAAU,IAACD,IAAAC,cAAA,UAAQ6B,KAAK,SAAS,kBAAgB,QAAQC,UAAU,mBAAkB,iBAG9IN,OAAOC,EAAE,iBAAiBC,MAAM,UAIhCvF,QAAQC,IAAIwe,GAEZtZ,KAAKC,SAAS,CACZghB,OAAQ,kBACR7jB,KAAM,iBAAmBkc,EAAU5b,KAAO,MAAQ4b,EAAU1b,MAG9DsC,OAAOC,EAAE,iBAAiBC,MAAM,QAIpC,GAAC,CAAAT,IAAA,SAAAC,MAED,WAAU,IAADqK,EAAA,KACP,MAAOlI,KAAK/B,KAAKd,MACjB,IAAMmiB,kBAAiBH,UAASrlB,UAASmb,YAAW6J,WAAY7gB,KAAKX,MAErE,MAAMikB,EAAgBpC,EAAQ9S,KAAI,SAAA8S,GAAO,OAAIziB,IAAAC,cAAA,UAAQiB,IAAK,OAASuhB,EAAQvC,KAAMje,GAAG,MAAMH,KAAK,SAASC,UAAU,kBAChHqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAK0X,aAAaT,EAAQhY,QAASe,EAAKnI,QAAS,GAAIof,EAAQvC,KAAc,IAEzH,IAAI6E,EAAQ/kB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,mBAAiBugB,EAAQ5jB,SAAS,IAAIkM,QAAQ,wBAAyB,MACjFgU,EAAkC,IAArB0D,EAAQ7iB,WAAmBgC,KAAKX,MAAM2hB,qBAEvC,WAAZnlB,IACF2nB,EAAQ/kB,IAAAC,cAAAD,IAAA6B,SAAA,KAAE,gBAAc0W,EAAU/Z,SAAS,IAAIkM,QAAQ,wBAAyB,MAChFgU,EAAoC,IAAvBnG,EAAUhZ,WAAmBgC,KAAKX,MAAM4X,mBAGnDxD,MAAM0J,KAAaA,EAAa,GAGpC,IAAIsG,EAAWhlB,IAAAC,cAAAD,IAAA6B,SAAA,KACb7B,IAAAC,cAAA,KAAG8B,UAAU,WAAWgjB,EAAM,KAAG,IAAI9rB,GAAUylB,GAAYjf,GAAG,GAAGjB,SAAS,IAAI,MAC9EwB,IAAAC,cAAA,OAAK8B,UAAU,WAAWqE,MAAO,CAAE0e,OAAQ,MAAOrV,gBAAiB,cACjEzP,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,cAAckE,MAAO,CAAE,MAASsY,EAAa,KAC9E,gBAAeA,EAAY,gBAAc,IAAI,gBAAc,UASjE,OAAQ1e,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,QAEb/B,IAAAC,cAAA,OAAK8B,UAAU,yBACb/B,IAAAC,cAAA,UAAKqD,EAAE,oBAGTtD,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,UAAI,UAAQsB,KAAKX,MAAMxD,UAEzB4C,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,OAAK8B,UAAU,iCACb/B,IAAAC,cAAA,OAAK8B,UAAU,YAAYG,KAAK,SAC9BlC,IAAAC,cAAA,UAAQgC,GAAG,gBAAgBH,KAAK,SAC9BC,UAAU,kCACV,iBAAe,WAAW,gBAAc,SAAQ,YAGlD/B,IAAAC,cAAA,MAAI8B,UAAU,gBAAgB,kBAAgB,iBAC5C/B,IAAAC,cAAA,MAAI+B,QAASvG,uBACL+P,EAAKhK,SAAS,CAClBnE,SAAU,KACVD,QAAS,SACTqlB,QAASX,KAGXtW,EAAK0X,aAAa,YAEZ1X,EAAKnI,QAEb,GACErD,IAAAC,cAAA,UAAQ8B,UAAU,iBAAiB,WAGrC/B,IAAAC,cAAA,MAAI+B,QAASvG,uBACL+P,EAAKhK,SAAS,CAClBnE,SAAU,IACVD,QAAS,YACTqlB,QAASV,KAEXvW,EAAK0X,aAAa,WACZ1X,EAAKnI,QAEb,GACErD,IAAAC,cAAA,UAAQ8B,UAAU,iBAAiB,kBAQ7C/B,IAAAC,cAAA,QAAM8B,UAAU,SAAStD,OAAO,GAAGwmB,OAAO,IACxCjlB,IAAAC,cAAA,OAAK8B,UAAU,cACf/B,IAAAC,cAAA,SAAO6B,KAAK,SAASC,UAAU,eAAe5B,KAAK,SAASgB,MAAM,YACjE6jB,EAEDhlB,IAAAC,cAAA,OAAK8B,UAAU,qEACb/B,IAAAC,cAAA,KAAGmG,MAAO,CAAE,UAAa,OAAQ,YAAe,QAAUrE,UAAU,WAAU,UAC9E/B,IAAAC,cAAA,SAAOmG,MAAO,CAAE,UAAa,MAAO2W,OAAQ,oBAAsB9a,GAAG,SAAS9B,KAAK,aAAa2B,KAAK,OAAOwa,QAAS,kBAAM9Q,EAAK4X,iBAAiB,EAAErhB,UAAU,oBAAoB8N,YAAatO,KAAKX,MAAMqhB,YAG3MjiB,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oCACZ8iB,IAIL7kB,IAAAC,cAAA,OAAK8B,UAAU,qEACb/B,IAAAC,cAAA,KAAGmG,MAAO,CAAE,UAAa,OAAQ,YAAe,QAAUrE,UAAU,WAAU,YAC9E/B,IAAAC,cAAA,SAAOmG,MAAO,CAAE,UAAa,MAAO2W,OAAQ,mBAAoB7M,OAAQ,eAAiBjO,GAAG,UAAUijB,UAAQ,EAACpjB,KAAK,OAAOC,UAAU,oBAAoB2N,SAAUnO,KAAKyhB,oBAAqBnT,YAAa,6BAA8BL,aAAa,OAAO4M,UAAQ,KAGtQpc,IAAAC,cAAA,OAAK8B,UAAU,qBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oCACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAC9BqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAKwX,oBAAoB,CAAEja,OAAQ,CAAE5H,MAAO,SAAY,GAAG,QACzGnB,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAC9BqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAKwX,oBAAoB,CAAEja,OAAQ,CAAE5H,MAAO,OAAU,GAAG,MACvGnB,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAC9BqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAKwX,oBAAoB,CAAEja,OAAQ,CAAE5H,MAAO,OAAU,GAAG,MACvGnB,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAC9BqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAKwX,oBAAoB,CAAEja,OAAQ,CAAE5H,MAAO,OAAU,GAAG,MACvGnB,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAC9BqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAKwX,oBAAoB,CAAEja,OAAQ,CAAE5H,MAAO,OAAU,GAAG,MACvGnB,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kBAC9BqE,MAAO,CAAE0e,OAAQ,QAAU9iB,QAAS,WAAQwJ,EAAKwX,oBAAoB,CAAEja,OAAQ,CAAE5H,MAAO,QAAW,GAAG,SAI5GnB,IAAAC,cAAA,OAAK8B,UAAU,+DAtGAojB,EAuGY5jB,KAAKX,MAAMxD,SAtG3CgoB,OAAO,GAAGnJ,cAAgBkJ,EAAIE,MAAM,GAsGgB,UAAQzC,EAAgBpkB,SAAS,IAAI,OAAIwB,IAAAC,cAAA,WAEtFD,IAAAC,cAAA,UAAQE,KAAK,SAAS2B,KAAK,SAASX,MAAM,SACxCY,UAAU,oBACVqE,MAAO,CAAEtC,MAAO,OAAQC,OAAQ,OAAQ+Y,UAAW,OAAS9a,QAAS,kBAAMwJ,EAAK6T,WAAW,GAAE,+BAA6B9d,KAAKX,MAAMpD,OAAOgB,SAAS,IAAI,SAK7JwB,IAAAC,cAAA,OAAK8B,UAAU,0BACb/B,IAAAC,cAAA,KAAG8B,UAAU,WAAU,qCAEvB/B,IAAAC,cAAA,SAAOE,KAAK,cAAc+kB,UAAQ,EAACpjB,KAAK,OACtCC,UAAU,eAAe8N,YAAatO,KAAKd,MAAMgF,eAAgBiK,SAAUnO,KAAK0hB,6BAYlGjjB,IAAAC,cAAA,OAAK8B,UAAU,sCACb/B,IAAAC,cAAA,OAAK8B,UAAU,wBACb/B,IAAAC,cAAA,OAAKuG,IAAI,kBAAkB1C,MAAM,QAAQ/B,UAAU,+BAA+B0E,IAAI,2BAEtFzG,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,KAAG8B,UAAU,WAAU,uHAAoH/B,IAAAC,cAAA,WAAS,IAACD,IAAAC,cAAA,WAAS,4HAAyHD,IAAAC,cAAA,KAAGsG,KAAK,kCAAiC,gBAAgB,oCAAiCvG,IAAAC,cAAA,WAAS,IAACD,IAAAC,cAAA,WAAS,kDAA+CD,IAAAC,cAAA,KAAGsG,KAAK,iCAAgC,4BAG7dvG,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,OAAK8B,UAAU,6BAGjB/B,IAAAC,cAAA,OAAK8B,UAAU,wCAKnB/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,qBAE7B/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,oBAAoB,IAACD,IAAAC,cAAA,KAAG8I,OAAO,SAASoH,IAAI,sBAAsB5J,KAAM,2EAAkFpN,2CAQvK6G,IAAAC,cAAA,OAAK8B,UAAU,aAAaE,GAAG,gBAC7BjC,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,YACjClC,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,gBACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAeR,KAAKX,MAAM4hB,QACxCxiB,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,YAAY,kBAAgB,WAG9D/B,IAAAC,cAAA,OAAK8B,UAAU,cACb/B,IAAAC,cAAA,SAAIsB,KAAKX,MAAMjC,WAzKzB,IAAiCwmB,CAiLnC,IAAC,CAp6Be,CAAShjB,aAu6BZ4E,qBAAkBib,I,uCC97BlB,SAASsD,GAAO1lB,GAAwB,IAArB2lB,WAAUC,UAAQ5lB,EAClD,MAAO6lB,EAAQC,GAAaC,oBAAS,GAErC,OACE3lB,IAAAC,cAAA,OAAK8B,UAAU,oDACb/B,IAAAC,cAAA,UACE+B,QAAS,kBAAM0jB,GAAWD,EAAO,EACjC1jB,UAAU,qFAETwjB,GAEFE,GACCzlB,IAAAC,cAAA,OAAK8B,UAAU,6DACZyjB,GAKX,CCPA,MAAMtsB,GAAMC,orBAEZ,IAAIysB,GAAS9sB,EAAQ,KACrB,MAAMG,GAAYH,EAAQ,IAEpB+sB,GAAO,CACX,CACEN,SAAU,2CACVC,OACExlB,IAAAC,cAAAD,IAAA6B,SAAA,KACE7B,IAAAC,cAAA,SAAG,gPAC4OD,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,ugBACuOD,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,yEAClbD,IAAAC,cAAA,cAAQ,sBAA2B,qBAAkBD,IAAAC,cAAA,YAAM,aAAgB,OAKzJ,CACEslB,SAAU,iCACVC,OACExlB,IAAAC,cAAAD,IAAA6B,SAAA,KACE7B,IAAAC,cAAA,SAAG,+PAC2PD,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,yIAExID,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,8KAESD,IAAAC,cAAA,WAASD,IAAAC,cAAA,WAAS,6QAqC3L,IAEI6lB,GAAa,SAAAtlB,GAEjB,SAAAslB,EAAYrlB,GAAQ,IAADC,E,MAkDsB,OAlDtBC,YAAA,KAAAmlB,G,EACjB,K,EAAAA,E,EAAA,CAAMrlB,G,kBAANC,E,iGAEKE,MAAQ,CAEXmlB,UAAU,EACVC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,SAAU,IACVC,UAAU,EACVC,SAAU,IACVC,MAAM,EACNC,MAAM,EACNC,WAAY,MACZC,YAAa,aACbC,QAAS,aACTC,QAAS,GACTC,WAAY,aACZC,YAAa,EACbC,YAAa,IAAI9tB,GAAU,GAC3B+tB,gBAAiB,IAAI/tB,GAAU,GAC/BguB,cAAe,EACfC,OAAQ,GACRC,UAAW,GACXC,eAAgB,EAChBC,UAAW,EACXC,QAAS,EACTC,aAAc,EACdC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,cAAe,MACflgB,OAAQ,GACRmgB,QAAS,IACTC,QAAS,wCACTC,QAAS,wCACTC,UAAW,GACXC,aAAc,aACdC,SAAU,aACVrM,KAAM,cAIRlb,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAC9BA,EAAK6H,aAAe7H,EAAK6H,aAAaxH,KAAIL,GAE1CA,EAAKwnB,UAAYxnB,EAAKwnB,UAAUnnB,KAAIL,GAEpCA,EAAK0H,QAAU1H,EAAK0H,QAAQrH,KAAIL,GAAOA,CAEzC,CAAC,OAAAM,YAAA8kB,EAAAtlB,GAAAS,YAAA6kB,EAAA,EAAA5kB,IAAA,oBAAAC,MAGD,WAAqB,IAADC,EAAA,KAClBmC,SAAS1D,MAAQ,kCACjB0D,SAASC,eAAe,UAAUC,UAAYlC,KAAKd,MAAMikB,KAAKphB,EAAE,kBAGvD,iCAAiC6kB,KAAKC,UAAUC,YAIvDjsB,QAAQC,IAAI,eAGdY,YAAW,WACTmE,EAAKiC,QACP,GAAG,KAEHhC,aAAY,WACVD,EAAKiC,QACP,GAAG,IAEL,GAAC,CAAAnC,IAAA,SAAAC,MAED1F,iBAAgB,IAAD0J,EAAA,KAEb,MAAQM,kBAAmBlE,KAAKd,MAEhCc,KAAKC,SAAS,CACZiG,OAAQme,GAAO0C,GAAGC,OAAM,KAG1B,IAAIC,EAAM9iB,EAAMxL,aAEZ6rB,EAAW,CAAE/mB,QAAQ,GAEzB,IACE+mB,QAAiBrqB,MAAM8sB,EAAM,mBAAqB/iB,GAC/C9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,GAGJ,CAAE,MAAOkD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA+C,KAAKC,SAAS,CACZukB,SAAUA,EAAS/mB,SAGrB,IAAIypB,GAAO,EAEX,GAAI1C,EAAS/mB,QAAUuC,KAAKd,MAAMioB,SAASC,QAAQC,UAAW,CAE5D,IAAI5C,EAAQ6C,aAAaC,QAAQ,cAE7BC,EAAS,4BADD,IAAIjrB,KAAKA,KAAKC,OACuBirB,cAElC,OAAVhD,QAA4BtsB,IAAVssB,SAA8BvkB,OAAOhF,QAAQ8I,IAAI0jB,gBAAgBF,EAAQ/C,KAAWzkB,KAAKd,MAAMioB,SAASC,QAAQ3e,SACrIgc,QAAczkB,KAAKd,MAAMioB,SAASC,QAAQO,YAAYH,GAGtDF,aAAaM,QAAQ,aAAcnD,IAEnCA,EAAQ6C,aAAaC,QAAQ,cAG/B,IAEIL,QADQhnB,OAAOhF,QAAQ8I,IAAI0jB,gBAAgBF,EAAQ/C,KAAWzkB,KAAKd,MAAMioB,SAASC,QAAQ3e,OAM9F,CAAE,MAAOjL,GACP3C,QAAQC,IAAI0C,EAAMP,YAClBiqB,GAAO,CACT,CAIA,GAFAlnB,KAAKC,SAAS,CAAEwkB,MAAOyC,SAET/uB,IAAVssB,GAAuByC,EAAM,CAE/B,IAAIW,EAAO,CAAC,EAEZ,IAEEA,QAAa1tB,MAAM8sB,EAAM,iBAAmB/iB,GACzC9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEhD,IACX,GAGJ,CAAE,MAAOiD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAIA,IAAI6qB,EAAU,IAAIpwB,GAA+C,KAApCmwB,EAAKE,QAAUF,EAAKG,eAAqB9pB,GAAG,GAAGF,WAExE8pB,GAAW,IACbA,EAAU,IAAMA,GAGlBD,EAAKC,QAAUA,EAEXD,EAAKI,QACPJ,EAAKI,MAASJ,EAAKI,MAAOlG,eAIT,OAAf8F,EAAKI,QACPJ,EAAKI,MAAQ,OAKf,IAAIjU,QAAehU,KAAKd,MAAMhE,QAAQ8I,IAAIiQ,oBAAoB/P,GAE1DgkB,EAAiB,EACjBC,EAAsB,EAEtBC,EAAe,EACfC,EAAoB,EAGpBrU,EAAOS,cACTyT,EAAiBlU,EAAOS,YACxB0T,EAAsBnU,EAAOS,aAG3BT,EAAOU,aACTwT,GAAkBlU,EAAOU,YAGvBV,EAAOsU,eACTD,EAAoBrU,EAAOsU,cAGzBtU,EAAOuU,WACTF,GAAqBrU,EAAOuU,UAG9BH,EAAeC,EAEXrU,EAAOwU,cACTJ,GAAgBpU,EAAOwU,aAIrBxU,EAAOyU,UACTL,GAAgBpU,EAAOyU,SAGQ,IAA7BZ,EAAKa,oBACPb,EAAKa,qBAAsB,EAE3Bb,EAAKa,qBAAsB,EAI7B,IAAI5D,GAAW,EAEX+C,EAAKc,WAAa,IACpB7D,GAAW,GAGb+C,EAAKxN,KAAOwN,EAAKe,SAIjB5oB,KAAKC,SAAS,IACT4nB,EACHnD,KAAMmD,EAAKgB,OACX/D,SAAUA,EACVC,SAAU8C,EAAKc,WACf1D,KAAM4C,EAAKa,oBACXxD,WAAY2C,EAAKI,MACjBvC,cAAmC,IAApBmC,EAAKiB,aACpBvD,YAAasC,EAAKiB,aAClBtD,YAAa,IAAI9tB,GAAyB,IAAfmwB,EAAKE,SAChCtC,gBAAiB,IAAI/tB,GAA8B,IAApBmwB,EAAKG,cACpCe,SAAUjB,EACVnC,OAAQkC,EAAKmB,OACblD,UAAWoC,EACXrC,eAAgBsC,EAEhBpC,QAASqC,EACTpC,aAAcqC,IAIhB,IAAI3B,QAAiBvsB,MAAM8sB,EAAM,gBAAiB,CAChD/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAU,CAAE/B,OAAQkJ,MAG9B9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEhD,IACX,IACCI,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,GACL,CACT,IAEFof,EAAY,IAAIhvB,GAAUgvB,GAAUxoB,GAAG,GAAGF,WAAYuH,eAAe,SACrEvF,KAAKC,SAAS,CAAEymB,SAAUA,IAG1B,IAAIP,QAAqBhsB,MAAM8sB,EAAM,oBAAqB,CACxD/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAU,CAAE/B,OAAQkJ,MAG9B9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEhD,IACX,IACCI,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,GACL,EACT,IAEF6e,EAAeA,EAAa/X,KAAI,SAAC0G,EAAM9c,GAWrC,OAVA8c,EAAK5L,OAAS,IAAIxR,GAAUod,EAAK5L,QAC7B4L,EAAKmU,eACyB,QAA5BnU,EAAKuF,KAAK0H,gBACZjN,EAAK5L,OAAS,IAAIxR,GAAUod,EAAKmU,eAC7BnU,EAAK5L,OAAOlL,WAAa,KAAa8W,EAAK5L,OAAOlL,WAAa,IACjE8W,EAAK5L,OAAS4L,EAAK5L,OAAOnL,UAAU,KAKnC,CAAE/F,QAAO6T,KAAMwY,GAAO6E,IAAgB,IAAZpU,EAAKjJ,MAAakb,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAAQjgB,OAAQ4L,EAAK5L,OAAOnL,WAAW,GAAGG,GAAG,GAAGF,WAAYqc,KAAMvF,EAAKuF,KACzJ,IAEA,IAAIoM,EAAeN,EAAavR,QAAO,SAACwU,EAAO/qB,GAAwB,IAApB6K,SAAQmR,QAAMhc,EAE3DrG,EAAQoxB,EAAQC,WAAU,SAAAvU,GAAI,OAAIA,EAAKuF,OAASA,CAAI,IAQxD,OAPe,IAAXriB,EACFoxB,EAAQze,KAAK,CAAE0P,OAAMnR,OAAQ,IAAIxR,GAAUwR,KAE3CkgB,EAAQpxB,GAAOkR,OAASkgB,EAAQpxB,GAAOkR,OAAOqN,KAAKrN,GAI9CkgB,CACT,GAAG,IAEHvuB,QAAQC,IAAI2rB,GAEZA,EAAeA,EAAarY,KAAI,SAAA0G,GAC9B,MAAMhZ,EAAWgZ,EAAK5L,OAAOhL,GAAG,GAAGF,WAAWuH,eAAe,SAC7D,MAAM,GAANwU,OAAUje,EAAQ,KAAAie,OAAIjF,EAAKuF,KAC7B,IACAxf,QAAQC,IAAI2rB,GAGZzmB,KAAKC,SAAS,CACZkmB,eACAM,aAAcA,EAAa6C,KAAK,SAGlC,IAAIjE,QAAgBlrB,MAAM8sB,EAAM,eAAgB,CAC9C/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAU,CAAE/B,OAAQkJ,MAE9B9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEgsB,aACX,IACC5uB,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,GACL,EACT,IAGEkiB,EAAc,GAElBnE,EAAUA,EAAQjX,KAAI,SAAC0G,EAAM9c,GA+B3B,OA7BAwxB,EAAY7e,KAAKmK,EAAK2U,UAEtB3U,EAAK4U,KAAO,SAEN5U,EAAK6U,WAAY5H,cAAevL,SAAS,OAC7C1B,EAAK4U,KAAO,SAEZ5U,EAAK4U,KAAO,OAGR5U,EAAK6U,WAAY5H,cAAevL,SAAS,UAC7C1B,EAAK6U,WAAa,QAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,SAC7C1B,EAAK6U,WAAa,OAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,aAC7C1B,EAAK6U,WAAa,WAIpB7U,EAAK8U,QAAUvF,GAAO6E,IAAmB,IAAfpU,EAAK8U,SAAgB7C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAC5ErU,EAAK+U,SAAWxF,GAAO6E,IAAoB,IAAhBpU,EAAK+U,UAAiB9C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAC9ErU,EAAK1Y,KAAO0Y,EAAK8U,QAAU,OAAS9U,EAAK+U,SAElC,CAAE7xB,WAAU8c,EAErB,IAGA,IAAI0R,QAAkBrsB,MAAM8sB,EAAM,kBAAmB,CACnD/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAU,CAAE/B,OAAQkJ,MAE9B9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEusB,eACX,IACCnvB,OAAM,SAAC2M,GAEN,OADAzM,QAAQC,IAAIwM,GACL,EACT,IAGFkf,EAAYA,EAAUpY,KAAI,SAAC0G,EAAM9c,GA8B/B,OA5BAwxB,EAAY7e,KAAKmK,EAAK2U,UAEtB3U,EAAK4U,KAAO,SAEN5U,EAAK6U,WAAY5H,cAAevL,SAAS,OAC7C1B,EAAK4U,KAAO,SAEZ5U,EAAK4U,KAAO,OAGR5U,EAAK6U,WAAY5H,cAAevL,SAAS,UAC7C1B,EAAK6U,WAAa,QAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,SAC7C1B,EAAK6U,WAAa,OAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,aAC7C1B,EAAK6U,WAAa,WAIpB7U,EAAK8U,QAAUvF,GAAO6E,IAAmB,IAAfpU,EAAK8U,SAAgB7C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAC5ErU,EAAK+U,SAAWxF,GAAO6E,IAAoB,IAAhBpU,EAAK+U,UAAiB9C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAC9ErU,EAAK1Y,KAAO0Y,EAAK8U,QAAU,OAAS9U,EAAK+U,SAClC,CAAE7xB,WAAU8c,EAErB,IAGA,MAAMiV,QAAuB/pB,KAAKd,MAAMhE,QAAQ8I,IAAIgmB,mCAAmC9lB,GAEvF,IAAI+hB,EAAW,GAEf,GAAI8D,EAAeE,WAEjB,IAAK,IAAIjyB,EAAQ,EAAGA,EAAQ+xB,EAAeE,WAAW/xB,OAAQF,IAG5D,GAFA+xB,EAAeE,WAAWjyB,GAASgI,KAAKd,MAAMhE,QAAQuN,QAAQmN,QAAQmU,EAAeE,WAAWjyB,KAEjC,IAA3DwxB,EAAY1T,QAAQiU,EAAeE,WAAWjyB,IAAgB,CAChE,IAAI6vB,QAAa7nB,KAAKd,MAAMhE,QAAQ8I,IAAIkmB,uBAAuBhmB,EAAgB6lB,EAAeE,WAAWjyB,IAIzG,IAAK,IAAImyB,EAAS,EAAGA,EAAStC,EAAKuC,kBAAkBlyB,OAAQiyB,IAAU,CAErE,IAAIE,EAAQ,CACVrvB,OAAQ+uB,EAAeE,WAAWjyB,GAClCsyB,SAAU,SACVtmB,IAAK,EACLumB,IAAK,IACLC,OAAQ,oBACRC,aAAcvmB,GAGZ2jB,EAAKuC,kBAAkBD,GAAQO,2BAEjCL,EAAMrmB,IAAM6jB,EAAKuC,kBAAkBD,GAAQO,0BAA4B,IAAM,EAC7EL,EAAME,IAAM1C,EAAKuC,kBAAkBD,GAAQO,0BACvC7C,EAAKuC,kBAAkBD,GAAQQ,yBACjCN,EAAMG,OAAS,IAAIjuB,KAAKsrB,EAAKuC,kBAAkBD,GAAQQ,wBACvDN,EAAMG,OAASnG,GAAO6E,IAAImB,EAAMG,QAAQzD,GAAG/mB,KAAKX,MAAM6G,QAAQijB,OAAO,UAGvEkB,EAAMrmB,IAAM6jB,EAAKuC,kBAAkBD,GAAQS,6BAA+B,IAAM,EAChFP,EAAME,IAAM1C,EAAKuC,kBAAkBD,GAAQS,6BACvC/C,EAAKuC,kBAAkBD,GAAQU,4BACjCR,EAAMG,OAAS,IAAIjuB,KAAKsrB,EAAKuC,kBAAkBD,GAAQU,2BACvDR,EAAMG,OAASnG,GAAO6E,IAAImB,EAAMG,QAAQzD,GAAG/mB,KAAKX,MAAM6G,QAAQijB,OAAO,QAKvEkB,EAAMC,SAAW,aAInBrE,EAAStb,KAAK0f,EAGhB,CAEF,CAMJrqB,KAAKC,SAAS,CACZolB,UACAmB,YACAP,YAIJ,CACF,CAEF,GAAC,CAAAtmB,IAAA,eAAAC,MAGD1F,eAAmBuN,GAEjB,IAAIqjB,EAAWrjB,EAAMD,OAIrB,OAAQsjB,EAASpqB,IACf,IAAK,OAEH,GAAIoqB,EAASlrB,QAAUI,KAAKX,MAAMqlB,KAAM,CAGtC,IAAIqG,EAAW,EACX/qB,KAAKX,MAAMqlB,OACbqG,EAAW,GAKb,IACE,IAAI3tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB8mB,OAAQD,GACxD5wB,MAAMgK,EAAMxL,aAAe,aAAc,CACvCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZykB,KAAM9kB,GAEV,CAGA,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAMulB,SAAU,CAG1C,IAAIqG,EAAO,EACPF,EAAW,IACf,IAAK/qB,KAAKX,MAAMulB,WACdmG,EAAW,IACXE,EAAOlY,SAASmY,OAAO,yBAA0BlrB,KAAKX,MAAMwlB,WAE5DhqB,QAAQC,IAAImwB,IACPxX,MAAMwX,IAAO,CAChB,IAAI7tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBinB,aAAcF,GAE9D9wB,MAAMgK,EAAMxL,aAAe,mBAAoB,CAC7CuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAEzB,CAMF,IACE,IAAIA,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB0gB,SAAUmG,GAC1D5wB,MAAMgK,EAAMxL,aAAe,eAAgB,CACzCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZ2kB,SAAUhlB,GAEd,CAGA,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAMylB,SAAU,CAE1C,IAAImG,EAAO,EAQX,GAPKjrB,KAAKX,MAAMylB,WACdmG,EAAOlY,SAASmY,OAAO,2BAA4B,SAMhDzX,MAAMwX,GAAO,CAChB,IAAI7tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBknB,eAAgBH,GAEhE9wB,MAAMgK,EAAMxL,aAAe,qBAAsB,CAC/CuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAEzB,CAKA,IAAIwC,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZ2kB,SAAUhlB,GAEd,CAGA,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAM2lB,KAAM,CAGtC,IAAI+F,EAAW,IACX/qB,KAAKX,MAAM2lB,OACb+F,EAAW,KAKb,IACE,IAAI3tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB8gB,KAAM+F,GACtD5wB,MAAMgK,EAAMxL,aAAe,WAAY,CACrCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAIA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAIVI,KAAKC,SAAS,CACZ+kB,KAAMplB,GAEV,CAGA,MAEF,IAAK,SAEHI,KAAKC,SAAS,CACZ2lB,UAAWkF,EAASlrB,QAGtB,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAM4lB,KAAM,CAGtC,IAAI8F,EAAW,IACX/qB,KAAKX,MAAM4lB,OACb8F,EAAW,KAKb,IACE,IAAI3tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBwkB,oBAAqBqC,GACrE5wB,MAAMgK,EAAMxL,aAAe,0BAA2B,CACpDuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZglB,KAAMrlB,GAEV,EASJI,KAAK8B,QAEP,GAAC,CAAAnC,IAAA,UAAAC,MAED1F,eAAcmxB,GAEZ,IAAKrpB,SAASC,eAAe,YAAa,OAEtCjC,KAAKkK,MACPlK,KAAKkK,KAAKC,UAEZ,MAAMD,EAAOE,IAASC,IAAI,YAC1BH,EAAK8P,MAAM7P,UACX,IAAIK,EAAQN,EAAKO,UAAUC,SAASC,KAClCC,IAAcP,IAAIH,EAAM,CACtBY,MAAM,EACNwgB,OAAQphB,EAAKqhB,kBAKbhxB,EAAO,CAAC,CACVsR,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,OACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,KACRmR,KAAM,OACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,KACRmR,KAAM,OAER,CACExO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,QACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,QACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,SAGR9f,EAAO8wB,EAGP,IAAI9e,EAAQ/B,EAAMgC,MAAM7B,KACtBC,IAAgBP,IAAIH,EAAM,CACxBmC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAKzC8B,EAAQxB,EAAMyB,MAAMtB,KACtBC,KAAmBP,IAAIH,EAAM,CAC3BgC,aAAc,CAAEC,SAAU,MAAOC,MAAO,GACxCC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,GACzCshB,cAAe,UAGnBxf,EAAMzR,KAAKsT,OAAOtT,GAIJiQ,EAAMiC,OAAO9B,KACzBC,KAAmBP,IAAIH,EAAM,CAC3BtL,KAAM,MACNoN,MAAOA,EACPO,MAAOA,EACPG,YAAa,SACb+e,eAAgB,OAChB/oB,KAAM0H,KAAU,SAChBtH,OAAQsH,KAAU,YAGd7P,KAAKsT,OAAOtT,GAEpBiQ,EAAMU,IAAI,SAAUN,IAAeP,IAAIH,EAAM,CAAC,IAE9ClK,KAAKkK,KAAOA,CACd,GAAC,CAAAvK,IAAA,YAAAC,MAED1F,eAAgBsN,EAAQqgB,GACtB,MAAQ3jB,kBAAmBlE,KAAKd,MAChC,IAAMqR,cAAaC,aAAcxQ,KAAKX,MAElCzB,GAAM,EA+HV,OAAQ4J,GACN,IAAK,iBA9HPtN,eAAwBK,GACtB,IACE,IAAI6C,EAAO,CAAEpC,OAAQkJ,EAAgBghB,WAAY3qB,SAC3CJ,MAAMgK,EAAMxL,aAAe,iBAAkB,CACjDuE,OAAQ,OACRC,QAAS,CACP,YAAaxF,GAAI+E,gBACjB,eAAgB,oBAElBU,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEF,CA8GUyuB,CAAS7D,GACf,MAEF,IAAK,uBA/GP3tB,eAA8ByxB,GAE5B,IACE,IAAIvuB,EAAO,CAAEpC,OAAQkJ,EAAgBihB,YAAawG,GAC9Cje,QAAiBvT,MAAMgK,EAAMxL,aAAe,kBAAmB,CACjEuE,OAAQ,OACRC,QAAS,CACP,YAAaxF,GAAI+E,gBACjB,eAAgB,oBAElBU,KAAMN,KAAKC,UAAUK,KACpBhD,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,KAElBoT,EAASjQ,QAAUiQ,EAASnT,OAE/BqD,GAAM,EACN2S,EAAc,yBACdC,EAAY9C,EAASnT,KAIzB,CAAE,MAAOiD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEF,CAuFU2uB,CAAe/D,GACrB,MAEF,IAAK,mBAxFP3tB,eAA0BgW,GAExB,IACE,IAAI9S,EAAO,CAAEpC,OAAQkJ,EAAgBkhB,QAASlV,SACxC/V,MAAMgK,EAAMxL,aAAe,cAAe,CAC9CuE,OAAQ,OACRC,QAAS,CACP,YAAaxF,GAAI+E,gBACjB,eAAgB,oBAElBU,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEF,CAuEU4uB,CAAWhE,GACjB,MAEF,IAAK,oBAxEP3tB,eAA2Bc,GAEzB,IACE,IAAIoC,EAAO,CAAEpC,OAAQkJ,EAAgB4nB,GAAI9wB,SACnCb,MAAMgK,EAAMxL,aAAe,SAAU,CACzCuE,OAAQ,OACRC,QAAS,CACP,YAAaxF,GAAI+E,gBACjB,eAAgB,oBAElBU,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEF,CAuDU8uB,CAAYlE,GAClB,MAEF,IAAK,gBAxDP3tB,eAAuBmgB,GAErB,IACE,IAAIjd,EAAO,CAAEpC,OAAQkJ,EAAgB0kB,SAAUvO,EAAKK,eAChDhN,QAAiBvT,MAAMgK,EAAMxL,aAAe,sBAAuB,CACrEuE,OAAQ,OACRC,QAAS,CACP,YAAaxF,GAAI+E,gBACjB,eAAgB,oBAElBU,KAAMN,KAAKC,UAAUK,KACpBhD,MAAK,SAACmD,GAAC,OAAKA,EAAEjD,MAAM,IAEvBO,QAAQC,IAAI4S,GAERA,EAASjQ,OACPiQ,EAASnT,KAAKqD,MAChBA,GAAM,EACN2S,EAAc,kBACdC,EAAY9C,EAASnT,KAAKqD,MAK5BA,GAAM,EACN2S,EAAc,yBACdC,EAAY9C,EAASnT,KAOzB,CAAE,MAAOiD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEF,CAoBU+uB,CAAQnE,GACd,MAEF,QACE5e,MAAM,cAINrL,IACFoC,KAAKC,SAAS,CACZsQ,cACAC,cAEFtQ,OAAOC,EAAE,UAAUC,MAAM,SAI3BJ,KAAK8B,QAEP,GAAC,CAAAnC,IAAA,SAAAC,MAGD,WAAU,IAADqE,EAAA,KAGP,IAAMugB,WAAUC,QAAOS,aAAY7K,OAAM8L,gBAAiBnmB,KAAKX,MAE/D,GAAImlB,EAAU,CAEZ,GAAKC,EAgCE,CAGL,IAAIwH,EAAUxtB,IAAAC,cAAA,UAAQ8B,UAAU,mCAAmCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,KAAG8B,UAAU,yBAA2B,YAE7KR,KAAKX,MAAMqlB,OAEbuH,EAAUxtB,IAAAC,cAAA,UAAQ8B,UAAU,iCAAiCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,KAAG8B,UAAU,0BAA4B,eAExKR,KAAKX,MAAMslB,WACbsH,EAAUxtB,IAAAC,cAAA,UAAQ8B,UAAU,oCAAoCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,KAAG8B,UAAU,4BAA8B,aAMrL,IAAI2rB,EAAc1tB,IAAAC,cAAAD,IAAA6B,SAAA,MAwClB,MAtCmB,QAAf4kB,IAEFiH,EAAc1tB,IAAAC,cAAA,OAAK8B,UAAU,kBAC3B/B,IAAAC,cAAA,OAAK8B,UAAU,YACb/B,IAAAC,cAAA,OAAK8B,UAAU,UAAS,0CACxB/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,SAAO6B,KAAK,OAAOC,UAAU,eAAeE,GAAG,SAASmE,MAAO,CAAEunB,YAAa,WAAa9d,YAAatO,KAAKX,MAAMsmB,OAAQxX,SAAUnO,KAAKgH,aAAcyP,UAAU,KAEpKhY,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,oFAAoFmC,QAAS,WAE3IwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,sFAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,OAMoB,KAAtBJ,KAAKX,MAAMsmB,QAAiBxqB,IAAQkoB,UAAUrjB,KAAKX,MAAMumB,YAAc5lB,KAAKX,MAAMsmB,SAAW3lB,KAAKX,MAAMumB,YAE1GuG,EAAe1tB,IAAAC,cAAAD,IAAA6B,SAAA,KACZ6rB,EACD1tB,IAAAC,cAAA,UAAQ8B,UAAU,4BAA4BD,KAAK,SAASE,QAAS,WACnEwD,EAAK8nB,YAAY9nB,EAAK5E,MAAMumB,UAC9B,GAAG,4BASDnnB,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBAAsBqE,MAAO,CAAE2W,OAAQ,SAGpD/c,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,uCACb/B,IAAAC,cAAA,OAAK8D,OAAO,OAAOyC,IAAI,oBAAoBC,IAAI,KAAU,YAAWlF,KAAKX,MAAMymB,UAAWvgB,eAAe,SAAS,IAAGvF,KAAKX,MAAMwmB,eAAgBtgB,eAAe,SAAS,IACxK9G,IAAAC,cAAA,OAAK8B,UAAU,WAAWqE,MAAO,CAAE0e,OAAQ,MAAOrV,gBAAiB,cACjEzP,IAAAC,cAAA,OAAK8B,UAAU,0BAA0BG,KAAK,cAAckE,MAAO,CAAE,MAAW7E,KAAKX,MAAMymB,UAAY9lB,KAAKX,MAAMwmB,eAAkB,IAAO,KACzI,gBAAgB7lB,KAAKX,MAAMymB,UAAY9lB,KAAKX,MAAMwmB,eAAkB,IAAK,gBAAc,IAAI,gBAAc,UAI/GpnB,IAAAC,cAAA,OAAK8B,UAAU,uCACb/B,IAAAC,cAAA,QAAMiC,KAAK,OAAO,gBAAY,eAAcX,KAAKX,MAAM0mB,QAASxgB,eAAe,SAAS,IAAGvF,KAAKX,MAAM2mB,aAAczgB,eAAe,SAAS,IAC5I9G,IAAAC,cAAA,OAAK8B,UAAU,WAAWqE,MAAO,CAAE0e,OAAQ,MAAOrV,gBAAiB,cACjEzP,IAAAC,cAAA,OAAK8B,UAAU,uBAAuBG,KAAK,cAAckE,MAAO,CAAE,MAAW7E,KAAKX,MAAM0mB,QAAU/lB,KAAKX,MAAM2mB,aAAgB,IAAO,KAClI,gBAAgBhmB,KAAKX,MAAM0mB,QAAU/lB,KAAKX,MAAM2mB,aAAgB,IAAK,gBAAc,IAAI,gBAAc,UAI3GvnB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAWyrB,EAAQ,MAEnCxtB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,oCAAoCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,OAAK8D,OAAO,OAAOyC,IAAI,qBAAqBC,IAAI,KAAU,IAAElF,KAAKX,MAAMmmB,YAAYtnB,GAAG,GAAGjB,SAAS,IAAI,IAAG+C,KAAKX,MAAMomB,gBAAgBznB,WAAa,GAAK,MAAMgC,KAAKX,MAAMomB,gBAAgBvnB,GAAG,GAAGjB,SAAS,IAAI,OAE9WwB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU/B,IAAAC,cAAA,UAAQ8B,UAAU,sCAAsCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU,IAAC5G,IAAAC,cAAA,QAAMiC,KAAK,MAAM,aAAW,KAAI,gBAAS,YAAUX,KAAKX,MAAMqmB,cAAc,OAGrOjnB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,mCAAmCqE,MAAO,CAAEtC,MAAO,OAAS,iBAAe,WAAW7B,GAAG,SAAS,aAAWV,KAAKX,MAAMgtB,QAAQ,QAAa,IAAE,KAAK,IAAC5tB,IAAAC,cAAA,QAAMiC,KAAK,OAAMlC,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,uDAAuDmC,QAAS,WAEpTwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,yDAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,KACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,SAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,iBAAkB,MAAM,GAAE,YAC1FloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,iBAAkB,MAAM,GAAE,YAC1FloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,iBAAkB,OAAO,GAAE,eAI/FloB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,mCAAmCqE,MAAO,CAAEtC,MAAO,OAAS,iBAAe,WAAW7B,GAAG,SAAS,SAAO2Z,EAAK,KAAU,IAAE,KAAK,IAAC5b,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,2DAA2DmC,QAAS,WAElRwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,6DAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,IACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,SAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,UAAW,MAAM,GAAE,OACnFloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,UAAW,OAAO,GAAE,QACpFloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,UAAW,OAAO,GAAE,UAIxFloB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kCAAkCqE,MAAO,CAAEtC,MAAO,OAAS,iBAAe,WAAW7B,GAAG,SAAQ,aAAWV,KAAKX,MAAM+lB,SAAiB,IAAC3mB,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,+DAA+DmC,QAAS,WAE9RwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,iEAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,IACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,SAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,aAAc,KAAK,GAAE,MACrFloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,aAAc,EAAE,GAAG,UACnFloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,aAAc,EAAE,GAAE,UAClFloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,aAAc,GAAG,GAAE,aAMvFloB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kCAAkCqE,MAAO,CAAEtC,MAAO,OAAS,iBAAe,WAAW7B,GAAG,QAAQ,eAAaV,KAAKX,MAAM6lB,YAAoB,IAAE,KAAK,IAACzmB,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,iFAAiFmC,QAAS,WAE5TwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,mFAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,IACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,QAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,WAAY,KAAK,GAAE,OACnFloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,WAAY,YAAY,GAAE,aAC1FloB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK0iB,UAAU,WAAY,SAAS,GAAE,YAI3FloB,IAAAC,cAAA,OAAK8B,UAAU,4BACZ2rB,GAGH1tB,IAAAC,cAAA,OAAK8B,UAAU,WACb/B,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOmE,MAAO,CAAEqJ,gBAAiBlO,KAAKX,MAAMqlB,KAAO,UAAY,aAAe9J,QAAS5a,KAAKX,MAAMqlB,KAAMvW,SAAUnO,KAAKgH,eAC9KvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,QAAKjQ,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,uBAAuBmC,QAAS,WAExJwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,yBAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAGF3B,IAAAC,cAAA,OAAK8B,UAAU,UAAUqE,MAAO,CAAEynB,UAAW,WAC3C7tB,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOmE,MAAO,CAAEqJ,gBAAiBlO,KAAKX,MAAM2lB,KAAO,UAAY,aAAepK,QAAS5a,KAAKX,MAAM2lB,KAAM7W,SAAUnO,KAAKgH,eAC9KvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,QAAKjQ,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,oEAAoEmC,QAAS,WAErMwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,sEAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAGF3B,IAAAC,cAAA,OAAK8B,UAAU,UAAUqE,MAAO,CAAEynB,UAAW,UAC3C7tB,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOmE,MAAO,CAAEqJ,gBAAiBlO,KAAKX,MAAM4lB,KAAO,UAAY,aAAerK,QAAS5a,KAAKX,MAAM4lB,KAAM9W,SAAUnO,KAAKgH,eAC9KvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,UAAOjQ,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,mDAAmDmC,QAAS,WAEtLwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,qDAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAGF3B,IAAAC,cAAA,OAAK8B,UAAU,WACb/B,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOmE,MAAO,CAAEqJ,gBAAiBlO,KAAKX,MAAMulB,SAAW,UAAY,aAAehK,QAAS5a,KAAKX,MAAMulB,SAAUzW,SAAUnO,KAAKgH,eACtLvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,mBAAgBjQ,IAAAC,cAAA,WAAWsB,KAAKX,MAAMwlB,SAAUtf,eAAe,SAAS,IAAC9G,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,2DAA2DmC,QAAS,WAEhQwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,6DAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAGF3B,IAAAC,cAAA,OAAK8B,UAAU,SAASqE,MAAO,CAAEynB,UAAW,UAC1C7tB,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOmE,MAAO,CAAEqJ,gBAAiBlO,KAAKX,MAAMylB,SAAW,UAAY,aAAelK,QAAS5a,KAAKX,MAAMylB,SAAU3W,SAAUnO,KAAKgH,eACtLvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,qBAAkBjQ,IAAAC,cAAA,WAAS,IAAGsB,KAAKX,MAAM0lB,SAAUxf,eAAe,SAAS,IAAC9G,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,wDAAwDmC,QAAS,WAEhQwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,0DAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,WAUZ3B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,MAAI8B,UAAU,uBAAsB,iBAEtC/B,IAAAC,cAAA,OAAK8B,UAAU,8BACb/B,IAAAC,cAAA,OAAK8B,UAAU,QAAO,QAAMR,KAAKX,MAAMgtB,QAAQ,QAC/C5tB,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAK8B,UAAU,kBAAmBR,KAAKX,MAAMgnB,QAAS9gB,eAAe,SAAS,QAC9E9G,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OAAK8B,UAAU,QAAO,0BAAuB/B,IAAAC,cAAA,WAAS,IAACD,IAAAC,cAAA,KAAG6tB,aAAc,WAAQtoB,EAAKhE,SAAS,CAAEsmB,QAAStiB,EAAK5E,MAAMinB,SAAW,EAAGkG,aAAc,WAAQvoB,EAAKhE,SAAS,CAAEsmB,QAAS,yCAA2C,GAAIvmB,KAAKX,MAAMknB,UAE3O9nB,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OAAK8B,UAAU,QAAO,yBACE/B,IAAAC,cAAA,WACtBD,IAAAC,cAAA,SAAIsB,KAAKX,MAAMqnB,SAAS,QAAQ,IAACjoB,IAAAC,cAAA,WACjCD,IAAAC,cAAA,UAAQ8B,UAAU,iBAAiBC,QAAS,WAAQ6mB,aAAamF,WAAW,cAAexoB,EAAKhE,SAAS,CAAEwkB,OAAO,GAAS,GAAG,UAAOhmB,IAAAC,cAAA,OAAKiE,MAAM,6BAA6BJ,MAAM,KAAKC,OAAO,KAAKE,KAAK,eAAelC,UAAU,wBAAwBiC,QAAQ,aAChQhE,IAAAC,cAAA,QAAMguB,SAAS,UAAU7pB,EAAE,wNAC3BpE,IAAAC,cAAA,QAAMguB,SAAS,UAAU7pB,EAAE,2IAUzCpE,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,QAAM2lB,EAAajuB,OAAO,eAAa8H,KAAKX,MAAMonB,eAE/EhoB,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,8CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,MAAM9nB,MAAO,CAAEynB,UAAW,UAAW,UAC/C7tB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,UAIpBluB,IAAAC,cAAA,aAEIynB,EAAayG,aAAaxe,KAAI,SAAC0G,EAAM9c,GAEnC,OACEyG,IAAAC,cAAA,MAAIiB,IAAK3H,GACPyG,IAAAC,cAAA,MAAImuB,MAAM,SAAU/X,EAAK5L,OAAQ3D,eAAe,UAEhD9G,IAAAC,cAAA,UAAKoW,EAAKuF,MACV5b,IAAAC,cAAA,UAAKoW,EAAKjJ,MAIhB,QAOVpN,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OAAOE,GAAG,WAAWmE,MAAO,CAAErC,OAAQxC,KAAKX,MAAM+mB,cAAelY,gBAAiB,WAChGzP,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBC,QAAS,WAAyC,QAA7BwD,EAAK5E,MAAM+mB,eAA2BniB,EAAKhE,SAAS,CAAEmmB,cAAe,UAAYniB,EAAK4C,QAAQ5C,EAAK5E,MAAM8mB,gBAAuBliB,EAAKhE,SAAS,CAAEmmB,cAAe,QAAUniB,EAAKiG,KAAKC,UAAa,GAAG,6BAKlQ1L,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAACouB,KAAa,CACZC,SAAU,mBACVC,QAAQ,EACRC,UAAU,OACVC,UAAU,IACVC,eAAe,IACfC,QAAS,CAAC,CACR1sB,GAAI,SACJ2sB,YAAa,UACZ,CACD3sB,GAAI,OACJ2sB,YAAa,YACZ,CACD3sB,GAAI,OACJ2sB,YAAa,SAEfC,MAAOnH,EACPxH,KAAK,eACLne,UAAU,oBAMlB/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,kBAAgBR,KAAKX,MAAMgmB,QAAQntB,OAAO,MAEvEuG,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,8CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,qBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,gBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAMgmB,QAAQjX,KAAI,SAAC0G,GACvB,OACErW,IAAAC,cAAA,MAAIiB,IAAKmV,EAAK9c,OACZyG,IAAAC,cAAA,UAAMoW,EAAK5L,OAAQ3D,eAAe,SAAS,IAAEuP,EAAKwV,SAAS,MAAIxV,EAAK6U,WAAW,IAAClrB,IAAAC,cAAA,KAAG8B,UAAW,SAAWsU,EAAK4U,KAAO,WACrHjrB,IAAAC,cAAA,UAAKoW,EAAK2U,SAAShrB,IAAAC,cAAA,WAChBoW,EAAK8U,QAAS,OAAQ9U,EAAK+U,SAASprB,IAAAC,cAAA,YAGvCD,IAAAC,cAAA,UAAKoW,EAAKyY,OAAO,QAGvB,QAQR9uB,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAACouB,KAAa,CACZC,SAAU,gBACVC,QAAQ,EACRC,UAAU,OACVC,UAAU,IACVC,eAAe,IACfC,QAAS,CAAC,CACR1sB,GAAI,WACJ2sB,YAAa,YACZ,CACD3sB,GAAI,aACJ2sB,YAAa,UACZ,CACD3sB,GAAI,WACJ2sB,YAAa,SACZ,CACD3sB,GAAI,OACJ2sB,YAAa,QACZ,CACD3sB,GAAI,SACJ2sB,YAAa,WAEfC,MAAOttB,KAAKX,MAAMgmB,QAClB1G,KAAK,eACLne,UAAU,oBAMlB/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,oBAAkBR,KAAKX,MAAMmnB,UAAUtuB,OAAO,MAE3EuG,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,8CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,qBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,gBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAMmnB,UAAUpY,KAAI,SAAC0G,GACzB,OACErW,IAAAC,cAAA,MAAIiB,IAAKmV,EAAK9c,OACZyG,IAAAC,cAAA,UAAMoW,EAAK5L,OAAQ3D,eAAe,SAAS,IAAEuP,EAAKwV,SAAS,MAAIxV,EAAK6U,WAAW,IAAClrB,IAAAC,cAAA,KAAG8B,UAAW,SAAWsU,EAAK4U,KAAO,WACrHjrB,IAAAC,cAAA,UAAKoW,EAAK2U,SAAShrB,IAAAC,cAAA,WAChBoW,EAAK8U,QAAS,OAAQ9U,EAAK+U,SAASprB,IAAAC,cAAA,YAGvCD,IAAAC,cAAA,UAAKoW,EAAKyY,OAAO,QAGvB,QAMR9uB,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAACouB,KAAa,CACZC,SAAU,kBACVC,QAAQ,EACRC,UAAU,OACVC,UAAU,IACVC,eAAe,IACfC,QAAS,CAAC,CACR1sB,GAAI,WACJ2sB,YAAa,YACZ,CACD3sB,GAAI,aACJ2sB,YAAa,UACZ,CACD3sB,GAAI,WACJ2sB,YAAa,SACZ,CACD3sB,GAAI,OACJ2sB,YAAa,QACZ,CACD3sB,GAAI,SACJ2sB,YAAa,WAEfC,MAAOttB,KAAKX,MAAMmnB,UAClB7H,KAAK,eACLne,UAAU,oBAMlB/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,sBAAoBR,KAAKX,MAAM4mB,SAAS/tB,OAAO,MAE5EuG,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,6CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,QAEVluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,OAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,0BAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAM4mB,SAAS7X,KAAI,SAAC0G,GACxB,IAAI5L,EAAS4L,EAAKyV,IACdiD,EAAkB1Y,EAAK9Z,OACvBsvB,EAAWxV,EAAKwV,SAChBG,EAAe3V,EAAK2V,aAExB,OACEhsB,IAAAC,cAAA,MAAIiB,IAAKmV,EAAK9c,OACZyG,IAAAC,cAAA,MAAI8B,UAAU,YACZ/B,IAAAC,cAAA,OAAK8B,UAAU,iCACb/B,IAAAC,cAAA,OAAK8B,UAAU,+BAA+B,iBAAe,YAC3D/B,IAAAC,cAAA,KAAG8B,UAAU,+BAEf/B,IAAAC,cAAA,OAAK8B,UAAU,mCACb/B,IAAAC,cAAA,KAAG8B,UAAU,0BAA0BwE,KAAK,0CAA0CwC,OAAO,SAASoH,IAAI,uBAAsB,oBAEhInQ,IAAAC,cAAA,UAAQ8B,UAAU,4BAA4BC,QAASvG,iBACrD,IAAIyP,QAAoB1F,EAAK/E,MAAMhE,QAAQsO,mBAAmBikB,mBAAmBvkB,EAAQskB,EAAiBlD,EAAUG,GACpH9gB,QAAoBzJ,OAAOhF,QAAQ8I,IAAI8F,KAAKH,GAC5CA,QAAoB1F,EAAK/E,MAAMhE,QAAQ8I,IAAI+F,mBAAmBJ,GAE9D1F,EAAKhE,SAAS,CACZsQ,YAAa,WAAa5G,EAAYlM,OACtC+S,UAAW/R,IAAAC,cAAA,KAAG8B,UAAU,kBAAkBwE,KAAM,sCAAwC2E,EAAYK,KAAMxC,OAAO,SAASoH,IAAI,uBAAsB,4BAGtJ1O,OAAOC,EAAE,UAAUC,MAAM,QACzB6D,EAAKnC,QAEP,GAAG,uBAITrD,IAAAC,cAAA,UAAKoW,EAAKwV,SAAS,KACnB7rB,IAAAC,cAAA,UAAMoW,EAAK9Q,IAAKuB,eAAe,SAAS,KAExC9G,IAAAC,cAAA,UAAKoW,EAAK9Z,OAAOyD,IAAAC,cAAA,WACdoW,EAAK0V,QAKd,UASZ/rB,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,2BAA0B,+BAG1C/B,IAAAC,cAAA,OAAK8B,UAAU,aAEZ8jB,GAAKlW,KAAI,SAACsf,EAAK11B,GAAK,OACnByG,IAAAC,cAACqlB,GAAO,CAACpkB,IAAK3H,EAAOgsB,SAAU0J,EAAI1J,SAAUC,OAAQyJ,EAAIzJ,QAAU,OAO3ExlB,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,eAE7B/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,SACG,eAAK,gCAA6BD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,KAAGsG,KAAK,iCAAiCwC,OAAO,SAASoH,IAAI,uBAAsB,YAAe,+CAYxJnQ,IAAAC,cAAA,OAAK8B,UAAU,aAAaE,GAAG,SAC7BjC,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,YACjClC,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,gBACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAeR,KAAKX,MAAMkR,aACxC9R,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,YAAY,kBAAgB,WAG9D/B,IAAAC,cAAA,OAAK8B,UAAU,cACb/B,IAAAC,cAAA,SAAIsB,KAAKX,MAAMmR,eAO3B,CAhnBE,OAAQ/R,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBAAsBqE,MAAO,CAAE2W,OAAQ,SACpD/c,IAAAC,cAAA,MAAI8B,UAAU,WAAU,8BAExB/B,IAAAC,cAAA,SACED,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBC,QAAS,kBAAMwD,EAAKnC,QAAQ,GAAE,UAGpErD,IAAAC,cAAA,SAAG,6FAEHD,IAAAC,cAAA,SAAG,+BAA4BD,IAAAC,cAAA,KAAGsG,KAAK,iCAAiCwC,OAAO,SAASoH,IAAI,uBAAsB,WAAW,gDAgmBjJ,CAEE,OAAQnQ,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBAAsBqE,MAAO,CAAE2W,OAAQ,SACpD/c,IAAAC,cAAA,MAAI8B,UAAU,WAAU,8BAExB/B,IAAAC,cAAA,SAAG,gFAC4ED,IAAAC,cAAA,WAC7ED,IAAAC,cAAA,KAAG8B,UAAU,kBAAkBwE,KAAK,8CAA6C,6BAoBvG,IAAC,CA5pDgB,CAASpE,aAgqDb4E,qBAAkB+e,ICpuDjC,IAAIF,GAAS9sB,EAAQ,KACrB,MAAMG,GAAYH,EAAQ,IAEpBo2B,GAAU,IAAIC,IAAQ,KAAM,CAAEC,KAAM,MAAO,IAE3CC,GAAQ,SAAA7uB,GAEZ,SAAA6uB,EAAY5uB,GAAQ,IAADC,E,MA8CsB,OA9CtBC,YAAA,KAAA0uB,G,EACjB,K,EAAAA,E,EAAA,CAAM5uB,G,kBAANC,E,iGAEKE,MAAQ,CAEXmlB,UAAU,EACVE,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,SAAU,IACVG,MAAM,EACNC,MAAM,EACNC,WAAY,MACZC,YAAa,aACbC,QAAS,aACTC,QAAS,GACTC,WAAY,aACZC,YAAa,EACbC,YAAa,EACbC,gBAAiB,EACjBC,cAAe,EACfC,OAAQ,GACRC,UAAW,GACXC,eAAgB,EAChBC,UAAW,EACXC,QAAS,EACTC,aAAc,EACdC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,cAAe,MACflgB,OAAQ,GACRmgB,QAAS,IACTG,UAAW,GACXC,aAAc,aACdC,SAAU,cAIZvnB,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAC9BA,EAAK6H,aAAe7H,EAAK6H,aAAaxH,KAAIL,GAC1CA,EAAKysB,eAAiBzsB,EAAKysB,eAAepsB,KAAIL,GAC9CA,EAAK0sB,WAAa1sB,EAAK0sB,WAAWrsB,KAAIL,GACtCA,EAAKusB,SAAWvsB,EAAKusB,SAASlsB,KAAIL,GAClCA,EAAK4sB,YAAc5sB,EAAK4sB,YAAYvsB,KAAIL,GAExCA,EAAK0H,QAAU1H,EAAK0H,QAAQrH,KAAIL,GAAOA,CAEzC,CAAC,OAAAM,YAAAquB,EAAA7uB,GAAAS,YAAAouB,EAAA,EAAAnuB,IAAA,oBAAAC,MAGD,WAAqB,IAADC,EAAA,KAClB,MAAQkC,KAAM/B,KAAKd,MACnB8C,SAAS1D,MAAQ,kBACjB0D,SAASC,eAAe,UAAUC,UAAYH,EAAE,aAEhDrG,YAAW,WACTmE,EAAKiC,QACP,GAAG,KAEHhC,aAAY,WACVD,EAAKiC,QACP,GAAG,IAGL,GAAC,CAAAnC,IAAA,eAAAC,MAGD1F,eAAmBuN,GAEjB,IAAIqjB,EAAWrjB,EAAMD,OAIrB,OAAQsjB,EAASpqB,IACf,IAAK,OAEH,GAAIoqB,EAASlrB,QAAUI,KAAKX,MAAMqlB,KAAM,CAGtC,IAAIqG,EAAW,EACX/qB,KAAKX,MAAMqlB,OACbqG,EAAW,GAKb,IACE,IAAI3tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB8mB,OAAQD,GACxD5wB,MAAMgK,EAAMxL,aAAe,aAAc,CACvCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZykB,KAAM9kB,GAEV,CAGA,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAMulB,SAAU,CAG1C,IAAIqG,EAAO,EACPF,EAAW,IACf,IAAK/qB,KAAKX,MAAMulB,SAAU,CACxBmG,EAAW,IACXE,EAAOlY,SAASmY,OAAO,yBAA0BlrB,KAAKX,MAAMwlB,WAE5DhqB,QAAQC,IAAImwB,GACZ,IAAI7tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBinB,aAAcF,GAE9D9wB,MAAMgK,EAAMxL,aAAe,mBAAoB,CAC7CuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAGzB,CAGA,IACE,IAAIA,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB0gB,SAAUmG,GAC1D5wB,MAAMgK,EAAMxL,aAAe,eAAgB,CACzCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZ2kB,SAAUhlB,GAEd,CAGA,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAM2lB,KAAM,CAGtC,IAAI+F,EAAW,IACX/qB,KAAKX,MAAM2lB,OACb+F,EAAW,KAKb,IACE,IAAI3tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB8gB,KAAM+F,GACtD5wB,MAAMgK,EAAMxL,aAAe,WAAY,CACrCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAIA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAIVI,KAAKC,SAAS,CACZ+kB,KAAMplB,GAEV,CAGA,MAEF,IAAK,SAEHI,KAAKC,SAAS,CACZ2lB,UAAWkF,EAASlrB,QAGtB,MAEF,IAAK,OAEH,GAAIkrB,EAASlrB,QAAUI,KAAKX,MAAM4lB,KAAM,CAGtC,IAAI8F,EAAW,IACX/qB,KAAKX,MAAM4lB,OACb8F,EAAW,KAKb,IACE,IAAI3tB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBwkB,oBAAqBqC,GACrE5wB,MAAMgK,EAAMxL,aAAe,0BAA2B,CACpDuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI2C,GAAQ,EACW,SAAnBkrB,EAASlrB,QACXA,GAAQ,GAGVI,KAAKC,SAAS,CACZglB,KAAMrlB,GAEV,EASJI,KAAK8B,QAEP,GAAC,CAAAnC,IAAA,UAAAC,MAED1F,eAAcmxB,GAEZ,IAAKrpB,SAASC,eAAe,YAAa,OAEtCjC,KAAKkK,MACPlK,KAAKkK,KAAKC,UAEZ,MAAMD,EAAOE,IAASC,IAAI,YAC1BH,EAAK8P,MAAM7P,UACX,IAAIK,EAAQN,EAAKO,UAAUC,SAASC,KAClCC,IAAcP,IAAIH,EAAM,CACtBY,MAAM,EACNwgB,OAAQphB,EAAKqhB,kBAKbhxB,EAAO,CAAC,CACVsR,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,OACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,KACRmR,KAAM,OACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,KACRmR,KAAM,OAER,CACExO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,QACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,QACL,CACDxO,KAAM,IAAItP,KAAK,aACf2M,OAAQ,IACRmR,KAAM,SAGR9f,EAAO8wB,EAGP,IAAI9e,EAAQ/B,EAAMgC,MAAM7B,KACtBC,IAAgBP,IAAIH,EAAM,CACxBmC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,MAKzC8B,EAAQxB,EAAMyB,MAAMtB,KACtBC,KAAmBP,IAAIH,EAAM,CAC3BgC,aAAc,CAAEC,SAAU,MAAOC,MAAO,GACxCC,SAAUzB,IAAoBP,IAAIH,EAAM,CAAC,GACzCshB,cAAe,UAGnBxf,EAAMzR,KAAKsT,OAAOtT,GAIJiQ,EAAMiC,OAAO9B,KACzBC,KAAmBP,IAAIH,EAAM,CAC3BtL,KAAM,MACNoN,MAAOA,EACPO,MAAOA,EACPG,YAAa,SACb+e,eAAgB,OAChB/oB,KAAM0H,KAAU,SAChBtH,OAAQsH,KAAU,YAGd7P,KAAKsT,OAAOtT,GAwBpBiQ,EAAMU,IAAI,SAAUN,IAAeP,IAAIH,EAAM,CAAC,IAE9ClK,KAAKkK,KAAOA,CACd,GAAC,CAAAvK,IAAA,WAAAC,MAED1F,eAAeK,GACb,IACE,IAAI6C,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBghB,WAAY3qB,SACtDJ,MAAMgK,EAAMxL,aAAe,iBAAkB,CACjDuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA+C,KAAK8B,QAEP,GAAC,CAAAnC,IAAA,iBAAAC,MAED1F,eAAqByxB,GAEnB,IACE,IAAIvuB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBihB,YAAawG,SACvDxxB,MAAMgK,EAAMxL,aAAe,kBAAmB,CAClDuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA+C,KAAK8B,QAEP,GAAC,CAAAnC,IAAA,aAAAC,MAED1F,eAAiBgW,GAEf,IACE,IAAI9S,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgBkhB,QAASlV,SACnD/V,MAAMgK,EAAMxL,aAAe,cAAe,CAC9CuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA+C,KAAK8B,QAEP,GAAC,CAAAnC,IAAA,cAAAC,MAED1F,eAAkBc,GAEhB,IACE,IAAIoC,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,eAAgB4nB,GAAI9wB,SAC9Cb,MAAMgK,EAAMxL,aAAe,SAAU,CACzCuE,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,IAIzB,CAAE,MAAOI,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA+C,KAAK8B,QACP,GAAC,CAAAnC,IAAA,SAAAC,MAED1F,iBAAgB,IAAD0J,EAAA,KAEb5D,KAAKC,SAAS,CACZiG,OAAQme,GAAO0C,GAAGC,OAAM,KAG1B,IAAIC,EAAM9iB,EAAMxL,aAEhB,IAAI6rB,EAAW,CAAE/mB,QAAQ,GAEzB,IACE+mB,QAAiBrqB,MAAM8sB,EAAM,mBAAqBjnB,KAAKd,MAAMgF,gBAC1D9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,GAGJ,CAAE,MAAOkD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAKA,GAAIunB,EAAS/mB,QAAUuC,KAAKd,MAAMioB,SAASC,QAAQC,UAAW,CAE5D,IAAI5C,QAAckJ,GAAQjiB,IAAI,cAC1B8b,EAAS,2BAECrvB,IAAVssB,GACFA,QAAczkB,KAAKd,MAAMioB,SAASC,QAAQO,YAAYH,GACtDmG,GAAQziB,IAAI,aAAcuZ,EAAO,CAAEsJ,OAAQ,SAE3CtJ,QAAckJ,GAAQjiB,IAAI,cAG5B,IAAIwb,GAAO,EACX,WACYhnB,OAAOhF,QAAQ8I,IAAI0jB,gBAAgBF,EAAQ/C,KAAWzkB,KAAKd,MAAMioB,SAASC,QAAQ3e,SAAWgc,KACrGyC,GAAO,EAGX,CAAE,MAAO1pB,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,QAAc9E,IAAVssB,GAAuByC,EAAM,CAE/BlnB,KAAKC,SAAS,CACZukB,UAAU,IAGZ,IAAIqD,EAAO,CAAC,EAEZ,IAEEA,QAAa1tB,MAAM8sB,EAAM,iBAAmBjnB,KAAKd,MAAMgF,gBACpD9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEhD,IACX,GAGJ,CAAE,MAAOiD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAEA,IAAI6qB,EAAU,IAAIpwB,GAA+C,KAApCmwB,EAAKE,QAAUF,EAAKG,eAAqB9pB,GAAG,GAAGF,WAExE8pB,GAAW,IACbA,EAAU,IAAMA,GAGdD,EAAKI,QACPJ,EAAKI,MAASJ,EAAKI,MAAOlG,eAIT,OAAf8F,EAAKI,QACPJ,EAAKI,MAAQ,OAKf,IAAIjU,QAAehU,KAAKd,MAAMhE,QAAQ8I,IAAIiQ,oBAAoBjU,KAAKd,MAAMgF,gBAGrEgkB,EAAiB,EACjBC,EAAsB,EAEtBC,EAAe,EACfC,EAAoB,EAGpBrU,EAAOS,cACTyT,EAAiBlU,EAAOS,YACxB0T,EAAsBnU,EAAOS,aAG3BT,EAAOU,aACTwT,GAAkBlU,EAAOU,YAGvBV,EAAOsU,eACTD,EAAoBrU,EAAOsU,cAGzBtU,EAAOuU,WACTF,GAAqBrU,EAAOuU,UAG9BH,EAAeC,EAEXrU,EAAOwU,cACTJ,GAAgBpU,EAAOwU,aAIrBxU,EAAOyU,UACTL,GAAgBpU,EAAOyU,SAGQ,IAA7BZ,EAAKa,oBACPb,EAAKa,qBAAsB,EAE3Bb,EAAKa,qBAAsB,EAI7B1oB,KAAKC,SAAS,CACZykB,KAAMmD,EAAKgB,OACXlE,SAAUkD,EAAKlD,SACfC,SAAUiD,EAAKjD,SACfC,SAAUgD,EAAKhD,SACfG,KAAM6C,EAAK7C,KACXC,KAAM4C,EAAKa,oBACXxD,WAAY2C,EAAKI,MACjBoE,QAASxE,EAAKwE,QACdhG,QAASwB,EAAKxB,QACdX,cAAmC,IAApBmC,EAAKiB,aACpB1D,QAASyC,EAAKzC,QACdkB,QAASuB,EAAKvB,QACdf,YAAasC,EAAKiB,aAClBtD,YAAa,IAAI9tB,GAAyB,IAAfmwB,EAAKE,SAAe7pB,GAAG,GAAGjB,SAAS,IAC9DwoB,gBAAiB,IAAI/tB,GAA8B,IAApBmwB,EAAKG,cAAoB9pB,GAAG,GAAGjB,SAAS,IACvE8rB,SAAUjB,EACVnC,OAAQkC,EAAKmB,OACblD,UAAWoC,EACXrC,eAAgBsC,EAEhBpC,QAASqC,EACTpC,aAAcqC,IAIhB,IAAInC,EAAW,CAAC,EAChB,IAEEA,QAAiB/rB,MAAM8sB,EAAM,oBAAqB,CAChD/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAU,CAAE/B,OAAQgF,KAAKd,MAAMgF,mBAIzC9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEhD,IACX,GAGJ,CAAE,MAAOiD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAIA,IAAIypB,EAAW,EAEf,IAEEA,QAAiBvsB,MAAM8sB,EAAM,gBAAiB,CAC5C/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAU,CAAE/B,OAAQgF,KAAKd,MAAMgF,mBAIzC9J,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEhD,IACX,GAGJ,CAAE,MAAOiD,GACP3C,QAAQC,IAAI0C,EAAMP,WACpB,CAIAypB,EAAY,IAAIhvB,GAAUgvB,GAAUxoB,GAAG,GAAGF,WAAYuH,eAAe,SAErEvF,KAAKC,SAAS,CAAEymB,SAAUA,IAE1B,IAAIP,EAAe,GACfM,EAAe,IAAI/uB,GAAU,GAEjCwuB,EAAWA,EAAS0G,aAAaxe,KAAI,SAAC0G,EAAM9c,GAK1C,OAHAmuB,EAAa1K,QAAQ,CAAE5P,KAAM,IAAItP,KAAiB,IAAZuY,EAAKjJ,MAAc3C,OAAQ,IAAIxR,GAAUod,EAAK5L,QAAQnL,WAAW,GAAGG,GAAG,GAAGF,WAAYqc,KAAMvF,EAAKuF,OAEvIoM,EAAeA,EAAalQ,KAAKzB,EAAK5L,QAEpCzK,IAAAC,cAAA,MAAIiB,IAAK3H,GACPyG,IAAAC,cAAA,UAAK2lB,GAAO6E,IAAgB,IAAZpU,EAAKjJ,MAAakb,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,QAC/D1qB,IAAAC,cAAA,UAAM,IAAIhH,GAAUod,EAAK5L,QAAQnL,WAAW,GAAGG,GAAG,GAAGF,WAAYuH,eAAe,UAEhF9G,IAAAC,cAAA,UAAKoW,EAAKuF,MAGhB,IAGAra,KAAKC,SAAS,CACZimB,SAAUA,EACVC,aAAcA,EACdM,aAAeA,EAAa1oB,WAAW,GAAGG,GAAG,GAAGF,WAAYuH,eAAe,SAAW,SAGxF,IAAI8f,EAAU,GAEd,IAEE,IAAIjoB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,gBAEhCmhB,QAAgBlrB,MAAM8sB,EAAM,eAAgB,CAC1C/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,KAEpBhD,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEgsB,aACX,GAIJ,CAAE,MAAO/rB,GAET,CAEA,IAAIgsB,EAAc,GAElB,MAAMwE,EAAiB3I,EAAQjX,KAAI,SAAC0G,EAAM9c,GAExCwxB,EAAY7e,KAAKmK,EAAK2U,UAEtB,IAAIC,EAAO,SAuBX,OApBEA,EADI5U,EAAK6U,WAAY5H,cAAevL,SAAS,OACtC,SAEA,OAGH1B,EAAK6U,WAAY5H,cAAevL,SAAS,UAC7C1B,EAAK6U,WAAa,QAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,SAC7C1B,EAAK6U,WAAa,OAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,aAC7C1B,EAAK6U,WAAa,WAKlBlrB,IAAAC,cAAA,MAAIiB,IAAK3H,GACPyG,IAAAC,cAAA,UAAMoW,EAAK5L,OAAQ3D,eAAe,SAAS,IAAEuP,EAAKwV,SAAS,MAAIxV,EAAK6U,WAAW,IAAClrB,IAAAC,cAAA,KAAG8B,UAAW,SAAWkpB,EAAO,WAChHjrB,IAAAC,cAAA,UAAKoW,EAAK2U,SAAShrB,IAAAC,cAAA,WAChB2lB,GAAO6E,IAAmB,IAAfpU,EAAK8U,SAAgB7C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAAQ,OAAQ9E,GAAO6E,IAAoB,IAAhBpU,EAAK+U,UAAiB9C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAAO1qB,IAAAC,cAAA,YAGrJD,IAAAC,cAAA,UAAKoW,EAAKyY,OAAO,QAGvB,IAGA,IAAI/G,EAAY,GAEhB,IAEE,IAAIppB,EAAO,CAAEpC,OAAQgF,KAAKd,MAAMgF,gBAEhCsiB,QAAkBrsB,MAAM8sB,EAAM,kBAAmB,CAC/C/pB,OAAQ,OACRC,QAAS,CACP,YAAavF,uBACb,eAAgB,oBAElBwF,KAAMN,KAAKC,UAAUK,KAEpBhD,MAAK,SAACmD,GACL,OAAOA,EAAEjD,MACX,IACCF,MAAK,SAACmD,GACL,OAAOA,EAAEusB,eACX,GAIJ,CAAE,MAAOtsB,GAET,CAGA,MAAMywB,EAAqBzH,EAAUpY,KAAI,SAAC0G,EAAM9c,GAE9CwxB,EAAY7e,KAAKmK,EAAK2U,UAEtB,IAAIC,EAAO,SAuBX,OApBEA,EADI5U,EAAK6U,WAAY5H,cAAevL,SAAS,OACtC,SAEA,OAGH1B,EAAK6U,WAAY5H,cAAevL,SAAS,UAC7C1B,EAAK6U,WAAa,QAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,SAC7C1B,EAAK6U,WAAa,OAId7U,EAAK6U,WAAY5H,cAAevL,SAAS,aAC7C1B,EAAK6U,WAAa,WAKlBlrB,IAAAC,cAAA,MAAIiB,IAAK3H,GACPyG,IAAAC,cAAA,UAAMoW,EAAK5L,OAAQ3D,eAAe,SAAS,IAAEuP,EAAKwV,SAAS,MAAIxV,EAAK6U,WAAW,IAAClrB,IAAAC,cAAA,KAAG8B,UAAW,SAAWkpB,EAAO,WAChHjrB,IAAAC,cAAA,UAAKoW,EAAK2U,SAAShrB,IAAAC,cAAA,WAChB2lB,GAAO6E,IAAmB,IAAfpU,EAAK8U,SAAgB7C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAAQ,OAAQ9E,GAAO6E,IAAoB,IAAhBpU,EAAK+U,UAAiB9C,GAAGnjB,EAAKvE,MAAM6G,QAAQijB,OAAO,OAAO1qB,IAAAC,cAAA,YAGrJD,IAAAC,cAAA,UAAKoW,EAAKyY,OAAO,QAGvB,IAGMxD,QAAuB/pB,KAAKd,MAAMhE,QAAQ8I,IAAIgmB,mCAAmChqB,KAAKd,MAAMgF,gBAElG,IAAIgqB,EAAoB,GAExB,GAAInE,EAAeE,WAEjB,IAAK,IAAIjyB,EAAQ,EAAGA,EAAQ+xB,EAAeE,WAAW/xB,OAAQF,IAG5D,GAFA+xB,EAAeE,WAAWjyB,GAASgI,KAAKd,MAAMhE,QAAQuN,QAAQmN,QAAQmU,EAAeE,WAAWjyB,KAEjC,IAA3DwxB,EAAY1T,QAAQiU,EAAeE,WAAWjyB,IAAgB,CAChE,IAAI6vB,QAAa7nB,KAAKd,MAAMhE,QAAQ8I,IAAIkmB,uBAAuBlqB,KAAKd,MAAMgF,eAAgB6lB,EAAeE,WAAWjyB,IAIpH,IAAK,IAAImyB,EAAS,EAAGA,EAAStC,EAAKuC,kBAAkBlyB,OAAQiyB,IAAU,CAErE,IAAIE,EAAQ,CACVrvB,OAAQ+uB,EAAeE,WAAWjyB,GAClCsyB,SAAU,SACVtmB,IAAK,EACLumB,IAAK,IACLC,OAAQ,qBAGN3C,EAAKuC,kBAAkBD,GAAQO,2BAEjCL,EAAMrmB,IAAM6jB,EAAKuC,kBAAkBD,GAAQO,0BAA4B,IAAM,EAC7EL,EAAME,IAAM1C,EAAKuC,kBAAkBD,GAAQO,0BACvC7C,EAAKuC,kBAAkBD,GAAQQ,yBACjCN,EAAMG,OAAS,IAAIjuB,KAAKsrB,EAAKuC,kBAAkBD,GAAQQ,wBACvDN,EAAMG,OAASnG,GAAO6E,IAAImB,EAAMG,QAAQzD,GAAG/mB,KAAKX,MAAM6G,QAAQijB,OAAO,UAGvEkB,EAAMrmB,IAAM6jB,EAAKuC,kBAAkBD,GAAQS,6BAA+B,IAAM,EAChFP,EAAME,IAAM1C,EAAKuC,kBAAkBD,GAAQS,6BACvC/C,EAAKuC,kBAAkBD,GAAQU,4BACjCR,EAAMG,OAAS,IAAIjuB,KAAKsrB,EAAKuC,kBAAkBD,GAAQU,2BACvDR,EAAMG,OAASnG,GAAO6E,IAAImB,EAAMG,QAAQzD,GAAG/mB,KAAKX,MAAM6G,QAAQijB,OAAO,QAKvEkB,EAAMC,SAAW,aAInB4D,EAAkBvjB,KAAK0f,EAGzB,CAEF,CAMJ,MAAM8D,EAAuBD,EAAkB9f,KAAI,SAAC0G,EAAM9c,GAGxD,IAAIkR,EAAS4L,EAAKyV,IACdiD,EAAkB1Y,EAAK9Z,OACvBsvB,EAAWxV,EAAKwV,SAChBG,EAAe7mB,EAAK1E,MAAMgF,eAE9B,OACEzF,IAAAC,cAAA,MAAIiB,IAAK3H,GACPyG,IAAAC,cAAA,MAAI8B,UAAU,YACZ/B,IAAAC,cAAA,OAAK8B,UAAU,iCACb/B,IAAAC,cAAA,OAAK8B,UAAU,+BAA+B,iBAAe,YAC3D/B,IAAAC,cAAA,KAAG8B,UAAU,+BAEf/B,IAAAC,cAAA,OAAK8B,UAAU,mCACb/B,IAAAC,cAAA,KAAG8B,UAAU,0BAA0BwE,KAAK,2CAA2C,oBAEvFvG,IAAAC,cAAA,UAAQ8B,UAAU,4BAA4BC,QAASvG,iBACrD,IAAIyP,QAAoB/F,EAAK1E,MAAMhE,QAAQsO,mBAAmBikB,mBAAmBvkB,EAAQskB,EAAiBlD,EAAUG,GACpH9gB,QAAoB/F,EAAK1E,MAAMhE,QAAQ8I,IAAI8F,KAAKH,GAChDA,QAAoB/F,EAAK1E,MAAMhE,QAAQ8I,IAAI+F,mBAAmBJ,GAE9D/F,EAAK3D,SAAS,CACZsQ,YAAa,WAAa5G,EAAYlM,OACtC+S,UAAW/R,IAAAC,cAAA,KAAGsG,KAAM,sCAAwC2E,EAAYK,MAAM,4BAGhF9J,OAAOC,EAAE,UAAUC,MAAM,OAE3B,GAAG,uBAIT3B,IAAAC,cAAA,UAAKoW,EAAKwV,SAAS,KACnB7rB,IAAAC,cAAA,UAAMoW,EAAK9Q,IAAKuB,eAAe,SAAS,KAExC9G,IAAAC,cAAA,UAAKoW,EAAK9Z,OAAOyD,IAAAC,cAAA,WACdoW,EAAK0V,QAQd,IAKAxqB,KAAKC,SAAS,CACZolB,QAAS2I,EACT/H,SAAUkI,EACV3H,UAAWyH,GAGf,CACF,MACEjuB,KAAKC,SAAS,CACZukB,UAAU,GAIhB,GAAC,CAAA7kB,IAAA,SAAAC,MAID,WAAU,IAADqE,EAAA,KAGP,GAAIjE,KAAKX,MAAMmlB,SAAU,CAGvB,IAAIyH,EAAUxtB,IAAAC,cAAA,UAAQ8B,UAAU,mCAAmCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,KAAG8B,UAAU,yBAA2B,YAE7KR,KAAKX,MAAMqlB,OAEbuH,EAAUxtB,IAAAC,cAAA,UAAQ8B,UAAU,iCAAiCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,KAAG8B,UAAU,0BAA4B,eAExKR,KAAKX,MAAMslB,WACbsH,EAAUxtB,IAAAC,cAAA,UAAQ8B,UAAU,oCAAoCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,KAAG8B,UAAU,4BAA8B,aAMrL,IAAI2rB,EAAc1tB,IAAAC,cAAAD,IAAA6B,SAAA,MA+ClB,MA7C8B,QAA1BN,KAAKX,MAAM6lB,aAEbiH,EAAc1tB,IAAAC,cAAA,OAAK8B,UAAU,kBAC3B/B,IAAAC,cAAA,OAAK8B,UAAU,YACb/B,IAAAC,cAAA,OAAK8B,UAAU,UAAS,0CACxB/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,SAAO6B,KAAK,OAAOC,UAAU,eAAeE,GAAG,SAASmE,MAAO,CAAEunB,YAAa,WAAa9d,YAAatO,KAAKX,MAAMsmB,OAAQxX,SAAUnO,KAAKgH,aAAcyP,UAAU,KAEpKhY,IAAAC,cAAA,OAAK8B,UAAU,SACb/B,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,oFAAoFmC,QAAS,WAE3IwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,sFAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,OAMoB,KAAtBJ,KAAKX,MAAMsmB,QAAiBxqB,IAAQkoB,UAAUrjB,KAAKX,MAAMumB,YAAc5lB,KAAKX,MAAMsmB,SAAW3lB,KAAKX,MAAMumB,YAE1GuG,EAAe1tB,IAAAC,cAAAD,IAAA6B,SAAA,KACZ6rB,EACD1tB,IAAAC,cAAA,UAAQ8B,UAAU,4BAA4BD,KAAK,SAASE,QAAS,WACnEwD,EAAK8nB,YAAY9nB,EAAK5E,MAAMumB,UAC9B,GAAG,4BAgBDnnB,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBAGb/B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,4BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU,YAG1B/B,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAWyrB,EAAQ,MAEnCxtB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,oCAAoCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU5G,IAAAC,cAAA,OAAK8D,OAAO,OAAOyC,IAAI,qBAAqBC,IAAI,KAAS,IAAElF,KAAKX,MAAMmmB,YAAY,OAAKxlB,KAAKX,MAAMomB,gBAAgB,OAEtRhnB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU/B,IAAAC,cAAA,UAAQ8B,UAAU,sCAAsCqE,MAAO,CAAE8J,OAAQ,UAAWud,UAAW,UAAW7mB,SAAU,SAAU,IAAC5G,IAAAC,cAAA,QAAMiC,KAAK,MAAM,aAAW,KAAI,gBAAS,YAAUX,KAAKX,MAAMqmB,cAAc,OAGrOjnB,IAAAC,cAAA,OAAK8B,UAAU,2BAA0B,WAC7BR,KAAKX,MAAMymB,UAAWvgB,eAAe,SAAS,IAAGvF,KAAKX,MAAMwmB,eAAgBtgB,eAAe,SAAS,KAAE9G,IAAAC,cAAA,OAAK8D,OAAO,OAAOyC,IAAI,oBAAoBC,IAAI,KAC/JzG,IAAAC,cAAA,OAAK8B,UAAU,WAAWqE,MAAO,CAAE0e,OAAQ,MAAOrV,gBAAiB,cACjEzP,IAAAC,cAAA,OAAK8B,UAAU,0BAA0BG,KAAK,cAAckE,MAAO,CAAE,MAAW7E,KAAKX,MAAMymB,UAAY9lB,KAAKX,MAAMwmB,eAAkB,IAAO,KACzI,gBAAgB7lB,KAAKX,MAAMymB,UAAY9lB,KAAKX,MAAMwmB,eAAkB,IAAK,gBAAc,IAAI,gBAAc,UAI/GpnB,IAAAC,cAAA,OAAK8B,UAAU,2BAA0B,cAC1BR,KAAKX,MAAM0mB,QAASxgB,eAAe,SAAS,IAAGvF,KAAKX,MAAM2mB,aAAczgB,eAAe,SAAS,iBAC7G9G,IAAAC,cAAA,OAAK8B,UAAU,WAAWqE,MAAO,CAAE0e,OAAQ,MAAOrV,gBAAiB,cACjEzP,IAAAC,cAAA,OAAK8B,UAAU,uBAAuBG,KAAK,cAAckE,MAAO,CAAE,MAAW7E,KAAKX,MAAM0mB,QAAU/lB,KAAKX,MAAM2mB,aAAgB,IAAO,KAClI,gBAAgBhmB,KAAKX,MAAM0mB,QAAU/lB,KAAKX,MAAM2mB,aAAgB,IAAK,gBAAc,IAAI,gBAAc,UAO3GvnB,IAAAC,cAAA,OAAK8B,UAAU,4CACb/B,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOka,QAAS5a,KAAKX,MAAMqlB,KAAMvW,SAAUnO,KAAKgH,eACvGvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,QAAKjQ,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,uBAAuBmC,QAAS,WAExJwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,yBAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAEF3B,IAAAC,cAAA,OAAK8B,UAAU,4CACb/B,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOka,QAAS5a,KAAKX,MAAM2lB,KAAM7W,SAAUnO,KAAKgH,eACvGvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,QAAKjQ,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,oEAAoEmC,QAAS,WAErMwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,sEAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAEF3B,IAAAC,cAAA,OAAK8B,UAAU,4CACb/B,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOka,QAAS5a,KAAKX,MAAM4lB,KAAM9W,SAAUnO,KAAKgH,eACvGvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,iBAAcjQ,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,mDAAmDmC,QAAS,WAE7LwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,qDAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,MAEF3B,IAAAC,cAAA,OAAK8B,UAAU,6CACb/B,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBD,KAAK,WAAWG,GAAG,OAAOka,QAAS5a,KAAKX,MAAMulB,SAAUzW,SAAUnO,KAAKgH,eAC3GvI,IAAAC,cAAA,SAAO8B,UAAU,mBAAmBkO,QAAQ,0BAAyB,mBAAkB1O,KAAKX,MAAMwlB,SAAUtf,eAAe,SAAS,IAAC9G,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,2DAA2DmC,QAAS,WAEvPwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,6DAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,OAMJ3B,IAAAC,cAAA,OAAK8B,UAAU,YAEb/B,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,mCAAmCqE,MAAO,CAAEtC,MAAO,OAAS,iBAAe,WAAW7B,GAAG,SAAS,iBAAeV,KAAKX,MAAMgtB,QAAQ,QAAa,IAAE,KAAK,IAAC5tB,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,uDAAuDmC,QAAS,WAEvSwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,yDAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,IACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,SAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK2nB,eAAe,MAAM,GAAE,YAC7EntB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK2nB,eAAe,MAAM,GAAE,YAC7EntB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK2nB,eAAe,OAAO,GAAE,eAIlFntB,IAAAC,cAAA,OAAK8B,UAAU,2BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kCAAkCqE,MAAO,CAAEtC,MAAO,OAAS,iBAAe,WAAW7B,GAAG,SAAQ,aAAWV,KAAKX,MAAM+lB,SAAiB,IAAC3mB,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,+DAA+DmC,QAAS,WAE9RwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,iEAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,IACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,SAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK4nB,WAAW,KAAK,GAAE,MACxEptB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK4nB,WAAW,EAAE,GAAG,UACtEptB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK4nB,WAAW,EAAE,GAAE,UACrEptB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAK4nB,WAAW,GAAG,GAAE,aAK1EptB,IAAAC,cAAA,OAAK8B,UAAU,4BACb/B,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,kCAAkCqE,MAAO,CAAEtC,MAAO,UAAY,iBAAe,WAAW7B,GAAG,QAAQ,eAAaV,KAAKX,MAAM6lB,YAAoB,IAAE,KAAK,IAACzmB,IAAAC,cAAA,KAAG8B,UAAU,6BAA6BlC,MAAM,iFAAiFmC,QAAS,WAE/TwD,EAAKhE,SAAS,CACZsQ,YAAa,OACbC,UAAW,mFAGbtQ,OAAOC,EAAE,UAAUC,MAAM,OAC3B,IACA3B,IAAAC,cAAA,OAAK8B,UAAU,gBAAgB,kBAAgB,QAC7C/B,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAKynB,SAAS,KAAK,GAAE,OACtEjtB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAKynB,SAAS,YAAY,GAAE,aAC7EjtB,IAAAC,cAAA,UAAQ8B,UAAU,gBAAgBC,QAAS,kBAAMwD,EAAKynB,SAAS,SAAS,GAAE,YAI9EjtB,IAAAC,cAAA,OAAK8B,UAAU,4BACZ2rB,QASb1tB,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,6BACb/B,IAAAC,cAAA,MAAI8B,UAAU,uBAAsB,iBAEtC/B,IAAAC,cAAA,OAAK8B,UAAU,8BACb/B,IAAAC,cAAA,OAAK8B,UAAU,QAAO,QAAMR,KAAKX,MAAMgtB,QAAQ,QAC/C5tB,IAAAC,cAAA,WACAD,IAAAC,cAAA,OAAK8B,UAAU,kBAAmBR,KAAKX,MAAMgnB,QAAS9gB,eAAe,SAAS,QAC9E9G,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OAAK8B,UAAU,QAAO,2BAAwB/B,IAAAC,cAAA,SAAIsB,KAAKX,MAAMinB,UAE7D7nB,IAAAC,cAAA,WAEAD,IAAAC,cAAA,OAAK8B,UAAU,QAAO,yBAAsB/B,IAAAC,cAAA,WACvCD,IAAAC,cAAA,SAAIsB,KAAKX,MAAMqnB,SAAS,QAAQ,UAW/CjoB,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,QAAMR,KAAKX,MAAM6mB,SAAShuB,OAAO,eAAa8H,KAAKX,MAAMonB,eAEtFhoB,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,8CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,QAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,UAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,UAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAM6mB,aAMpBznB,IAAAC,cAAA,OAAK8B,UAAU,sBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OAAOE,GAAG,WAAWmE,MAAO,CAAErC,OAAQxC,KAAKX,MAAM+mB,cAAelY,gBAAiB,WAChGzP,IAAAC,cAAA,UAAQ8B,UAAU,kBAAkBC,QAAS,WAAyC,QAA7BwD,EAAK5E,MAAM+mB,eAA2BniB,EAAKhE,SAAS,CAAEmmB,cAAe,UAAYniB,EAAK4C,QAAQ5C,EAAK5E,MAAM8mB,gBAAuBliB,EAAKhE,SAAS,CAAEmmB,cAAe,QAAUniB,EAAKiG,KAAKC,UAAa,GAAG,+BAQtQ1L,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,kBAAgBR,KAAKX,MAAMgmB,QAAQntB,OAAO,MAEvEuG,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,8CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,qBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,gBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAMgmB,cASxB5mB,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,oBAAkBR,KAAKX,MAAMmnB,UAAUtuB,OAAO,MAE3EuG,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,8CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,qBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,gBAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAMmnB,gBASxB/nB,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,eACb/B,IAAAC,cAAA,MAAI8B,UAAU,cAAa,sBAAoBR,KAAKX,MAAM4mB,SAAS/tB,OAAO,MAE5EuG,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,oDAAoDqE,MAAO,CAAErC,OAAQ,UAClF/D,IAAAC,cAAA,SAAO8B,UAAU,6CACf/B,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIiuB,MAAM,QAEVluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,YAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,OAChBluB,IAAAC,cAAA,MAAIiuB,MAAM,OAAM,0BAGpBluB,IAAAC,cAAA,aACGsB,KAAKX,MAAM4mB,mBAgBhCxnB,IAAAC,cAAA,OAAK8B,UAAU,aAAaE,GAAG,SAC7BjC,IAAAC,cAAA,OAAK8B,UAAU,eAAeG,KAAK,YACjClC,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,gBACb/B,IAAAC,cAAA,MAAI8B,UAAU,eAAeR,KAAKX,MAAMkR,aACxC9R,IAAAC,cAAA,UAAQ6B,KAAK,SAASC,UAAU,YAAY,kBAAgB,WAG9D/B,IAAAC,cAAA,OAAK8B,UAAU,cACb/B,IAAAC,cAAA,SAAIsB,KAAKX,MAAMmR,eAO3B,CACE,OAAQ/R,IAAAC,cAAAD,IAAA6B,SAAA,KAEN7B,IAAAC,cAAA,OAAK8B,UAAU,mBACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,UACb/B,IAAAC,cAAA,OAAK8B,UAAU,iBACb/B,IAAAC,cAAA,OAAK8B,UAAU,uBACb/B,IAAAC,cAAA,MAAI8B,UAAU,WAAU,UAExB/B,IAAAC,cAAA,SAAG,wEAAqED,IAAAC,cAAA,KAAG8B,UAAU,kBAAkBwE,KAAK,8CAA6C,mBAiB7K,IAAC,CA72CW,CAASpE,aAg3CR4E,qBAAkBsoB,ICp2CjC,MAAMM,GAAY72B,EAAQ,KAG1B,IAAI82B,GAAa,KAEjB,MAAMnzB,GAAU,CAAC,EAEXksB,GAAU,IAAIkH,IAEdC,GAAgB,qCAEhBtf,GAAaxQ,IAAAC,cAAA,OAAKuG,IAAI,sBAAsBzC,OAAO,OAAO0C,IAAI,eAE9DyoB,GAAU,IAAIC,IAAQ,KAAM,CAAEC,KAAM,IAAKE,OAAQ,SAEvD,IAAIS,GAAQb,GAAQjiB,IAAI,UAAY,QACpC1J,SAASysB,gBAAgBC,aAAa,qBAAsBF,IAE5D,IAAIG,GAAQ,EAcZ,IAAI9tB,GAAa,EACbC,GAAa,KAEX8tB,GAAG,SAAA3vB,GACP,SAAA2vB,EAAY1vB,GAAQ,IAADC,E,MAuCwC,OAvCxCC,YAAA,KAAAwvB,G,EACjB,K,EAAAA,E,EAAA,CAAM1vB,G,kBAANC,E,iGAEKE,MAAQ,CACXwvB,KAAM,GACN3qB,eAAgBqqB,GAChBpH,SAAU,CACR2H,WAAW,EACXC,UAAU,EACVC,QAAQ,EACR5H,QAAS,CAAC,GAEZlsB,QAASA,GACTiH,SAAU,CACRC,OAAO,EACPoG,UAAW,KACXjP,KAAM,KACNqiB,KAAM,KACNvH,QAAS,KACT1a,KAAM,KACNN,KAAM,KACNC,KAAM,KACNI,KAAM,KACNF,KAAM,KACNy1B,SAAU,KACV7qB,eAAgB,KAChB8P,oBAAqB,MAGvBgb,UAAU,EACVC,aAAc,gBACdvoB,IAAK,CAAC,GAGRzH,EAAKiwB,SAAWjwB,EAAKiwB,SAAS5vB,KAAIL,GAClCA,EAAK2C,OAAS3C,EAAK2C,OAAOtC,KAAIL,GAE9BA,EAAKkwB,MAAQlwB,EAAKkwB,MAAM7vB,KAAIL,GAC5BA,EAAKmwB,cAAgBnwB,EAAKmwB,cAAc9vB,KAAIL,GAC5CA,EAAKowB,iBAAmBpwB,EAAKowB,iBAAiB/vB,KAAIL,GAAOA,CAE3D,CAAC,OAAAM,YAAAmvB,EAAA3vB,GAAAS,YAAAkvB,EAAA,EAAAjvB,IAAA,oBAAAC,MAED1F,iBAA2B,IAAD2F,EAAA,KAExBmC,SAASysB,gBAAgBC,aAAa,qBAAsBF,IAE5D,IAAMW,gBAAiBnvB,KAAKX,MAE5B2C,SAASC,eAAe,SAASutB,UAAY,6EAA+EpB,GAAUe,GAAgB,mGACtJntB,SAASC,eAAe,YAAYwtB,QAAU,WAAQ5vB,EAAKuvB,UAAS,EAAO,EAE3EtuB,GAAahB,aAAY,WACvBD,EAAKwvB,QACLxvB,EAAK0vB,mBACDhzB,KAAKC,OAASqE,KAGdA,GADEhB,EAAKR,MAAM8nB,SAAS2H,YAAcjvB,EAAKR,MAAM8nB,SAAS4H,SAC3CxyB,KAAKC,MAAQ,IAEbD,KAAKC,MAAQ,IAE5BqD,EAAKiC,QAAO,GAGhB,GAAG,IAEL,GAAC,CAAAnC,IAAA,uBAAAC,MAED1F,iBACE6F,cAAce,GAChB,GAAC,CAAAnB,IAAA,mBAAAC,MAGD1F,iBACE,MAAQipB,QAASnjB,KAAKd,MACtB,IACEmvB,GAAarsB,SAASC,eAAe,aAAarC,KACpD,CAAE,MAAOpC,GACP3C,QAAQC,IAAI0C,EACd,CAEI2lB,EAAKuM,mBAAqBrB,IAC5BlL,EAAKwM,eAAetB,GAGxB,GAAC,CAAA1uB,IAAA,WAAAC,MAGD1F,eAAe01B,GAAY,IAADhsB,EAAA,KAoBxB,OAlBK5D,KAAKX,MAAM6vB,WAAa9H,GAAQC,WAAasH,GAAQ,IACxD3uB,KAAKC,SAAS,CAAEivB,UAAU,UAEpB9H,GAAQyI,UACXl1B,OAAM,SAAC2M,GACNzM,QAAQC,IAAIwM,EAAErK,YACd2G,EAAK3D,SAAS,CAAE2G,IAAK,CAAEtI,MAAO,0BAA2BgB,QAASgI,EAAErK,cACpE0xB,IAEF,IAEEvH,GAAQC,WAAWrnB,KAAK8B,SAE5B9B,KAAKC,SAAS,CAAEivB,UAAU,KAKrB9H,GAAQC,SAGjB,GAAC,CAAA1nB,IAAA,SAAAC,MAED1F,iBAAgB,IAAD+J,EAAA,KAEb,IAAMkjB,WAAUjjB,iBAAgBirB,gBAAiBnvB,KAAKX,MAiBtD,GAfIa,OAAOhF,UACTisB,EAAoB,WAAI,GAGrBC,GAAQ3e,eACLzI,KAAKovB,UAAS,GAGlBhI,GAAQ3e,UACV0e,EAAmB,UAAI,EACvBA,EAAkB,QAAIC,GACtBljB,EAAiBkjB,GAAQ3e,SAIvBvE,IAAmBqqB,GAAe,CACpC,IAAIuB,EAAa5rB,EAAe6rB,UAAU,EAAG,GAAK,MAAQ7rB,EAAe6rB,UAAU7rB,EAAehM,OAAS,EAAGgM,EAAehM,QAC7H8J,SAASC,eAAe,SAASutB,UAAY,yCAA2CpB,GAAUlqB,GAAkB,MAAQkqB,GAAU0B,GAAc,SAEtJ,MACE9tB,SAASC,eAAe,SAASutB,UAAY,6EAA+EpB,GAAUe,GAAgB,mGACtJntB,SAASC,eAAe,YAAYwtB,QAAU,WAAQxrB,EAAKmrB,UAAS,EAAO,EAG7EpvB,KAAKC,SAAS,CACZiE,iBACAijB,SAAUA,EACVjsB,cAAeiJ,EAAMpJ,WAAWmJ,KAIlClE,KAAKsvB,eAGP,GAAC,CAAA3vB,IAAA,QAAAC,MAED,WACE,IAAIqnB,EAAM/mB,OAAOgiB,SAASld,KAkB1B,OAjBIiiB,EAAInR,QAAQ,OAAS,IACvBmR,EAAOA,EAAI3uB,MAAM,MAAO,GACpB2uB,EAAInR,QAAQ,MAAQ,IAAGmR,EAAOA,EAAI3uB,MAAM,KAAM,IAC9C2uB,EAAInR,QAAQ,MAAQ,IAAGmR,EAAOA,EAAI3uB,MAAM,KAAM,IAC9C2uB,EAAInR,QAAQ,MAAQ,IAAGmR,EAAOA,EAAI3uB,MAAM,KAAM,IAC9C2uB,IAAQ/mB,OAAOgiB,SAAS8N,OAAS,KAAe,gBAAR/I,IAAuBA,EAAM,IACzEA,EAAG,MAAAlN,OAASkN,GACZ/mB,OAAOgiB,SAAS/Y,QAAQ8d,IAGtBA,EAAInR,QAAQ,QAAU,IAAGmR,EAAOA,EAAI3uB,MAAM,OAAQ,IAClD2uB,EAAInR,QAAQ,MAAQ,IAAGmR,EAAOA,EAAI3uB,MAAM,KAAM,IAC9C2uB,EAAInR,QAAQ,MAAQ,IAAGmR,EAAOA,EAAI3uB,MAAM,KAAM,IAC9C2uB,EAAInR,QAAQ,MAAQ,IAAGmR,EAAOA,EAAI3uB,MAAM,KAAM,IAC9C2uB,IAAQ/mB,OAAOgiB,SAAS8N,OAAS,KAAe,gBAAR/I,IAAuBA,EAAM,IAEzEjnB,KAAKC,SAAS,CAAE4uB,KAAM5H,IACfA,CACT,GAAC,CAAAtnB,IAAA,gBAAAC,MAED1F,iBACE,IAAMgK,iBAAgB/B,YAAanC,KAAKX,MAEpC4wB,QAAsB9rB,EAAMpJ,WAAWmJ,GAyE3C,OAvEsB,OAAlB/B,EAAS5I,MAAgC,KAAf4K,EAAM5K,OAClC02B,QAAsB9rB,EAAMpJ,WAAWmJ,EAAgB,GACvD/B,EAAS5I,KAAO02B,EAAchY,SAAS9T,EAAMvK,UAAWuK,EAAM5K,OAG1C,OAAlB4I,EAAS9I,MAAgC,KAAf8K,EAAM9K,OAClC42B,QAAsB9rB,EAAMpJ,WAAWmJ,EAAgB,GACvD/B,EAAS9I,KAAO42B,EAAchY,SAAS9T,EAAMvK,UAAWuK,EAAM9K,MAC9D8I,EAAS7I,KAAO22B,EAAchY,SAAS9T,EAAMvK,UAAWuK,EAAM7K,OAIrC,OAAvB6I,EAASqG,WAAmC,KAAbrE,EAAMpL,KACvCoJ,EAASqG,UAAYynB,EAAchY,SAAS9T,EAAMpK,OAAQoK,EAAMpL,KAGxC,OAAtBoJ,EAAS8sB,UAAmC,KAAd9qB,EAAMnL,MACtCi3B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAAS8sB,eAAiBgB,EAAchY,WAAW0H,GAAGxb,EAAMnL,MAG9B,OAA5BmJ,EAASiC,gBAA8C,KAAnBD,EAAMlL,WAC5Cg3B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAAS+tB,MAAQD,EAAchY,SAASkY,EAAWhsB,EAAMlL,UAEzDg3B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAASiC,eAAiB6rB,EAAchY,SAASmY,EAAcjsB,EAAMlL,WAGlC,OAAjCkJ,EAAS+R,qBAAmD,KAAnB/P,EAAMjL,WACjD+2B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAASkuB,WAAaJ,EAAchY,SAASkY,EAAWhsB,EAAMjL,UAE9D+2B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAAS+R,oBAAsB+b,EAAchY,SAASqY,EAAgBnsB,EAAMjL,WAGxD,OAAlBiJ,EAAS3I,MAAgC,KAAf2K,EAAM3K,OAClCy2B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAAS3I,KAAOy2B,EAAchY,SAAS9T,EAAMvK,UAAWuK,EAAM3K,OAG1C,OAAlB2I,EAASzI,MAAgC,KAAfyK,EAAMzK,OAClCu2B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAASzI,WAAau2B,EAAchY,WAAW0H,GAAGxb,EAAMzK,OAGpC,OAAlByI,EAASyZ,MAA+B,KAAdzX,EAAMhL,MAClC82B,QAAsB9rB,EAAMpJ,WAAWmJ,GACvC/B,EAASyZ,WAAaqU,EAAchY,WAAW0H,GAAGxb,EAAMhL,MAGpC,OAAlBgJ,EAASxI,MAAgC,KAAfwK,EAAMxK,OAClCs2B,QAAsB9rB,EAAMpJ,WAAWmJ,EAAgB,GACvD/B,EAASxI,WAAas2B,EAAchY,WAAW0H,GAAGxb,EAAMxK,OAGjC,OAArBwI,EAASkS,SAAkC,KAAdlQ,EAAM/K,MACrC62B,QAAsB9rB,EAAMpJ,WAAWmJ,EAAgB,GACvD/B,EAASouB,aAAeN,EAAchY,SAASkY,EAAWhsB,EAAM/K,KAEhE62B,QAAsB9rB,EAAMpJ,WAAWmJ,EAAgB,GACvD/B,EAASkS,QAAU4b,EAAchY,SAASuY,EAAarsB,EAAM/K,MAG/D+I,EAASC,OAAQ,EAEjBpC,KAAKC,SAAS,CACZkC,SAAUA,IAGLA,CAET,GAAC,CAAAxC,IAAA,SAAAC,MAED,WAEE,MAAQujB,QAASnjB,KAAKd,MACtB,IAAMioB,WAAUhlB,WAAU+B,iBAAgBhJ,UAAS0L,MAAKioB,QAAS7uB,KAAKX,MAElEoxB,EAAUhyB,IAAAC,cAAAD,IAAA6B,SAAA,MAMd,QAJwBnI,IAApB+H,OAAO2J,WACTsd,EAAS4H,UAAW,GAGjB5sB,EAASC,OAAU+kB,EAAS4H,SAsB/B,OAAQF,GAEN,IAAK,OACH4B,EAAUhyB,IAAAC,cAACkH,GAAI,CAAC1B,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,IAC7E,MACF,IAAK,OACHu1B,EAAUhyB,IAAAC,cAACgyB,GAAI,CAACxsB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,IAC7E,MACF,IAAK,OACHu1B,EAAUhyB,IAAAC,cAACiyB,GAAG,CAACzsB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,IAC5E,MACF,IAAK,OACHu1B,EAAUhyB,IAAAC,cAACkyB,GAAO,CAAC1sB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,IAChF,MACF,IAAK,OACL,IAAK,OAmBL,QACEu1B,EAAWhyB,IAAAC,cAAAD,IAAA6B,SAAA,KACT7B,IAAAC,cAACN,EAAG,CACFE,MAAM,4DACNC,YAAY,2LAEdE,IAAAC,cAACmyB,GAAI,CAAC3sB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,KAErE,MAlBF,IAAK,MACHu1B,EAAUhyB,IAAAC,cAACoyB,GAAG,CAAC5sB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,EAASisB,SAAUA,IAC/F,MACF,IAAK,MACHsJ,EAAUhyB,IAAAC,cAACqyB,GAAG,CAAC7sB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,EAASisB,SAAUA,IAC/F,MACF,IAAK,YACL,IAAK,SACHsJ,EAAUhyB,IAAAC,cAACsyB,EAAI,CAAC9sB,eAAgBA,EAAgB/B,SAAUA,EAAUjH,QAASA,SArDjFu1B,EACEhyB,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,OACb/B,IAAAC,cAAA,OAAK8B,UAAU,aACb/B,IAAAC,cAAA,OAAK8B,UAAU,QACb/B,IAAAC,cAAA,OAAK8B,UAAU,MAAMqE,MAAO,CAAE,QAAW,MAAO,WAAc,SAC5DpG,IAAAC,cAAA,OAAK8B,UAAU,YACb/B,IAAAC,cAAA,UAAKykB,EAAKphB,EAAE,UAAW,CAAEwV,eAAe,IAAQ,GAAItI,IACpDxQ,IAAAC,cAAA,SACGykB,EAAKphB,EAAE,UAAW,CAAEwV,eAAe,IAAQ,UA2D9D,OAAQ9Y,IAAAC,cAAAD,IAAA6B,SAAA,KACN7B,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAAA,aAAQmwB,EAAK32B,OAAS,EAAI22B,EAAKnU,cAAc,MAAQ,GAAI,kBACzDjc,IAAAC,cAAA,QAAMI,SAAS,WAAWD,SAAUgwB,EAAK32B,OAAS,EAAI22B,EAAKnU,cAAc,MAAQ,IAAM,mBACvFjc,IAAAC,cAAA,QAAMI,SAAS,iBAAiBD,QAAQ,oEACxCJ,IAAAC,cAAA,QAAMI,SAAS,WAAWD,QAAS,qBAAqBgwB,EAAK,SAC7DpwB,IAAAC,cAAA,QAAMI,SAAS,SAASD,QAAS,MAAMgwB,KAGxC4B,EACDhyB,IAAAC,cAACM,EAAU4H,GACXnI,IAAAC,cAAA,UAAQgC,GAAG,eAAeD,QAAS,WAzWrC+tB,GADY,UAAVA,GACM,OAEA,QAGVxsB,SAASysB,gBAAgBC,aAAa,qBAAsBF,IAC5Db,GAAQziB,IAAI,QAASsjB,GAmWyC,GACxD/vB,IAAAC,cAAA,OAAKiE,MAAM,6BAA6BH,OAAO,OAAOC,QAAQ,iBAAiBF,MAAM,QAAO9D,IAAAC,cAAA,QAAMmE,EAAE,0LACpGpE,IAAAC,cAAA,OAAKiE,MAAM,6BAA6BH,OAAO,OAAOC,QAAQ,iBAAiBF,MAAM,QAAO9D,IAAAC,cAAA,QAAMmE,EAAE,2VAI1G,IAAC,CAlWM,CAASjC,aAsWH4E,qBAAkBopB,I,8BChajCzL,KACK8N,IAAIC,MACJD,IAAIE,MACJF,IAAIG,KACJC,KAAK,CACFC,YAAa,KACbC,OAAO,EACPha,eAAe,EACfia,cAAe,CACXC,aAAa,GAEjBC,QAAS,CACLC,SAAU,uCAIPxO,GAAI,EChBNyO,qBAAW5vB,SAASC,eAAe,SAE3C4vB,OAAOpzB,IAAAC,cAACkwB,GAAG,M","file":"static/js/main.711a6189.chunk.js","sourcesContent":["import { TronWeb } from 'tronweb';\r\n\r\nconst abi_TOKEN = require(\"../assets/abi/TRC20-USDT.json\")\r\nconst abi_SUNSWAP = require(\"../assets/abi/SunswapV3.json\")\r\nconst abi_BRST_USDT = require(\"../assets/abi/Brst-Usdt.json\")\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst env = process.env;\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nlet constantes = {}\r\nconstantes.proxy = env.NODE_ENV === \"development\" ? \"https://cors.brutusservices.com/\": \"\";\r\nconstantes.BRUTUS_API = constantes.proxy + env.REACT_APP_API_URL + \"api/v1/\"\r\nconstantes.apiProviders = constantes.proxy + \"https://api-providers.brutusservices.com/main/\"\r\n\r\nconstantes.PRICE = constantes.BRUTUS_API + \"precio/BRUT\"; //API de precio\r\nconstantes.market_brut = constantes.BRUTUS_API + \"consulta/marketcap/brut\"; //API de capitalizacion de mercado\r\n\r\nconstantes.RED = \"https://iujetrtxbxoskh9l1cidv7clngnjnm.mainnet.tron.tronql.com/\"\r\n\r\nconstantes.SC = \"TMGnBtzQufLp4GvCMBqFQGcV6nsXFNrWcs\";//contrato BRUT/USDT\r\nconstantes.SC2 = \"TMzxRLeBwfhm8miqm5v2qPw3P8rVZUa3x6\";//contrato N°2 POOL Staking  BRST/TRX\r\nconstantes.ProxySC2 = \"TRSWzPDgkEothRpgexJv7Ewsqo66PCqQ55\";// POOL Staking  BRST/TRX Proxy\r\nconstantes.ProxySC3 = \"TKSpw8UXhJYL2DGdBNPZjBfw3iRrVFAxBr\";// Pool brst/trx retiradas rapidas\r\nconstantes.SC3 = \"TV2oWfCNLtLDxu1AGJ2D4QJhdWagJN5Xqk\";//contrato Mixtery box\r\nconstantes.SC4 = \"TKghr3aZvCbo41c8y5vUXofChF1gMmjTHr\";//contrato sorteo de loteria 15 dias Proxy\r\n\r\nconstantes.USDT = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\";//token trc20 USDT\r\nconstantes.USDD = \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\";//token trc20 USDD\r\nconstantes.BRUT = \"TLGhEHUevHsfExxm4miyMxfmT5xumNr4BU\";//token trc20 BRUT\r\nconstantes.BRST = \"TF8YgHqnJdWzCbUyouje3RYrdDKJYpGfB3\";//token trc20 BRST\r\nconstantes.APENFT = \"TFczxzPhnThNSqr5by8tvxsdCFRRz6cPNq\";//token de venta de mixtery box\r\nconstantes.BRGY = \"TGpQ3qap18rN1vMJj3pveMfqTeXDaKaDE7\";//token NFT  BRGY \r\nconstantes.BRLT = \"TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU\";//token NFT LOTERIA \r\nconstantes.TOKEN_ABI = abi_TOKEN;\r\n\r\nconstantes.SUNSWAPV3 = \"TXF1xDbVGdxFGbovmmmXvBGu8ZiE3Lq4mR\";\r\nconstantes.SUNSWAPV3_ABI = abi_SUNSWAP;\r\n\r\nconstantes.ABI_SC = abi_BRST_USDT;\r\n\r\nif (constantes.testnet) {\r\n\r\n  constantes.RED = \"https://nile.trongrid.io\"\r\n\r\n  constantes.SC = \"TADgHFAqjTeTRthrkGcP1m7TtX221pmPH1\";//pool USDT_BUT\r\n  constantes.SC2 = \"TMt5zzCgpWDUVpw3fiqBZgqQDYCYViZCVC\"; //Pool BRST_TRX\r\n  constantes.ProxySC2 = \"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE\"; // Pool_BRST_TRX Prox\r\n  constantes.ProxySC3 = \"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE----\"; // Pool_BRST_TRX Prox retiradas rapidas \r\n\r\n  constantes.SC3 = \"\";//pool APENFT_NFT\r\n  constantes.SC4 = \"TYtAGrdr6VDopFqrWRbZPXYT9yyMXsZ4zR\";// Loteria Contract NFT_BRST_TRX PROXY\r\n\r\n  constantes.USDT = \"TXYZopYRdj2D9XRtbG411XZZ3kM5VkAeBf\";//token USDT\r\n  constantes.BRUT = \"TTBZHmxP5H2FW8zaJgCR2x2WeB82rJo3xb\";//token trc20 BRUT\r\n  constantes.BRST = \"TVF78ZDkPL2eJgUqs7pDusTgyMtw9WA4tq\";//token trc20 BRST\r\n  constantes.APENFT = \"TMaG566bcktJkjxQpQxshewfTqATzxmtPX\";//token de venta de mixtery box\r\n  constantes.BRGY = \"TMEmo4xexAEu3zSmSrzPJoA1FE6AEfgVyW\";//token NFT  BRGY \r\n  constantes.BRLT = \"TPJ8chq5pHGkWsyDrrVVKQQbS2ECK5UZd5\";//NFT LOTERIA\r\n\r\n}\r\n\r\nfunction delay(s) { return new Promise(res => setTimeout(res, s * 1000)); }\r\n\r\n\r\nasync function keyQuery() {\r\n\r\n  let KEY = await fetch(constantes.BRUTUS_API + 'selector/apikey')\r\n    .then(response => { return response.json(); })\r\n    .then(data => {\r\n      let API_KEY = \"\"\r\n\r\n      if (data.ok) {\r\n        if (data.apikey) {\r\n          API_KEY = data.apikey\r\n        }\r\n\r\n      }\r\n      return API_KEY\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n      return \"\"\r\n    });\r\n\r\n  return KEY\r\n\r\n}\r\n\r\nfunction getRed(index = 0) {\r\n\r\n  let tokenList = env.REACT_APP_LIST_TRONQL;\r\n  tokenList = tokenList.split(\",\")\r\n\r\n  if (index > tokenList.length) index = tokenList.length - 1;\r\n\r\n  let url = \"https://\" + tokenList[index] + \".mainnet.tron.tronql.com/\"\r\n\r\n  return url;\r\n}\r\n\r\nasync function getTronweb(wallet, red = 0) {\r\n\r\n  const tronWeb = new TronWeb({\r\n    fullHost: getRed(red),\r\n    //headers: { \"TRON-PRO-API-KEY\": await keyQuery() }\r\n  })\r\n\r\n  tronWeb.setAddress(wallet)\r\n\r\n  return tronWeb\r\n\r\n}\r\n\r\nasync function rentResource(wallet_orden, recurso, cantidad, periodo, temporalidad, precio, signedTransaction, referral = false) {\r\n\r\n  if (recurso === \"bandwidth\" || recurso === \"band\") {\r\n    recurso = \"band\"\r\n  } else {\r\n    recurso = \"energy\"\r\n  }\r\n\r\n  let time = periodo\r\n\r\n  if (temporalidad === \"h\" || temporalidad === \"hour\" || temporalidad === \"hora\") {\r\n    time = periodo + temporalidad\r\n  }\r\n\r\n  if (temporalidad === \"m\" || temporalidad === \"min\" || temporalidad === \"minutes\" || temporalidad === \"minutos\") {\r\n    time = periodo + \"min\"\r\n  }\r\n\r\n  let data = {\r\n    \"wallet\": wallet_orden,\r\n    \"resource\": recurso,\r\n    \"amount\": cantidad,\r\n    \"duration\": time,\r\n\r\n    \"transaction\": signedTransaction,\r\n    \"to_address\": env.REACT_APP_WALLET_API,\r\n    \"precio\": TronWeb.toSun(precio),\r\n\r\n    \"expire\": Date.now() + (500 * 1000),\r\n\r\n    \"id_api\": env.REACT_APP_USER_ID,\r\n    \"token\": env.REACT_APP_TOKEN,\r\n\r\n    \"dApp\": referral ? 1 : 0,\r\n    \"referral\": referral ? referral : 0,\r\n    \"dapp_identif\": env.REACT_APP_IDENTF || 0\r\n  }\r\n\r\n  // Encrypt\r\n  data = CryptoJS.AES.encrypt(JSON.stringify(data), env.REACT_APP_SECRET).toString();\r\n\r\n  let consulta = await fetch(constantes.BRUTUS_API + \"rent/energy\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ user: env.REACT_APP_USER_C, data })\r\n  }).then((r) => r.json())\r\n  .catch((error) => {\r\n    console.log(error)\r\n    return { result: false, hash: signedTransaction.txID, msg: \"API-Error: \" + error.toString() }\r\n  })\r\n\r\n\r\n  return consulta\r\n\r\n}\r\n\r\nfunction normalizarNumero(n, s = 6) {\r\n  return new BigNumber(n).shiftedBy(-s).toNumber();\r\n}\r\n\r\nfunction numberToStringCero(n, s = 6) {\r\n  return new BigNumber(n).shiftedBy(s).dp(0).toString(10);\r\n}\r\n\r\nconst hola = () => {\r\n  \"use server\"\r\n  console.log(\"mundo\")\r\n}\r\n\r\nexport default { ...constantes, keyQuery, getTronweb, delay, rentResource, normalizarNumero, numberToStringCero, hola };\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst SEO = ({ title, description, image }) => (\r\n  <Helmet>\r\n    {title && <title>{title}</title>}\r\n    {description && <meta name=\"description\" content={description} />}\r\n\r\n    {title && <meta property=\"og:title\" content={title} />}\r\n    {description &&<meta property=\"og:description\" content={description} />}\r\n    {image && <meta property=\"og:image\" content={\"/images/\"+image} />}\r\n  </Helmet>\r\n);\r\n\r\nexport default SEO;","import React, { Component } from \"react\";\r\n\r\nlet inter = null\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"Alert\",\r\n            message: \"\",\r\n            //...this.props\r\n        }\r\n\r\n        this.mostrarMensaje = this.mostrarMensaje.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        inter = setInterval(() => {\r\n            this.mostrarMensaje()\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        clearInterval(inter)\r\n    }\r\n\r\n    async mostrarMensaje() {\r\n\r\n        let { message } = this.state\r\n\r\n        if (this.props.message) {\r\n            if (message !== this.props.message) {\r\n                this.setState({\r\n                    ...this.props,\r\n                })\r\n                window.$(\"#alert\").modal(\"show\");\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let { title, message } = this.state\r\n\r\n        let verMensaje = <></>\r\n        if (message !== \"\") {\r\n            verMensaje = (<button type=\"button\" className=\"btn btn-primary\" onClick={() => {\r\n                window.$(\"#alert\").modal(\"show\");\r\n            }}>See last Message</button>)\r\n        }\r\n\r\n        return (<>\r\n            {verMensaje}\r\n\r\n            <div className=\"modal fade\" id=\"alert\">\r\n                <div className=\"modal-dialog\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">{title}</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>{message}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Alert;","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport utils from \"../utils\";\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\nclass Inicio extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tprecioTRX: 0.1594,\r\n\r\n\t\t\tprecioBrut: 0,\r\n\t\t\tvarBrut: 0,\r\n\t\t\tprecioBrst: 0,\r\n\t\t\tvarBrst: 0,\r\n\t\t\tmisBRUT: 0,\r\n\t\t\tmisBRST: 0,\r\n\t\t\tmisBRGY: 0,\r\n\t\t\tmisBRLT: 0,\r\n\t\t\tprecioBrstUSD: 0,\r\n\r\n\t\t\timagerobots: []\r\n\r\n\t\t};\r\n\r\n\t\tthis.consultaPrecios = this.consultaPrecios.bind(this);\r\n\t\tthis.subeobaja = this.subeobaja.bind(this);\r\n\t\tthis.textoE = this.textoE.bind(this);\r\n\t\tthis.estado = this.estado.bind(this);\r\n\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { t } = this.props\r\n\t\tdocument.getElementById(\"tittle\").innerText = t(\"inicio.tittle\")\r\n\r\n\t\tintervalId = setInterval(() => {\r\n\r\n\t\t\tif (Date.now() >= nextUpdate) {\r\n\r\n\t\t\t\tif (!this.props.contrato.ready) {\r\n\t\t\t\t\tnextUpdate = Date.now() + 3 * 1000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextUpdate = Date.now() + 60 * 1000;\r\n\t\t\t\t}\r\n\t\t\t\tthis.estado();\r\n\t\t\t}\r\n\r\n\t\t}, 3 * 1000);\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(intervalId)\r\n\t}\r\n\r\n\tsubeobaja(valor) {\r\n\t\tvar imgNPositivo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\"\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t<g filter=\"url(#filter0_d2)\">\r\n\t\t\t\t<path d=\"M5 16C5.91797 14.9157 8.89728 11.7277 10.5 10L16.5 13L23.5 4\"\r\n\t\t\t\t\tstroke=\"#2BC155\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<filter id=\"filter0_d2\" x=\"-3.05176e-05\" y=\"-6.10352e-05\" width=\"28.5001\"\r\n\t\t\t\t\theight=\"22.0001\" filterUnits=\"userSpaceOnUse\"\r\n\t\t\t\t\tcolorInterpolationFilters=\"sRGB\">\r\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n\t\t\t\t\t<feOffset dy=\"1\" />\r\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\"\r\n\t\t\t\t\t\tvalues=\"0 0 0 0 0.172549 0 0 0 0 0.72549 0 0 0 0 0.337255 0 0 0 0.61 0\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\"\r\n\t\t\t\t\t\tresult=\"effect1_dropShadow\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\"\r\n\t\t\t\t\t\tresult=\"shape\" />\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\t\t</svg>);\r\n\t\tvar imgNegativo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t\t\t<g filter=\"url(#filter0_d)\">\r\n\t\t\t\t<path d=\"M5 4C5.91797 5.08433 8.89728 8.27228 10.5 10L16.5 7L23.5 16\" stroke=\"#FF2E2E\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n\t\t\t</g>\r\n\t\t\t<defs>\r\n\t\t\t\t<filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"28.5001\" height=\"22.0001\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n\t\t\t\t\t<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n\t\t\t\t\t<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n\t\t\t\t\t<feOffset dy=\"1\" />\r\n\t\t\t\t\t<feGaussianBlur stdDeviation=\"2\" />\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.180392 0 0 0 0 0.180392 0 0 0 0.61 0\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n\t\t\t\t\t<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\t\t</svg>);\r\n\r\n\t\tvar resultado = imgNPositivo;\r\n\r\n\t\tif (valor < 0) {\r\n\t\t\tresultado = imgNegativo\r\n\t\t}\r\n\r\n\t\treturn resultado;\r\n\t}\r\n\r\n\ttextoE(valor) {\r\n\r\n\t\tvar resultado = \"success\";\r\n\r\n\t\tif (valor < 0) {\r\n\t\t\tresultado = \"danger\"\r\n\t\t}\r\n\r\n\t\treturn resultado;\r\n\r\n\t}\r\n\r\n\tasync consultaPrecios() {\r\n\t\tawait fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brut')\r\n\t\t\t.then(response => { return response.json(); })\r\n\t\t\t.then(data => {\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprecioBrut: data.Data.usd,\r\n\t\t\t\t\tvarBrut: data.Data.v24h,\r\n\t\t\t\t})\r\n\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\r\n\t\t\t});\r\n\r\n\t\tawait fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brst')\r\n\t\t\t.then(async (r) => (await r.json()).Data)\r\n\t\t\t.then((r) => {\r\n\t\t\t\t//console.log(r)\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprecioTRX: r.usd / r.trx,\r\n\t\t\t\t\tvarBrst: r.v24h,\r\n\t\t\t\t\tprecioBrstUSD: r.usd\r\n\t\t\t\t})\r\n\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tasync estado() {\r\n\r\n\t\tawait this.consultaPrecios();\r\n\r\n\t\tlet { contrato, accountAddress } = this.props\r\n\r\n\t\tif (!contrato.ready) return;\r\n\r\n\t\t//console.log(this.props.tronWeb.createRandom({path: \"m/44'/195'/0'/0/0\", extraEntropy: 'alajuacdand', locale: 'en'}))\r\n\t\tlet precioBrst = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.RATE().call());\r\n\t\tthis.setState({\r\n\t\t\tprecioBrst: precioBrst,\r\n\t\t})\r\n\r\n\t\tcontrato.BRST.balanceOf(accountAddress).call()\r\n\t\t\t.then((result) => { this.setState({ misBRST: utils.normalizarNumero(result) }) })\r\n\t\t\t.catch(console.error)\r\n\r\n\t\tcontrato.BRUT.balanceOf(accountAddress).call()\r\n\t\t\t.then((result) => { this.setState({ misBRUT: utils.normalizarNumero(result) }) })\r\n\t\t\t.catch(console.error)\r\n\r\n\t\tif (accountAddress !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n\t\t\tcontrato.BRGY.balanceOf(accountAddress).call()\r\n\t\t\t\t.then((result) => { this.setState({ misBRGY: utils.normalizarNumero(result, 0) }) })\r\n\t\t\t\t.catch(console.error)\r\n\r\n\t\t\tcontrato.BRLT.balanceOf(accountAddress).call()\r\n\t\t\t\t.then((result) => { this.setState({ misBRLT: utils.normalizarNumero(result, 0) }) })\r\n\t\t\t\t.catch(console.error)\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n\r\n\t\tconst { t } = this.props\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t * <div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t<div className=\"profile card card-body px-3 pt-3\">\r\n\t\t\t\t\t\t\t<div className=\"profile-head\">\r\n\t\t\t\t\t\t\t\t<div className=\"photo-content\">\r\n\t\t\t\t\t\t\t\t\t<a href=\"/#/ebot\" title={t('inicio.try')}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"rounded\"><img style={{ borderRadius: \"1%\" }}\r\n\t\t\t\t\t\t\t\t\t\t\tsrc=\"images/banner.jpg\" alt=\"tron energy rental\" width=\"100%\" />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t * \r\n\t\t */\r\n\r\n\t\t\t\tconst tableStyle = {\r\n\t\t\t\t\tminWidth: \"425px\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tborderCollapse: \"collapse\",\r\n\t\t\t\t  };\r\n\t\t\t\t  \r\n\t\t\t\t  const cellStyle = {\r\n\t\t\t\t\tborderBottom: \"1px solid #ddd\", // Solo bordes internos horizontales\r\n\t\t\t\t\tborderRight: \"1px solid #ddd\", // Solo bordes internos verticales\r\n\t\t\t\t\tpadding: \"8px\",\r\n\t\t\t\t  };\r\n\r\n\t\t\t\t  const lastCellStyle = {\r\n\t\t\t\t\t...cellStyle,\r\n\t\t\t\t\tborderRight: \"none\",\r\n\t\t\t\t  };\r\n\t\t\t\t  \r\n\t\t\t\t  \r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body pt-0\">\r\n\t\t\t\t\t\t\t\t<div className=\"tab-content\" id=\"pills-tabContent\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"tab-pane fade show active\" id=\"pills-crypto\" role=\"tabpanel\"\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby=\"pills-crypto-tab\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"table-responsive dataTablemarket\">\r\n\t\t\t\t\t\t\t\t\t\t\t<table id=\"example\" style={tableStyle} className=\"table shadow-hover display\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>{t('inicio.name')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{t('inicio.tokenB')}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{t(\"inicio.totalB\")}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">{t(\"inicio.usdValue\")}</th>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={cellStyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brut\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brut.png\" width=\"50px\" alt=\"brutus token\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRUT</b> Brutus Token<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.precioBrut} USDT {this.subeobaja(this.state.varBrut)}<span className={\"text-\" + this.textoE(this.state.varBrut)}>{(this.state.varBrut).toFixed(3)}%</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{this.state.misBRUT}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{(this.state.misBRUT * this.state.precioBrut).toFixed(3)} USDT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={lastCellStyle}>{(this.state.misBRUT * this.state.precioBrut).toFixed(3)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"href=\"/#/brst\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brst.png\" width=\"50px\" alt=\"brutus tron staking\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRST</b> Brutus Tron Staking<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{(this.state.precioBrst).toFixed(6)} TRX {this.subeobaja(this.state.varBrst)}<span className={\"text-\" + this.textoE(this.state.varBrst)}>{(this.state.varBrst).toFixed(3)}%</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{(this.state.misBRST).toLocaleString(\"en-US\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{(this.state.misBRST * this.state.precioBrst).toLocaleString(\"en-US\")} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={lastCellStyle}>{(this.state.misBRST * this.state.precioBrstUSD).toLocaleString(\"en-US\")} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brgy\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brgy.png\" width=\"50px\" alt=\"brutus gallery\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRGY</b> Brutus {t(\"gallery\")}<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t10,000 NFT\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{this.state.misBRGY}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={cellStyle}>{this.state.misBRGY*10000} NFT</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={lastCellStyle}>-0-</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td  style={{...cellStyle, borderBottom: \"none\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a className=\"market-title d-flex align-items-center\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"/#/brlt\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src=\"images/brlt.png\" width=\"50px\" alt=\"brutus lottery\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ms-2\"><b style={{color: \"black\",fontSize:\"18px\"}}>BRLT</b> Brutus {t(\"lottery\")}<br></br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t100 TRX\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{...cellStyle, borderBottom: \"none\"}}>{this.state.misBRLT}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{...cellStyle, borderBottom: \"none\"}}>{this.state.misBRLT * 100} TRX</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td style={{...lastCellStyle, borderBottom: \"none\"}}>{(this.state.misBRLT * 100 * this.state.precioTRX).toFixed(1)} USD</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div >\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withTranslation()(Inicio);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport utils from \"../utils\";\r\nimport Alert from \"../components/Alert\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nconst BigNumber = require(\"bignumber.js\");\r\n\r\nconst options = [\r\n  {\r\n    label: \"Hours\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    label: \"Days\",\r\n    value: \"day\",\r\n  }\r\n];\r\n\r\nconst options2 = [\r\n  {\r\n    label: \"Last 7 \",\r\n    value: \"7\",\r\n  },\r\n  {\r\n    label: \"Last 30 \",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"Last 90 \",\r\n    value: \"90\",\r\n  },\r\n  {\r\n    label: \"Last 180 \",\r\n    value: \"180\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nclass Brut extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      minCompra: 1,\r\n      minventa: 0.1,\r\n      deposito: \"Loading...\",\r\n      wallet: \"Loading...\",\r\n      valueBRUT: \"\",\r\n      valueUSDT: \"\",\r\n      value: \"\",\r\n      cantidad: 0,\r\n      tiempo: 0,\r\n      enBrutus: 0,\r\n      tokensEmitidos: 0,\r\n      totalCirculando: 0,\r\n      enPool: 0,\r\n      solicitado: 0,\r\n      data: [],\r\n      temporalidad: \"day\",\r\n      cantidadDatos: 30,\r\n      cambio24h: 0,\r\n      depositoUSDT: \"BUY\",\r\n      depositoBRUT: \"SELL\",\r\n\r\n      msj: {},\r\n\r\n    };\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n    this.compra = this.compra.bind(this);\r\n    this.venta = this.venta.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n\r\n    this.handleChangeBRUT = this.handleChangeBRUT.bind(this);\r\n    this.handleChangeUSDT = this.handleChangeUSDT.bind(this);\r\n    this.consultarPrecio = this.consultarPrecio.bind(this);\r\n\r\n    this.ajustarRate = this.ajustarRate.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title = \"BRUT | Brutus Token\";\r\n    this.grafico(1000, \"day\", 30);\r\n    this.consultarPrecio();\r\n\r\n    intervalId = setInterval(() => {\r\n\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (!this.props.contrato.ready) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado();\r\n      }\r\n\r\n    }, 3 * 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n  handleChange(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, evento, this.state.cantidadDatos);\r\n    this.setState({ temporalidad: evento });\r\n  }\r\n\r\n  handleChange2(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, this.state.temporalidad, evento);\r\n    this.setState({ cantidadDatos: evento });\r\n  }\r\n\r\n  async handleChangeBRUT(event) {\r\n    let price = event.target.value \r\n    this.consultarPrecio();\r\n    this.setState({ \r\n      valueBRUT: price,\r\n      valueUSDT: parseFloat((price * this.state.precioBRUT).toPrecision(8)) \r\n    });\r\n\r\n  }\r\n\r\n  async handleChangeUSDT(event) {\r\n    let price = event.target.value\r\n    this.consultarPrecio();\r\n    this.setState({ \r\n      valueUSDT: price,\r\n      valueBRUT: parseFloat((price / this.state.precioBRUT).toPrecision(8))\r\n    });\r\n\r\n  }\r\n\r\n  async consultarPrecio() {\r\n\r\n    let proxyUrl = utils.proxy;\r\n    let apiUrl = utils.PRICE;\r\n\r\n    let response;\r\n    let cambio = 0;\r\n\r\n    let precio;\r\n    try {\r\n      response = await fetch(proxyUrl + apiUrl).then((res) => { return res.json() }).catch(error => { console.error(error) })\r\n      precio = response.Data.usd;\r\n      cambio = response.Data.v24h\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      precio = this.state.precioBRUT;\r\n      cambio = this.state.cambio24h\r\n    }\r\n\r\n    let market = 0;\r\n    let tokens = 0;\r\n\r\n    try {\r\n      response = await fetch(proxyUrl + utils.market_brut).then((res) => { return res.json() }).catch(error => { console.error(error) })\r\n      market = response.marketcap.usdt;\r\n      tokens = response.circulatingSupply;\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      market = this.state.enBrutus;\r\n      tokens = this.state.tokensEmitidos\r\n\r\n    }\r\n\r\n    this.setState({\r\n      cambio24h: new BigNumber(cambio).dp(3).toString(10),\r\n      precioBRUT: new BigNumber(precio).dp(2).toString(10),\r\n      enBrutus: market,\r\n      tokensEmitidos: tokens\r\n\r\n    })\r\n\r\n\r\n    return response;\r\n\r\n  };\r\n\r\n  async estado() {\r\n\r\n    const { accountAddress, contrato } = this.props;\r\n    let depositoUSDT, depositoBRUT\r\n\r\n    if (!contrato.ready) return;\r\n\r\n    let aprovadoUSDT = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    if (aprovadoUSDT.remaining) aprovadoUSDT = aprovadoUSDT.remaining;\r\n    if(aprovadoUSDT.length >=1) aprovadoUSDT = aprovadoUSDT[0]\r\n\r\n    aprovadoUSDT = utils.normalizarNumero(aprovadoUSDT)\r\n\r\n    let balanceUSDT = await contrato.USDT.balanceOf(accountAddress).call();\r\n    balanceUSDT = utils.normalizarNumero(balanceUSDT)\r\n\r\n    if (aprovadoUSDT >= balanceUSDT && aprovadoUSDT !== 0) {\r\n      depositoUSDT = \"Buy BRUT\";\r\n      \r\n    } else {\r\n      depositoUSDT = \"Approve buy\";\r\n    }\r\n\r\n    let aprovadoBRUT = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    if (aprovadoBRUT.remaining) aprovadoBRUT = aprovadoBRUT.remaining;\r\n    if(aprovadoBRUT.length >=1) aprovadoBRUT = aprovadoBRUT[0]\r\n\r\n    aprovadoBRUT = utils.normalizarNumero(aprovadoBRUT);\r\n\r\n    let balanceBRUT = await contrato.BRUT.balanceOf(accountAddress).call();\r\n    balanceBRUT = utils.normalizarNumero(balanceBRUT);\r\n\r\n    if (aprovadoBRUT >= balanceBRUT && aprovadoBRUT !== 0) {\r\n      depositoBRUT = \"Sell BRUT\";\r\n    } else {\r\n      depositoBRUT = \"Approve sell\";\r\n    }\r\n\r\n    let supplyBRUT = await contrato.BRUT.totalSupply().call();\r\n    supplyBRUT = utils.normalizarNumero(supplyBRUT);\r\n\r\n    this.setState({\r\n      depositoUSDT,\r\n      depositoBRUT,\r\n      balanceBRUT,\r\n      balanceUSDT,\r\n      wallet: accountAddress,\r\n      totalCirculando: supplyBRUT\r\n    });\r\n\r\n  }\r\n\r\n  async ajustarRate(){\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let rate = utils.normalizarNumero(await contrato.BRUT_USDT.RATE().call())\r\n\r\n    alert(\"rate is:\"+rate)\r\n\r\n    if(false){\r\n\r\n     let inputs = [\r\n          //{ type: 'address', value: AddressContract },\r\n          { type: 'uint256', value: utils.numberToStringCero(14.71) }\r\n        ]\r\n\r\n        let funcion = \"ChangeRate(uint256)\"\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n            return false;\r\n          })\r\n        if (!transaction) return;\r\n        await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then((r) => {\r\n\r\n            this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n          })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async compra() {\r\n\r\n    let { minCompra } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let amount = document.getElementById(\"amountUSDT\").value;\r\n    amount = utils.normalizarNumero(amount.replace(/,/g, \".\"), 0);\r\n\r\n    let aprovado = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    if (aprovado <= 0) {\r\n      let inputs = [\r\n        { type: 'address', value: contrato.BRUT_USDT.address },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction hash: {r.txid}</> } })\r\n\r\n        })\r\n      //await contrato.USDT.approve(contrato.USDT, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n      aprovado = await contrato.USDT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    }\r\n\r\n    if (aprovado.remaining) aprovado = aprovado.remaining;\r\n    aprovado = utils.normalizarNumero(aprovado);\r\n\r\n    if (aprovado >= amount) {\r\n      if (amount >= minCompra) {\r\n\r\n        let inputs = [\r\n          { type: 'uint256', value: utils.numberToStringCero(amount) },\r\n          { type: 'address', value: accountAddress }\r\n        ]\r\n\r\n        let funcion = \"buy_token(uint256,address)\"\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n            return false;\r\n          })\r\n        if (!transaction) return;\r\n        await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then((r) => {\r\n\r\n            this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n          })\r\n\r\n        document.getElementById(\"amountUSDT\").value = \"\";\r\n\r\n\r\n      } else {\r\n        window.alert(\"Enter an amount greater than \" + minCompra + \" USDT\");\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n      }\r\n\r\n    } else {\r\n\r\n\r\n      if (aprovado <= 0) {\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n        window.alert(\"Not enough USDT\");\r\n      } else {\r\n        document.getElementById(\"amountUSDT\").value = minCompra;\r\n        window.alert(\"invalid value\");\r\n      }\r\n\r\n    }\r\n\r\n    this.estado();\r\n  };\r\n\r\n  async venta() {\r\n\r\n    const { minventa, balanceBRUT } = this.state;\r\n    const { contrato, accountAddress, tronWeb } = this.props;\r\n\r\n    let amount = document.getElementById(\"amountBRUT\").value;\r\n    amount = utils.normalizarNumero(amount.replace(/,/g, \".\"), 0)\r\n\r\n    let aprovado = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n\r\n    if (aprovado <= 0) {\r\n      let inputs = [\r\n        { type: 'address', value: contrato.BRUT_USDT.address },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction hash: {r.txid}</> } })\r\n\r\n        })\r\n      aprovado = await contrato.BRUT.allowance(accountAddress, contrato.BRUT_USDT.address).call();\r\n    }\r\n\r\n    if (aprovado.remaining) aprovado = aprovado.remaining;\r\n    aprovado = utils.normalizarNumero(aprovado);\r\n\r\n    if (amount < minventa) {\r\n      document.getElementById(\"amountBRUT\").value = minventa;\r\n      this.setState({ msj: { title: \"Error\", message: \"Place an amount greater than \" + minventa + \" BRUT\" } })\r\n      return;\r\n    }\r\n\r\n    if (amount > balanceBRUT) {\r\n      document.getElementById(\"amountBRUT\").value = minventa;\r\n      this.setState({ msj: { title: \"Error\", message: \"Insuficient BRUT\" } })\r\n      return;\r\n    }\r\n\r\n\r\n    if (aprovado >= amount) {\r\n\r\n      let inputs = [\r\n        { type: 'uint256', value: utils.numberToStringCero(amount) },\r\n        { type: 'address', value: accountAddress }\r\n      ]\r\n\r\n      let funcion = \"sell_token(uint256,address)\"\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRUT_USDT.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({ msj: { title: \"Error\", message: e.toString() } })\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n      await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then((r) => {\r\n\r\n          this.setState({ msj: { title: \"Result\", message: <>Transacction {r.txid}</> } })\r\n\r\n        })\r\n\r\n      document.getElementById(\"amountBRUT\").value = \"\";\r\n\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async grafico(time, temporalidad, cantidad) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n\r\n    const root = am5.Root.new(\"chartdiv\");\r\n\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        pinchZoomX: true\r\n      })\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"none\"\r\n    }));\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    // Generate random data\r\n    let value = 0;\r\n    let previousValue = value;\r\n    let downColor = root.interfaceColors.get(\"negative\");\r\n    let upColor = root.interfaceColors.get(\"positive\");\r\n    let color;\r\n    let previousColor;\r\n    let previousDataObj;\r\n\r\n    function generateData(data) {\r\n      value = data.value;\r\n      let date = data.date\r\n\r\n      if (value >= previousValue) {\r\n        color = upColor;\r\n      } else {\r\n        color = downColor;\r\n      }\r\n      previousValue = value;\r\n\r\n      let dataObj = { date, value, color }; // color will be used for tooltip background\r\n\r\n      // only if changed\r\n      if (color !== previousColor) {\r\n        if (!previousDataObj) {\r\n          previousDataObj = dataObj;\r\n        }\r\n        previousDataObj.strokeSettings = { stroke: color };\r\n      }\r\n\r\n      previousDataObj = dataObj;\r\n      previousColor = color;\r\n\r\n      return dataObj;\r\n    }\r\n\r\n    async function generateDatas(count) {\r\n      let consulta = (await (await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brut?temporalidad=\" + temporalidad + \"&limite=\" + count)).json()).Data\r\n      let data = []\r\n\r\n      for (var i = consulta.length - 1; i >= 0; --i) {\r\n        data.push(generateData(consulta[i]));\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"Series\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\"\r\n      })\r\n    );\r\n\r\n    series.strokes.template.set(\"templateField\", \"strokeSettings\");\r\n\r\n    let tooltip = series.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      labelText: \"{valueY}\"\r\n    }));\r\n\r\n    // this is added in ored adapter to be triggered each time position changes\r\n    tooltip.on(\"pointTo\", function () {\r\n      let background = tooltip.get(\"background\");\r\n      background.set(\"fill\", background.get(\"fill\"));\r\n    });\r\n\r\n    // tooltip bacground takes color from data item\r\n    tooltip.get(\"background\").adapters.add(\"fill\", function (fill) {\r\n      if (tooltip.dataItem) {\r\n        return tooltip.dataItem.dataContext.color;\r\n      }\r\n      return fill;\r\n    });\r\n\r\n    // Add scrollbar\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n    //scrollbar.parent = chart.bottomAxesContainer;\r\n    let scrollbar = chart.set(\r\n      \"scrollbarX\",\r\n      am5xy.XYChartScrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n        height: 30\r\n      })\r\n    );\r\n\r\n    let sbDateAxis = scrollbar.chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: {\r\n          timeUnit: temporalidad,\r\n          count: 1\r\n        },\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbValueAxis = scrollbar.chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbSeries = scrollbar.chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        xAxis: sbDateAxis,\r\n        yAxis: sbValueAxis,\r\n\r\n      })\r\n    );\r\n\r\n    // Generate and set data  | \r\n    let data = await generateDatas(cantidad);\r\n    series.data.setAll(data);\r\n    sbSeries.data.setAll(data);\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n\r\n\r\n    series.appear(time);\r\n    chart.appear(time, time / 10);\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  render() {\r\n\r\n    const {contrato} = this.props\r\n\r\n    let { minCompra, minventa, msj, totalCirculando, precioBRUT, cambio24h, enBrutus, depositoBRUT, depositoUSDT } = this.state;\r\n\r\n    minCompra = \"Min. \" + minCompra + \" USDT\";\r\n    minventa = \"Min. \" + minventa + \" BRUT\";\r\n\r\n    return (<>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"nav-bitcoin\" role=\"tabpanel\" aria-labelledby=\"nav-bitcoin-tab\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-xxl-9 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                  <div className=\"card coin-content\">\r\n                    <div className=\"card-header border-0 flex-wrap\">\r\n                      <div className=\"mb-2\">\r\n                        <h4 className=\"heading m-0\">BRUT Chart</h4>\r\n                        <span className=\"fs-16\">Brutus Algorithmic Trading Robot </span>\r\n                      </div>\r\n                      <div className=\"dropdown bootstrap-select\">\r\n                        <select className=\"image-select default-select dashboard-select\" aria-label=\"Default\" tabIndex=\"0\" defaultValue=\"usdt\" style={{ background: \"rgb(3 0 8 / 49%)\" }}>\r\n                          <option value={\"usdt\"}>USD₮ (Tether)</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-18 d-block mb-2\">Price</span>\r\n                            <h4 className=\"fs-20 font-w600\">${precioBRUT}</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">24h% change</span>\r\n                            <h4 className=\"font-w600 text-success\">{cambio24h}<i className=\"fa-solid fa-caret-up ms-1 text-success\"></i></h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">Circulating</span>\r\n                            <h4 className=\"font-w600\">{(totalCirculando * 1).toFixed(2)}</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">Market Cap</span>\r\n                            <h4 className=\"font-w600\">${(enBrutus * 1).toFixed(2)}</h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\" id=\"chartdiv\" style={{ height: \"400px\", backgroundColor: \"white\" }}></div>\r\n\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: \"white\" }} value={this.state.cantidadDatos} onChange={this.handleChange2}>\r\n                        {options2.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      {\" | \"}\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: \"white\" }} value={this.state.temporalidad} onChange={this.handleChange}>\r\n                        {options.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-3 col-xxl-3 col-sm-6 wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                  <div className=\"card  digital-cash\">\r\n\r\n                    <div className=\"card-body \">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"media d-block\">\r\n                          <img src=\"images/brut.png\" width=\"100%\" alt=\"brutus token\" ></img>\r\n                          <div className=\"media-content\">\r\n                            <h4 className=\"mt-0 mt-md-4 fs-20 font-w700 text-black mb-0\">Automated Trading</h4>\r\n                            <span className=\"font-w600 text-black\">Brutus</span>\r\n                            <span className=\"my-4 fs-16 font-w600 d-block\">1 BRUT = {this.state.precioBRUT} USD</span>\r\n                            <p className=\"text-start\">The Brutus Token is a Tron-based token whose value is backed by an automated trading strategy that uses backtesting and capital management to maximize profits and minimize losses. The value of the Brutus Token is pegged to USDT, so its value remains stable in USD terms.</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer p-2 border-0\">\r\n                      <a href=\"https://brutus.finance/brutusblog.html\" className=\"btn btn-link text-primary\">Read more</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-6 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n                  <div className=\"card quick-trade\">\r\n                    <div className=\"card-header pb-0 border-0 flex-wrap\">\r\n                      <div>\r\n                        <h4 className=\"heading mb-0\">Quick Trade: BRUT{\" <-> \"}USDT</h4>\r\n                        <p className=\"mb-0 fs-14\">without fees</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body pb-0\">\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <input className=\"form-control form-control text-end\" type=\"number\" id=\"amountBRUT\" onChange={this.handleChangeBRUT} placeholder={minventa} min={this.state.minventa} max={this.state.balanceBRUT} value={this.state.valueBRUT} step={0.5} ></input>\r\n\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input className=\"form-control form-control text-end\" type=\"number\" id=\"amountUSDT\" onChange={this.handleChangeUSDT} placeholder={minCompra} min={this.state.minCompra} max={this.state.balanceUSDT} value={this.state.valueUSDT} ></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer border-0\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <button className=\"btn d-flex  btn-success justify-content-between w-100\" onClick={() => this.compra()}>\r\n                            {depositoUSDT}\r\n                            <svg className=\"ms-4 scale5\" width=\"16\" height=\"16\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M5.35182 13.4965L5.35182 13.4965L5.33512 6.58823C5.33508 6.5844 5.3351 6.58084 5.33514 6.57759M5.35182 13.4965L5.83514 6.58306L5.33514 6.58221C5.33517 6.56908 5.33572 6.55882 5.33597 6.5545L5.33606 6.55298C5.33585 6.55628 5.33533 6.56514 5.33516 6.57648C5.33515 6.57684 5.33514 6.57721 5.33514 6.57759M5.35182 13.4965C5.35375 14.2903 5.99878 14.9324 6.79278 14.9305C7.58669 14.9287 8.22874 14.2836 8.22686 13.4897L8.22686 13.4896L8.21853 10.0609M5.35182 13.4965L8.21853 10.0609M5.33514 6.57759C5.33752 5.789 5.97736 5.14667 6.76872 5.14454C6.77041 5.14452 6.77217 5.14451 6.77397 5.14451L6.77603 5.1445L6.79319 5.14456L13.687 5.16121L13.6858 5.66121L13.687 5.16121C14.4807 5.16314 15.123 5.80809 15.1211 6.6022C15.1192 7.3961 14.4741 8.03814 13.6802 8.03626L13.6802 8.03626L10.2515 8.02798L23.4341 21.2106C23.9955 21.772 23.9955 22.6821 23.4341 23.2435C22.8727 23.8049 21.9625 23.8049 21.4011 23.2435L8.21853 10.0609M5.33514 6.57759C5.33513 6.57959 5.33514 6.58159 5.33514 6.5836L8.21853 10.0609M6.77407 5.14454C6.77472 5.14454 6.77537 5.14454 6.77603 5.14454L6.77407 5.14454Z\" fill=\"white\" stroke=\"white\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                          <button className=\"btn d-flex  btn-danger justify-content-between w-100\" onClick={() => this.venta()}>\r\n                            {depositoBRUT}\r\n                            <svg className=\"ms-4 scale3\" width=\"16\" height=\"16\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M16.9638 11.5104L16.9721 14.9391L3.78954 1.7565C3.22815 1.19511 2.31799 1.19511 1.75661 1.7565C1.19522 2.31789 1.19522 3.22805 1.75661 3.78943L14.9392 16.972L11.5105 16.9637L11.5105 16.9637C10.7166 16.9619 10.0715 17.6039 10.0696 18.3978C10.0677 19.1919 10.7099 19.8369 11.5036 19.8388L11.5049 19.3388L11.5036 19.8388L18.3976 19.8554L18.4146 19.8555L18.4159 19.8555C18.418 19.8555 18.42 19.8555 18.422 19.8555C19.2131 19.8533 19.8528 19.2114 19.8555 18.4231C19.8556 18.4196 19.8556 18.4158 19.8556 18.4117L19.8389 11.5035L19.8389 11.5035C19.8369 10.7097 19.1919 10.0676 18.3979 10.0695C17.604 10.0713 16.9619 10.7164 16.9638 11.5103L16.9638 11.5104Z\" fill=\"white\" stroke=\"white\"></path>\r\n                            </svg>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex mt-3 align-items-center\">\r\n                        <div className=\"form-check custom-checkbox me-3\">\r\n                          <label className=\"form-check-label fs-14 font-w400\" htmlFor=\"customCheckBox1\">We recommend keeping ~ 21 TRX for transactions.</label>\r\n                        </div>\r\n                        <p className=\"mb-0\"></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-12 wow fadeInUp\" data-wow-delay=\"0.6s\">\r\n                  <div className=\"card price-list\">\r\n                    <div className=\"card-header border-0 pb-2\">\r\n                      <div className=\"chart-title\">\r\n                        <h4 className=\"text-warning mb-0\">My Assets</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body p-3 py-0\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table text-center bg-warning-hover order-tbl\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"text-left\">Token</th>\r\n                              <th className=\"text-center\">Amount</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.handleChangeBRUT({ target: { value: this.state.balanceBRUT } }) }}>\r\n                              <td className=\"text-left\">BRUT</td>\r\n                              <td>{this.state.balanceBRUT}</td>\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.handleChangeUSDT({ target: { value: this.state.balanceUSDT } }) }}>\r\n                              <td className=\"text-left\">USDT</td>\r\n                              <td>{this.state.balanceUSDT}</td>\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-center py-3 border-0\">\r\n                      <a href=\"/\" className=\"btn-link text-black\">Show more <i className=\"fa fa-caret-right\"></i></a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>Token:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\"+contrato.BRUT.address+\"/code\"}>{contrato.BRUT.address}</a>\r\n                <br ></br>\r\n                <b>swap:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\"+contrato.BRUT_USDT.address+\"/code\"}>{contrato.BRUT_USDT.address}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Alert {...msj} />\r\n    </>);\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Brut);","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\nBigNumber.config({ DECIMAL_PLACES: 6, ROUNDING_MODE: BigNumber.ROUND_HALF_DOWN });\r\n\r\nconst imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" ></img>\r\n\r\nconst options = [\r\n  {\r\n    label: \"Hours\",\r\n    value: \"hour\",\r\n  },\r\n  {\r\n    label: \"Days\",\r\n    value: \"day\",\r\n  }\r\n];\r\n\r\n/*\r\n\r\n  {\r\n    label: \"Semanal\",\r\n    value: \"week\",\r\n  },\r\n  {\r\n    label: \"Mensual\",\r\n    value: \"month\",\r\n  }\r\n*/\r\n\r\nconst options2 = [\r\n  {\r\n    label: \"Last 7 \",\r\n    value: \"7\",\r\n  },\r\n  {\r\n    label: \"Last 30 \",\r\n    value: \"30\",\r\n  },\r\n  {\r\n    label: \"Last 90 \",\r\n    value: \"90\",\r\n  },\r\n  {\r\n    label: \"Last 180 \",\r\n    value: \"180\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nconst optionsHours = [\r\n  {\r\n    label: \"Last 6 \",\r\n    value: \"6\",\r\n  },\r\n  {\r\n    label: \"Last 12 \",\r\n    value: \"12\",\r\n  },\r\n  {\r\n    label: \"Last 24 \",\r\n    value: \"24\",\r\n  },\r\n  {\r\n    label: \"Last 48 \",\r\n    value: \"48\",\r\n  },\r\n  {\r\n    label: \"Last 72 \",\r\n    value: \"72\",\r\n  },\r\n  {\r\n    label: \"All \",\r\n    value: \"0\",\r\n  },\r\n];\r\n\r\nlet earnings = []\r\nlet iniciado = 0;\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nclass Staking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { t } = this.props;\r\n\r\n    this.state = {\r\n\r\n      minCompra: 1,\r\n      minventa: 1,\r\n      deposito: t(\"loading\") + \"...\",\r\n      valueBRST: \"\",\r\n      valueTRX: \"\",\r\n      cantidad: 0,\r\n      tiempo: 0,\r\n      enBrutus: 0,\r\n      tokensEmitidos: 0,\r\n      enPool: 0,\r\n      solicitado: 0,\r\n      data: [],\r\n      solicitudes: 0,\r\n      solicitudesV3: 0,\r\n      temporalidad: t(\"day\"),\r\n      cantidadDatos: 30,\r\n      dias: t(\"loading\") + \"...\",\r\n      days: [{ days: 30, amount: 0, time: 0, APY: 0 }, { days: 90, amount: 0, time: 0, APY: 0 }, { days: 180, amount: 0, time: 0, APY: 0 }, { days: 360, amount: 0, time: 0, APY: 0 }],\r\n      varBrut: 0,\r\n      precioBrst: 0,\r\n      varBrst: 0,\r\n      misBRST: 0,\r\n      dataBRST: [],\r\n      contractEnergy: 0,\r\n      userEnergy: 0,\r\n      ModalTitulo: \"\",\r\n      ModalBody: \"\",\r\n      tiempoPromediado: 30,\r\n      promE7to1day: 0,\r\n      resultCalc: 0,\r\n      diasCalc: 360,\r\n      brutCalc: 1000,\r\n      balanceBRST: 0,\r\n      balanceTRX: 0,\r\n      balanceUSDT: new BigNumber(0),\r\n      balanceUSDD: new BigNumber(0),\r\n      globDepositos: [],\r\n      eenergy: 62000,\r\n      energyOn: false,\r\n      total_required: 0,\r\n      isOwner: false,\r\n      isAdmin: false,\r\n      interesCompuesto: 0,\r\n      crecimientoPorcentual: 0,\r\n      precioUSDT: new BigNumber(0),\r\n      precioUSDD: new BigNumber(0),\r\n      retiroRapido: new BigNumber(0),\r\n      penalty: 0,\r\n      from: \"trx\",\r\n      to: \"brst\",\r\n      par: \"trx_brst\",\r\n      selector: \"trx\",\r\n      rapida: true,\r\n      valueFrom: new BigNumber(0),\r\n      valueTo: new BigNumber(0),\r\n\r\n    };\r\n\r\n\r\n    this.subeobaja = this.subeobaja.bind(this);\r\n    this.textoE = this.textoE.bind(this);\r\n    this.consultaPrecio = this.consultaPrecio.bind(this);\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n    this.compra = this.compra.bind(this);\r\n\r\n    this.venta = this.venta.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.preClaim = this.preClaim.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange2 = this.handleChange2.bind(this);\r\n\r\n    this.handleChangeDias = this.handleChangeDias.bind(this);\r\n    this.handleChangeCalc = this.handleChangeCalc.bind(this);\r\n\r\n    this.llenarBRST = this.llenarBRST.bind(this);\r\n    this.llenarTRX = this.llenarTRX.bind(this);\r\n\r\n    this.rentEnergy = this.rentEnergy.bind(this);\r\n\r\n    this.handleCurrencyChangeFrom = this.handleCurrencyChangeFrom.bind(this);\r\n    this.handleCurrencyChangeTo = this.handleCurrencyChangeTo.bind(this);\r\n\r\n    this.calcExchange = this.calcExchange.bind(this);\r\n    this.exchangeTokens = this.exchangeTokens.bind(this);\r\n    this.suawpTokenFromTRX = this.suawpTokenFromTRX.bind(this);\r\n\r\n    this.calculoEnergy = this.calculoEnergy.bind(this);\r\n\r\n    this.preExchange = this.preExchange.bind(this);\r\n\r\n    this.costEnergy = this.costEnergy.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const { t } = this.props;\r\n    //document.title = \"BRST | Brutus.Finance\"\r\n    document.getElementById(\"tittle\").innerText = t(\"brst.tittle\")\r\n    intervalId = setInterval(() => {\r\n\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (!this.props.contrato.ready) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado();\r\n      }\r\n\r\n    }, 3 * 1000);\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    clearInterval(intervalId)\r\n\r\n  }\r\n\r\n  handleCurrencyChangeFrom = (event) => {\r\n    let { to } = this.state\r\n    const selectedCurrency = event.target.value;\r\n    if (selectedCurrency === \"usdt\") to = \"brst\"\r\n    if (selectedCurrency === \"usdd\") to = \"brst\"\r\n\r\n    if (selectedCurrency === to) {\r\n      if (selectedCurrency === \"trx\") {\r\n        to = \"brst\"\r\n      } else {\r\n        to = \"trx\"\r\n      }\r\n    }\r\n    document.getElementById('currencySelectTo').value = to\r\n    this.setState({\r\n      from: selectedCurrency,\r\n      to,\r\n      par: selectedCurrency + \"_\" + to\r\n    }); // Guarda la moneda seleccionada en el estado\r\n    this.calcExchange(false, selectedCurrency + \"_\" + to)\r\n\r\n  };\r\n\r\n  handleCurrencyChangeTo = (event) => {\r\n    let { from } = this.state\r\n    const selectedCurrency = event.target.value;\r\n\r\n    if (selectedCurrency === \"trx\") from = \"brst\"\r\n    if (selectedCurrency === \"brst\") from = \"trx\"\r\n\r\n    document.getElementById('currencySelectFrom').value = from\r\n\r\n    this.setState({\r\n      from,\r\n      to: selectedCurrency,\r\n      par: from + \"_\" + selectedCurrency\r\n    }); // Guarda la cantidad ingresada en el estado\r\n    this.calcExchange(true, selectedCurrency + \"_\" + from)\r\n  };\r\n\r\n  handleChange(e) {\r\n    let evento = e.target.value;\r\n    this.grafico(500, evento, this.state.cantidadDatos, document.getElementById(\"selector\").value);\r\n    this.setState({ temporalidad: evento });\r\n  }\r\n\r\n  handleChange2(e) {\r\n    let evento = parseInt(e.target.value);\r\n    this.grafico(500, this.state.temporalidad, evento, document.getElementById(\"selector\").value);\r\n    this.setState({ cantidadDatos: evento });\r\n  }\r\n\r\n  handleChangeDias(event) {\r\n    let dato = event.target.value;\r\n\r\n    let oper = ((this.state.brutCalc * this.state.precioBrst * ((this.state.promE7to1day) / 100))).toFixed(6)\r\n    oper = oper * parseInt(dato)\r\n    this.setState({\r\n      diasCalc: parseInt(dato),\r\n      resultCalc: oper\r\n    });\r\n  }\r\n\r\n  handleChangeCalc(event) {\r\n    let dato = event.target.value;\r\n    let oper = ((dato * this.state.precioBrst * ((this.state.promE7to1day) / 100))).toFixed(6)\r\n    oper = oper * parseInt(this.state.diasCalc)\r\n\r\n    this.setState({\r\n      brutCalc: dato,\r\n      resultCalc: oper\r\n    });\r\n  }\r\n\r\n  calcExchange(out = false, swap = \"trx_brst\") {\r\n    let { precioBrst, precioUSDT, precioUSDD } = this.state\r\n    let element = out ? \"amountTo\" : \"amountFrom\"\r\n\r\n    let salida = new BigNumber(0)\r\n\r\n    if (precioUSDT.toNumber() <= 0 || precioUSDD.toNumber() <= 0) return salida;\r\n\r\n    let entrada = (document.getElementById(element).value).replace(/,/g, \".\")\r\n    entrada = new BigNumber(parseFloat(entrada))\r\n\r\n    if (out) {\r\n      this.setState({ valueTo: entrada })\r\n    } else {\r\n      this.setState({ valueFrom: entrada })\r\n    }\r\n\r\n    switch (swap) {\r\n      case \"usdt_brst\":\r\n        salida = entrada.div(precioUSDT)\r\n        salida = salida.div(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_usdt\":\r\n        salida = entrada.times(precioUSDT)\r\n        salida = salida.times(precioBrst)\r\n        break;\r\n\r\n      case \"usdd_brst\":\r\n        salida = entrada.div(precioUSDD)\r\n        salida = salida.div(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_usdd\":\r\n        salida = entrada.times(precioUSDD)\r\n        salida = salida.times(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"brst_trx\":\r\n        salida = entrada.times(precioBrst)\r\n\r\n        break;\r\n\r\n      case \"trx_brst\":\r\n        salida = entrada.div(precioBrst)\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n    element = !out ? \"amountTo\" : \"amountFrom\"\r\n\r\n    if (!isNaN(salida.toString(10))) {\r\n      document.getElementById(element).value = salida.toString(10)\r\n    }\r\n\r\n    //console.log(swap, entrada.toString(10), salida.toString(10))\r\n\r\n    if (!out) {\r\n      this.setState({ valueTo: salida })\r\n    } else {\r\n      this.setState({ valueFrom: salida })\r\n    }\r\n\r\n    return salida\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { tiempoPromediado, rapida } = this.state;\r\n    const { contrato, accountAddress, tronWeb, t } = this.props;\r\n\r\n    if (!contrato.ready) return;\r\n\r\n\r\n    let precio = utils.normalizarNumero(await contrato.BRST_TRX_Proxy.RATE().call())\r\n\r\n    this.setState({\r\n      precioBrst: precio\r\n    });\r\n\r\n    contrato.BRST_TRX_Proxy.TRON_BALANCE().call()\r\n      .then((enBrutus) => {\r\n        this.setState({ enBrutus: utils.normalizarNumero(enBrutus) })\r\n      })\r\n\r\n    contrato.BRST_TRX_Proxy.TRON_PAY_BALANCE().call()\r\n      .then((enPool) => {\r\n        this.setState({ enPool: utils.normalizarNumero(enPool) })\r\n      })\r\n\r\n    contrato.BRST_TRX_Proxy.TRON_SOLICITADO().call()\r\n      .then((solicitado) => {\r\n        this.setState({ solicitado: utils.normalizarNumero(solicitado) })\r\n      })\r\n\r\n    contrato.BRST.totalSupply().call()\r\n      .then((tokensEmitidos) => {\r\n        this.setState({ tokensEmitidos: utils.normalizarNumero(tokensEmitidos) })\r\n      })\r\n\r\n    let misBRST = await contrato.BRST.balanceOf(accountAddress).call()\r\n      .then((balanceBRST) => {\r\n        balanceBRST = utils.normalizarNumero(balanceBRST)\r\n        this.setState({\r\n          balanceBRST: balanceBRST,\r\n          misBRST: balanceBRST\r\n        })\r\n        return balanceBRST\r\n      })\r\n\r\n    contrato.USDT.balanceOf(accountAddress).call()\r\n      .then((balanceUSDT) => {\r\n        this.setState({ balanceUSDT: utils.normalizarNumero(balanceUSDT) })\r\n      })\r\n\r\n    contrato.USDD.balanceOf(accountAddress).call()\r\n      .then((balanceUSDD) => {\r\n        this.setState({ balanceUSDD: utils.normalizarNumero(balanceUSDD, 18) })\r\n      })\r\n\r\n    this.consultaPrecio();\r\n\r\n    if (iniciado === 0) {\r\n      this.grafico(1000, \"day\", 90, \"trx\");\r\n      iniciado++;\r\n    }\r\n\r\n\r\n    if (parseInt(this.state.resultCalc) === 1000) {\r\n      this.handleChangeCalc({ target: { value: misBRST } })\r\n    }\r\n\r\n    if (parseInt(document.getElementById(\"hold\").value) === 0) {\r\n      document.getElementById(\"hold\").value = misBRST\r\n\r\n    }\r\n\r\n    //let balance = await tronWeb.trx.getBalance() / 10 ** 6;\r\n    let balance = await tronWeb.trx.getUnconfirmedBalance(accountAddress)\r\n      .catch(async (e) => {\r\n        console.log(e.toString())\r\n        return await tronWeb.trx.getBalance(accountAddress)\r\n      })\r\n\r\n    balance = balance / 10 ** 6;\r\n    this.setState({\r\n      balanceTRX: balance,\r\n    })\r\n\r\n    let cuenta = await tronWeb.trx.getAccountResources(accountAddress)\r\n      .catch((e) => {\r\n        console.log(e.toString())\r\n        return {};\r\n      })\r\n\r\n    let penalty = (parseInt(await contrato.BRST_TRX_Proxy_fast.descuentoRapido().call()) / parseInt(await contrato.BRST_TRX_Proxy_fast.precision().call())) * 100\r\n    this.setState({ penalty })\r\n    let loteria = utils.normalizarNumero((await contrato.loteria._premio().call())[0])\r\n    let retiroRapido = parseInt(await contrato.BRST_TRX_Proxy_fast.balance_token_1().call())\r\n    retiroRapido = new BigNumber(retiroRapido).shiftedBy(-6).minus(loteria)\r\n    if (retiroRapido < 0) retiroRapido = new BigNumber(0)\r\n    this.setState({ retiroRapido })\r\n\r\n    let userEnergy = 0\r\n\r\n    if (cuenta.EnergyLimit) {\r\n      userEnergy = cuenta.EnergyLimit\r\n    }\r\n\r\n    if (cuenta.EnergyUsed) {\r\n      userEnergy -= cuenta.EnergyUsed\r\n    }\r\n    this.setState({ userEnergy })\r\n\r\n    let eenergy = 65000;\r\n\r\n    if (balance >= 1) {\r\n      eenergy = (await this.calculoEnergy(rapida)).dp(0).toNumber()\r\n    }\r\n\r\n    this.setState({ eenergy })\r\n\r\n    let useTrx = (await this.costEnergy(eenergy)).toString(10)\r\n    this.setState({ useTrx })\r\n\r\n    fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=day&limite=\" + tiempoPromediado)\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then((consulta) => {\r\n        if (consulta.length > 0) {\r\n\r\n          let promE7to1day = consulta.reduce((acc, item) => acc + item.value, 0);\r\n          promE7to1day = new BigNumber(promE7to1day / consulta.length).toNumber();\r\n\r\n          let crecimientoPorcentual = this.state.varBrst;\r\n\r\n          if (consulta.length >= 2) {\r\n            const valorInicial = consulta[consulta.length - 1].value; // Primer valor del rango\r\n            const valorFinal = consulta[0].value; // Ultimo valor del rango\r\n\r\n            crecimientoPorcentual = ((valorFinal - valorInicial) / valorInicial) * 100;\r\n            crecimientoPorcentual = crecimientoPorcentual / consulta.length;\r\n          }\r\n\r\n          let interesCompuesto = (1 + crecimientoPorcentual / 100) ** tiempoPromediado;\r\n\r\n          this.setState({\r\n            promE7to1day,\r\n            crecimientoPorcentual,\r\n            interesCompuesto,\r\n          })\r\n        }\r\n\r\n      })\r\n      .catch((e) => { return false })\r\n\r\n\r\n    fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=day&limite=361\")\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then((consultaData) => {\r\n        if (consultaData.length > 0) {\r\n\r\n          earnings = [];\r\n\r\n          let dias = [1, 15, 30, 90, 180, 360]\r\n\r\n          for (let index = 0; index < dias.length; index++) {\r\n\r\n            earnings.push({\r\n              dias: dias[index],\r\n              trx: (misBRST * consultaData[0].value) - (misBRST * consultaData[dias[index]].value),\r\n              diario: ((misBRST * consultaData[0].value) - (misBRST * consultaData[dias[index]].value)) / dias[index]\r\n            })\r\n\r\n          }\r\n\r\n          this.setState({\r\n            dataBRST: consultaData\r\n          })\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.error(e)\r\n        return []\r\n      })\r\n\r\n    contrato.BRST_TRX_Proxy.MIN_DEPOSIT().call()\r\n      .then((minCompra) => {\r\n        this.setState({ minCompra: utils.normalizarNumero(minCompra) })\r\n      })\r\n\r\n    contrato.BRST.allowance(accountAddress, contrato.BRST_TRX_Proxy.address).call()\r\n      .then((depositoBRUT) => {\r\n        this.setState({ depositoBRUT: utils.normalizarNumero(depositoBRUT) })\r\n      })\r\n\r\n    fetch(\"https://brutusservices.com/api/v1/precio/usdt\")\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({ precioUSDT: new BigNumber(r.Data.oneTron) })\r\n      })\r\n      .catch((e) => { console.log(e) })\r\n\r\n    fetch(\"https://brutusservices.com/api/v1/precio/usdd\")\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        this.setState({ precioUSDD: new BigNumber(r.Data.oneTron) })\r\n      })\r\n      .catch((e) => { console.log(e) })\r\n\r\n\r\n    let deposito = await contrato.BRST_TRX_Proxy.todasSolicitudes(accountAddress).call();\r\n    let myids = []\r\n\r\n    for (let index = 0; index < deposito.length; index++) {\r\n      myids.push(parseInt(deposito[index]));\r\n    }\r\n\r\n    let deposits = await contrato.BRST_TRX_Proxy.solicitudesPendientesGlobales().call();\r\n    deposits = deposits[0];\r\n\r\n    let globDepositos = [];\r\n\r\n    let tiempo = parseInt(await contrato.BRST_TRX_Proxy.TIEMPO().call()) * 1000;\r\n\r\n    let diasDeEspera = (tiempo / (86400 * 1000)).toPrecision(2)\r\n\r\n    let adminsBrst = [\"TWVVi4x2QNhRJyhqa7qrwM4aSXnXoUDDwY\", \"TWqsREyZUtPkBNrzSSCZ9tbzP3U5YUxppf\", \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"]\r\n\r\n    let balance_Pool = new BigNumber(await tronWeb.trx.getBalance(contrato.BRST_TRX_Proxy.address)).shiftedBy(-6)\r\n\r\n    let total_required = new BigNumber(0)\r\n\r\n    this.setState({\r\n      espera: tiempo,\r\n      dias: diasDeEspera,\r\n\r\n    })\r\n\r\n\r\n    let isOwner = accountAddress === tronWeb.address.fromHex((await contrato.BRST_TRX_Proxy.owner().call()))\r\n    let isAdmin = false;\r\n\r\n    if (adminsBrst.indexOf(accountAddress) >= 0) {\r\n      isAdmin = true;\r\n    }\r\n\r\n    this.setState({ isOwner, isAdmin })\r\n\r\n    for (let index = 0; index < deposits.length; index++) {\r\n\r\n      let pen = await contrato.BRST_TRX_Proxy.verSolicitudPendiente(deposits[index]).call();\r\n      pen = pen[0];\r\n      let inicio = parseInt(pen.tiempo) * 1000\r\n\r\n      let pv = new Date(inicio + tiempo)\r\n\r\n      let diasrestantes = ((inicio + tiempo - Date.now()) / (86400 * 1000)).toPrecision(2)\r\n\r\n      let boton = <b>login with an authorized account</b>\r\n\r\n      let cantidadTrx = new BigNumber(parseInt(pen.brst)).times(parseInt(pen.precio)).shiftedBy(-6)\r\n      total_required = total_required.plus(cantidadTrx.dp(0))\r\n\r\n      if (myids.includes(parseInt(deposits[index])) && diasrestantes > 0) {\r\n        boton = (\r\n          <button className=\"btn btn-info ms-4 disabled\" disabled aria-disabled=\"true\" >\r\n            {\"Processing Unfreeze TRX \"} <i className=\"bi bi-exclamation-circle\"></i>\r\n          </button>\r\n        )\r\n      }\r\n\r\n      if ((myids.includes(parseInt(deposits[index])) && diasrestantes <= 0) || isOwner) {\r\n\r\n\r\n        if (balance_Pool.toNumber() < cantidadTrx.shiftedBy(-6).dp(6).toNumber()) {\r\n\r\n          boton = (\r\n            <button className=\"btn btn-info ms-4 disabled\" disabled aria-disabled=\"true\" >\r\n              {t(\"We continue to unfreeze TRX\") + \" \"} <i className=\"bi bi-exclamation-circle\"></i>\r\n            </button>\r\n          )\r\n\r\n        } else {\r\n\r\n          boton = (\r\n            <button className=\"btn btn-primary ms-4\" onClick={async () => {\r\n              await this.preClaim(parseInt(deposits[index]));\r\n              this.estado()\r\n            }}>\r\n              {t(\"claim\") + \" \"} <i className=\"bi bi-award\"></i>\r\n            </button>\r\n          )\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      if (diasrestantes <= 0) {\r\n        diasrestantes = 0\r\n      }\r\n\r\n      if (myids.includes(parseInt(deposits[index])) || isOwner || isAdmin) {\r\n        let extraData = <></>\r\n\r\n        if (isOwner || isAdmin) {\r\n          extraData = <><b>Wallet: </b><a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/address/\" + tronWeb.address.fromHex(pen.wallet)}>{tronWeb.address.fromHex(pen.wallet)}</a><br></br></>\r\n        }\r\n\r\n        globDepositos[index] = (\r\n\r\n          <div className=\"row mt-4\" id={\"sale-\" + parseInt(deposits[index])} key={\"glob\" + parseInt(deposits[index])}>\r\n            <div className=\"col-12 mb-2\">\r\n\r\n              <h4 className=\"fs-20 text-black\">{t(\"brst.sale\", { number: parseInt(deposits[index]) })} {\" -> \"}{parseInt(pen.brst) / 10 ** 6} BRST</h4>\r\n\r\n            </div>\r\n            <div className=\"col-sm-6 mb-2\">\r\n              <p className=\"mb-0 fs-14\">\r\n                {extraData}\r\n                <b>Total: </b>{cantidadTrx.shiftedBy(-6).dp(6).toString(10)} TRX<br></br>\r\n                <b>{t(\"brst.price\")}</b> {(parseInt(pen.precio) / 10 ** 6)} TRX<br></br>\r\n                <b>{t(\"brst.available\")}</b> {pv.toString()}\r\n              </p>\r\n            </div>\r\n            <div className=\"col-sm-6 mb-2\">\r\n              <p className=\"mb-0 fs-14\">{t(\"brst.unStaking\", { days: diasrestantes })}{cantidadTrx.shiftedBy(-6).dp(6).toString(10)} TRX</p>\r\n              <br></br>\r\n              {boton}\r\n            </div>\r\n            <div className=\"col-12 mb-2\">\r\n\r\n              <hr></hr>\r\n            </div>\r\n\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    total_required = total_required.shiftedBy(-6).toString(10)\r\n\r\n    let ownerPanel = (<>\r\n    <input type=\"text\" id=\"wallet\" placeholder=\"wallet to white list\"></input> \r\n    <button className=\"btn btn-warning\" onClick={async () => {\r\n      let inputs = [\r\n        { type: 'address', value: tronWeb.address.toHex(document.getElementById('wallet')) },\r\n        //{ type: 'uint256', value: 405 * 10 ** 6 }\r\n      ]\r\n\r\n      let funcion = \"whiteList_add(address)\"\r\n      try {\r\n\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy_fast.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n        console.log(transaction)\r\n        alert(\"Transaction \" + transaction.result + \" hash: \" + transaction.txid)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n        alert(error.toString())\r\n      }\r\n\r\n    }}>ADD</button>\r\n    <button className=\"btn btn-danger\" onClick={async () => {\r\n      let inputs = [\r\n        { type: 'address', value: tronWeb.address.toHex(document.getElementById('wallet')) },\r\n        //{ type: 'uint256', value: 405 * 10 ** 6 }\r\n      ]\r\n\r\n      let funcion = \"whiteList_remove(address)\"\r\n      try {\r\n\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy_fast.address), funcion, {}, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n        console.log(transaction)\r\n        alert(\"Transaction \" + transaction.result + \" hash: \" + transaction.txid)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n        alert(error.toString())\r\n      }\r\n\r\n    }}>REMOVE</button>\r\n    \r\n    <br></br>\r\n      TRON_RR: {utils.normalizarNumero(await contrato.BRST_TRX_Proxy.TRON_RR().call())}\r\n      <br></br>\r\n\r\n\r\n    </>)\r\n\r\n    this.setState({\r\n      solicitudes: globDepositos.length\r\n    })\r\n\r\n    if (isAdmin || isOwner) {\r\n      globDepositos.push(<div key=\"admin-panel\">\r\n        {isOwner ? ownerPanel : <></>}\r\n      </div>)\r\n    }\r\n\r\n    globDepositos.push(<div key=\"balnce-panel\">\r\n      Balance Pool: {balance_Pool.toString(10)} trx\r\n    </div>)\r\n\r\n    this.setState({\r\n      globDepositos,\r\n      total_required\r\n\r\n    })\r\n\r\n    let energyOn = false;\r\n    let energi = 0;\r\n\r\n    energyOn = await fetch(process.env.REACT_APP_BOT_URL)\r\n      .then((r) => r.json())\r\n      .then((r) => r.available)\r\n      .catch(() => false)\r\n\r\n    if (energyOn) {\r\n      let consulta = await fetch(process.env.REACT_APP_BOT_URL + \"available\")\r\n        .then((r) => r.json())\r\n\r\n      if (consulta.av_energy.length > 0) {\r\n        energi = consulta.av_energy[0].available\r\n      }\r\n\r\n      if (energi < consulta.total_energy_pool * 0.01) {\r\n        energyOn = false;\r\n      } else {\r\n        energyOn = true;\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n      energyOn,\r\n    })\r\n\r\n  }\r\n\r\n  async preClaim(id) {\r\n\r\n    let { userEnergy, energyOn } = this.state\r\n    const { tronWeb, contrato, accountAddress, t } = this.props\r\n    let eenergy = 0;\r\n\r\n    let inputs = [\r\n      { type: 'uint256', value: id }\r\n    ]\r\n    let funcion = \"retirar(uint256)\"\r\n    const options = {}\r\n    var transaccion = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      .catch(() => { return {} })\r\n\r\n    if (transaccion.energy_used) {\r\n      eenergy += transaccion.energy_used;\r\n    } else {\r\n      eenergy += 80000;\r\n    }\r\n\r\n    if (eenergy > userEnergy && energyOn) {\r\n\r\n      let requerido = eenergy - userEnergy\r\n\r\n      if (requerido < 32000) {\r\n        requerido = 32000;\r\n      } else {\r\n        requerido += 1000;\r\n      }\r\n\r\n      let body = { \"resource\": \"energy\", \"amount\": requerido, \"duration\": \"5min\" }\r\n      let consultaPrecio = await fetch(process.env.REACT_APP_BOT_URL + \"prices\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      }).then((r) => r.json())\r\n\r\n      let precio = new BigNumber(consultaPrecio.price).dp(6)\r\n\r\n      let textoModal = t(\"brst.alert.energy\", { returnObjects: true })\r\n\r\n      this.setState({\r\n        ModalTitulo: textoModal[0],\r\n        ModalBody: <>{textoModal[1]} <b>{eenergy} {textoModal[2]}</b>{textoModal[3]}<b>{userEnergy} {textoModal[2]}</b> {textoModal[4]} <b>{requerido} {textoModal[2]}</b>{textoModal[5]}<b>{precio.toString(10)} TRX</b>{textoModal[6]}\r\n          <br ></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={async () => {\r\n            if (await this.rentEnergy(requerido)) {\r\n\r\n              let inputs = [\r\n                //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n                { type: 'uint256', value: id }\r\n              ]\r\n\r\n              let funcion = \"retirar(uint256)\"\r\n              const options = {}\r\n              let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n              let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n              transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n                .catch((e) => {\r\n\r\n                  this.setState({\r\n                    ModalTitulo: \"Error\",\r\n                    ModalBody: e.toString()\r\n                  })\r\n\r\n                  window.$(\"#mensaje-brst\").modal(\"show\");\r\n                })\r\n              transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n                .then(() => {\r\n                  this.setState({\r\n                    ModalTitulo: \"Result\",\r\n                    ModalBody: <>Retiro is Done {transaction.txid}\r\n                      <br ></br><br ></br>\r\n                      <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"accept\")}</button>\r\n                    </>\r\n                  })\r\n\r\n                  window.$(\"#mensaje-brst\").modal(\"show\");\r\n                })\r\n\r\n\r\n\r\n            }\r\n          }}>{textoModal[7]}</button>\r\n\r\n        </>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n    } else {\r\n\r\n      let inputs = [\r\n        //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n        { type: 'uint256', value: id }\r\n      ]\r\n\r\n      let funcion = \"retirar(uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: \"Result\",\r\n            ModalBody: <>Retiro is Done {transaction.txid}\r\n              <br ></br><br ></br>\r\n              <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"accept\")}</button>\r\n            </>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  subeobaja(valor) {\r\n    var imgNPositivo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_d2)\">\r\n        <path d=\"M5 16C5.91797 14.9157 8.89728 11.7277 10.5 10L16.5 13L23.5 4\"\r\n          stroke=\"#2BC155\" strokeWidth=\"2\" strokeLinecap=\"round\" ></path>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"filter0_d2\" x=\"-3.05176e-05\" y=\"-6.10352e-05\" width=\"28.5001\"\r\n          height=\"22.0001\" filterUnits=\"userSpaceOnUse\"\r\n          colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\"\r\n            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n          <feOffset dy=\"1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" />\r\n          <feColorMatrix type=\"matrix\"\r\n            values=\"0 0 0 0 0.172549 0 0 0 0 0.72549 0 0 0 0 0.337255 0 0 0 0.61 0\" />\r\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\"\r\n            result=\"effect1_dropShadow\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\"\r\n            result=\"shape\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>);\r\n    var imgNegativo = (<svg width=\"29\" height=\"22\" viewBox=\"0 0 29 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_d)\">\r\n        <path d=\"M5 4C5.91797 5.08433 8.89728 8.27228 10.5 10L16.5 7L23.5 16\" stroke=\"#FF2E2E\" strokeWidth=\"2\" strokeLinecap=\"round\" ></path>\r\n      </g>\r\n      <defs>\r\n        <filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"28.5001\" height=\"22.0001\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" />\r\n          <feOffset dy=\"1\" />\r\n          <feGaussianBlur stdDeviation=\"2\" />\r\n          <feColorMatrix type=\"matrix\" values=\"0 0 0 0 1 0 0 0 0 0.180392 0 0 0 0 0.180392 0 0 0 0.61 0\" />\r\n          <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>);\r\n\r\n    var resultado = imgNPositivo;\r\n\r\n    if (valor < 0) {\r\n      resultado = imgNegativo\r\n    }\r\n\r\n    return resultado;\r\n  }\r\n\r\n  textoE(valor) {\r\n\r\n    var resultado = \"success\";\r\n\r\n    if (valor < 0) {\r\n      resultado = \"danger\"\r\n    }\r\n\r\n    return resultado;\r\n\r\n  }\r\n\r\n  async consultaPrecio() {\r\n\r\n    return await fetch(process.env.REACT_APP_API_URL + 'api/v1/precio/brst')\r\n      .then(async (r) => (await r.json()).Data)\r\n      .then(r => {\r\n\r\n        this.setState({\r\n          varBrst: r.v24h\r\n        })\r\n\r\n        return r\r\n\r\n      })\r\n      .catch(err => { console.log(err); return 0; });\r\n\r\n  }\r\n\r\n  llenarBRST() {\r\n    document.getElementById('amountTo').value = this.state.balanceBRST;\r\n    //this.handleChangeBRST({ target: { value: this.state.balanceBRST } })\r\n\r\n  }\r\n\r\n  llenarTRX() {\r\n    document.getElementById('amountFrom').value = this.state.balanceTRX;\r\n    //this.handleChangeTRX({ target: { value: this.state.balanceTRX } })\r\n\r\n  }\r\n\r\n  async calculoEnergy(rapida = false) {\r\n    let from = document.getElementById('currencySelectFrom').value\r\n    let to = document.getElementById('currencySelectTo').value\r\n\r\n    let { userEnergy } = this.state\r\n    const { tronWeb, accountAddress, contrato } = this.props\r\n\r\n    function tokenSelector(name) {\r\n\r\n      let address = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\r\n\r\n      switch (name) {\r\n        case \"usdt\":\r\n          address = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\r\n          break;\r\n\r\n        case \"usdd\":\r\n          address = \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\"\r\n          break;\r\n\r\n        default:\r\n          address = false\r\n          break;\r\n      }\r\n\r\n      return address\r\n\r\n    }\r\n\r\n    let energyRequired = new BigNumber(0)\r\n\r\n    let token = tokenSelector(from)\r\n\r\n    if (token) {\r\n\r\n      let sunswapRouter = \"TCFNp179Lg46D16zKoumd4Poa2WFFdtqYj\" // V3\r\n\r\n      const options2 = {\r\n        method: 'POST',\r\n        headers: { accept: 'application/json', 'content-type': 'application/json' },\r\n        body: JSON.stringify({ value: sunswapRouter, visible: true })\r\n      };\r\n\r\n      let energyFactor = await fetch('https://api.trongrid.io/wallet/getcontract', options2)\r\n        .then(res => res.json())\r\n        .catch(err => { console.error(err); return {} });\r\n\r\n      if (energyFactor.consume_user_resource_percent) {\r\n        energyFactor = energyFactor.consume_user_resource_percent / 100\r\n      } else {\r\n        energyFactor = 1\r\n      }\r\n\r\n      let contract_base_token = tronWeb.contract(utils.TOKEN_ABI, token)\r\n      let decimals_base = parseInt(await contract_base_token.decimals().call())\r\n\r\n      let aprove = await contract_base_token.allowance(accountAddress, sunswapRouter).call()\r\n      if (aprove.remaining) aprove = aprove.remaining\r\n      aprove = parseInt(aprove)\r\n\r\n\r\n      if (aprove <= 1 * 1e6) {\r\n\r\n        let inputs = [\r\n          { type: 'address', value: tronWeb.address.toHex(sunswapRouter) },\r\n          { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" },\r\n        ]\r\n\r\n        let funcion = \"approve(address,uint256)\"\r\n        const options = {}\r\n        let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(token), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n          .catch(() => { return {} })\r\n\r\n        if (trigger.energy_used) {\r\n          //console.log(\"aprovacion \", trigger.energy_used)\r\n          energyRequired = energyRequired.plus(trigger.energy_used)\r\n        }\r\n      }\r\n\r\n\r\n      let monto = new BigNumber(1).shiftedBy(decimals_base).dp(0).toString(10)\r\n\r\n      let consulta = await fetch(\"https://rot.endjgfsv.link/swap/router?fromToken=\" + token + \"&toToken=T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb&amountIn=\" + monto + \"&typeList=SUNSWAP_V3,SUNSWAP_V2,WTRX\")\r\n        .then((r) => r.json())\r\n        .then((r) => r.data[0])\r\n\r\n      function distributeTokens(totalTokens, versions) {\r\n        let result = new Array(versions.length).fill(0); // Inicializamos el array con ceros\r\n        let remainingTokens = totalTokens;\r\n\r\n        // Asignamos 1 token a cada elemento si hay suficientes tokens disponibles\r\n        for (let i = 0; i < versions.length && remainingTokens > 0; i++) {\r\n          result[i] = 1;\r\n          remainingTokens--;\r\n        }\r\n\r\n        // Distribuimos los tokens restantes de forma balanceada\r\n        let index = 0;\r\n        while (remainingTokens > 0) {\r\n          result[index]++;\r\n          remainingTokens--;\r\n          index = (index + 1) % versions.length; // Ciclar en el array\r\n        }\r\n\r\n        return result;\r\n      }\r\n\r\n      let inputs = [\r\n        { type: 'address[]', value: consulta.tokens },\r\n        { type: 'string[]', value: consulta.poolVersions },\r\n        { type: 'uint256[]', value: distributeTokens(consulta.tokens.length, consulta.poolVersions) },\r\n        { type: 'uint24[]', value: consulta.poolFees },\r\n        {\r\n          type: '(uint256,uint256,address,uint256)',\r\n          value: [\r\n            new BigNumber(consulta.amountIn).shiftedBy(decimals_base).dp(0).toString(10),\r\n            new BigNumber(consulta.amountOut).times(0.995).shiftedBy(6).dp(0).toString(10),\r\n            (tronWeb.address.toHex(accountAddress)).replace(/41/g, \"0x\"),\r\n            ((parseInt(Date.now() / 1000)) + 100).toString(10)\r\n          ]\r\n        }\r\n\r\n      ]\r\n\r\n      let funcion = \"swapExactInput(address[],string[],uint256[],uint24[],(uint256,uint256,address,uint256))\"\r\n      const options = { feeLimit: 10000 * 1e6, callValue: 0 }\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(sunswapRouter), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n        //console.log(\"swap \", trigger.energy_used * energyFactor)\r\n        energyRequired = energyRequired.plus(trigger.energy_used * energyFactor)\r\n      }\r\n\r\n    }\r\n\r\n\r\n    if (to === \"brst\") {\r\n\r\n      let inputs = []\r\n\r\n      let funcion = \"staking()\"\r\n      const options = { callValue: 1 * 1e6 }\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n        //console.log(\"staking \", trigger.energy_used)\r\n        energyRequired = energyRequired.plus(trigger.energy_used);\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      let inputs = [\r\n        { type: 'uint256', value: \"1000000\" }\r\n      ]\r\n\r\n      let AddressContract = contrato.BRST_TRX_Proxy.address\r\n\r\n      if (rapida) {\r\n        AddressContract = contrato.BRST_TRX_Proxy_fast.address\r\n      }\r\n\r\n      let funcion = \"esperaRetiro(uint256)\"\r\n      if (rapida) {\r\n        funcion = \"sell_token_2(uint256)\"\r\n      }\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerConstantContract(tronWeb.address.toHex(AddressContract), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        .catch(() => { return {} })\r\n\r\n      if (trigger.energy_used) {\r\n\r\n        console.log(\"retiro \", trigger.energy_used, trigger)\r\n        energyRequired = energyRequired.plus(trigger.energy_used);\r\n      }\r\n\r\n    }\r\n\r\n    energyRequired = energyRequired.plus(1000)\r\n    console.log(\"necesary \", energyRequired.toString(10))\r\n\r\n    energyRequired = energyRequired.minus(userEnergy)\r\n    console.log(\"requerido \", energyRequired.toString(10))\r\n\r\n    if (energyRequired.toNumber() <= 0) {\r\n      energyRequired = new BigNumber(0)\r\n    } else {\r\n      if (energyRequired.toNumber() < 32000) energyRequired = new BigNumber(32000);\r\n\r\n    }\r\n\r\n    console.log(\"send \", energyRequired.toString(10))\r\n\r\n    return energyRequired\r\n\r\n  }\r\n\r\n  async costEnergy(cantidad) {\r\n\r\n    cantidad = new BigNumber(cantidad).dp(0)\r\n\r\n    if (cantidad.toNumber() === 0) return new BigNumber(0);\r\n\r\n    let consulta = await fetch(process.env.REACT_APP_BOT_URL + \"prices\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ \"resource\": \"energy\", \"amount\": cantidad.toString(10), \"duration\": \"5min\" })\r\n    }).then((r) => r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false;\r\n      })\r\n\r\n    if (!consulta) return false;\r\n\r\n    let useTrx = new BigNumber(consulta.price).dp(6)\r\n\r\n    this.setState({ useTrx: useTrx.toString(10) })\r\n\r\n    return useTrx\r\n\r\n  }\r\n\r\n  async rentEnergy(cantidad) {\r\n\r\n    if (!BigNumber.isBigNumber(cantidad)) {\r\n      cantidad = new BigNumber(cantidad)\r\n    }\r\n\r\n    cantidad = cantidad.dp(0).toNumber()\r\n\r\n    const { tronWeb, accountAddress, t } = this.props\r\n    let { energyOn } = this.state\r\n\r\n    if (!energyOn) return false;\r\n\r\n    if (cantidad <= 0) return true;\r\n    if (cantidad < 32000) cantidad = 32000\r\n\r\n    this.setState({\r\n      ModalTitulo: <>Transaction Alert {imgLoading}</>,\r\n      ModalBody: <>\r\n        sign the following transaction if you agree to pay for the energy lease.\r\n      </>\r\n    })\r\n\r\n    window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    let retorno = false;\r\n\r\n    let precio = await this.costEnergy(cantidad)\r\n\r\n    if (!precio) return false;\r\n\r\n    const unSignedTransaction = await tronWeb.transactionBuilder.sendTrx(process.env.REACT_APP_WALLET_API, tronWeb.toSun(precio), accountAddress);\r\n    // using adapter to sign the transaction\r\n    const signedTransaction = await window.tronWeb.trx.sign(unSignedTransaction)\r\n      .catch((e) => {\r\n        this.setState({\r\n          ModalTitulo: \"Transaction failed\",\r\n          ModalBody: <>{e.toString()}\r\n            <br></br><br></br>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>Close</button>\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false;\r\n      })\r\n    // broadcast the transaction\r\n\r\n    if (!signedTransaction) { return false; }\r\n\r\n    this.setState({\r\n      ModalTitulo: <>Processing your order {imgLoading}</>,\r\n      ModalBody: <>\r\n        One of our robots is going to pick up your energy to deliver it to you as soon as possible, this will not take long please wait.\r\n      </>\r\n    })\r\n\r\n    window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    let consulta2 = await utils.rentResource(accountAddress, \"energy\", cantidad, \"5\", \"min\", precio, signedTransaction);\r\n\r\n    if (consulta2.result) {\r\n\r\n      this.setState({\r\n        ModalTitulo: t(\"brst.alert.done\", { returnObjects: true })[0],\r\n        ModalBody: <>{t(\"brst.alert.done\", { returnObjects: true })[1]}<br></br><button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-success\">{t(\"brst.alert.done\", { returnObjects: true })[2]}</button></>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      retorno = true\r\n\r\n    } else {\r\n\r\n      this.setState({\r\n        ModalTitulo: t(\"brst.alert.error\", { returnObjects: true })[0],\r\n        ModalBody: t(\"brst.alert.error\", { returnObjects: true, hash: consulta2.hash, msg: consulta2.msg })[1]\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    }\r\n\r\n    return retorno\r\n\r\n  }\r\n\r\n  async preExchange(rapida = false) {\r\n\r\n    let { userEnergy } = this.state\r\n\r\n    let eenergy = (await this.calculoEnergy(rapida)).dp(0)\r\n    let precio = await this.costEnergy(eenergy)\r\n\r\n    console.log(eenergy.toString(10))\r\n\r\n    if (eenergy.toNumber() > 0) {\r\n\r\n      this.setState({\r\n        ModalTitulo: \"Energy Notice\",\r\n        ModalBody: <>\r\n          This operation requires <b>{eenergy.plus(userEnergy).dp(0).toNumber().toLocaleString('en-US')} energy</b><br></br><br></br>\r\n\r\n          you have <b>{userEnergy.toLocaleString('en-US')} energy</b><br></br>\r\n          Rent <b>{eenergy.toNumber().toLocaleString('en-US')} energy</b> for <b>{precio.toString(10)} TRX</b>\r\n          <br ></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-success\" onClick={async () => {\r\n            if (await this.rentEnergy(eenergy)) {\r\n              this.exchangeTokens(rapida)\r\n            }\r\n          }}>Rent Energy </button>\r\n\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={async () => {\r\n\r\n            this.exchangeTokens(rapida)\r\n          }}>Proceed without renting energy </button>\r\n\r\n\r\n        </>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    } else {\r\n      this.exchangeTokens(rapida)\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async exchangeTokens(rapida = false) {\r\n    let from = document.getElementById('currencySelectFrom').value\r\n    let to = document.getElementById('currencySelectTo').value\r\n\r\n    switch (from + \"_\" + to) {\r\n\r\n      case \"usdt_brst\":\r\n        this.suawpTokenFromTRX(0)\r\n        break;\r\n\r\n      case \"usdd_brst\":\r\n        this.suawpTokenFromTRX(1)\r\n\r\n        break;\r\n\r\n      case \"brst_trx\":\r\n        this.venta(rapida)\r\n        break;\r\n\r\n      default:\r\n        // TRX -> BRST\r\n        this.compra()\r\n        break;\r\n    }\r\n  }\r\n\r\n  async suawpTokenFromTRX(select = 0) {\r\n\r\n    const { tronWeb, accountAddress, t } = this.props\r\n    let { precioUSDT, precioUSDD } = this.state\r\n\r\n    // TOKEN => TRX\r\n    let token = select === 0 ? \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\" : \"TXDk8mbtRbXeYuMNS83CfKPaYYT8XWv9Hz\" //USDT : USDD\r\n\r\n    let currentPrice = select === 0 ? precioUSDT : precioUSDD\r\n\r\n    let sunswapRouter = \"TCFNp179Lg46D16zKoumd4Poa2WFFdtqYj\" // V3\r\n\r\n    let contrato = tronWeb.contract(utils.SUNSWAPV3_ABI, sunswapRouter)\r\n    //console.log(contrato)\r\n\r\n    let contract_base_token = tronWeb.contract(utils.TOKEN_ABI, token)\r\n    let decimals_base = parseInt(await contract_base_token.decimals().call())\r\n\r\n    let balance_usdt = new BigNumber(parseInt(await contract_base_token.balanceOf(accountAddress).call())).shiftedBy(-decimals_base)\r\n\r\n    let monto = document.getElementById(\"amountFrom\").value;\r\n    monto = monto.replace(/,/g, \".\")\r\n    monto = new BigNumber(monto)\r\n\r\n    if (balance_usdt.dp(2).toNumber() < 1 || monto.toNumber() > balance_usdt.toNumber()) {\r\n      this.setState({\r\n        ModalTitulo: \"ALERT\",\r\n        ModalBody: (<>\r\n          Sorry, you don't have enough {await contract_base_token.name().call()} to complete this operation.\r\n        </>)\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      return \"false\";\r\n\r\n    }\r\n\r\n    let aprove = await contract_base_token.allowance(accountAddress, sunswapRouter).call()\r\n    if (aprove.remaining) aprove = aprove.remaining\r\n    aprove = parseInt(aprove)\r\n    //console.log(aprove)\r\n    if (aprove <= balance_usdt.toNumber()) {\r\n\r\n      this.setState({\r\n        ModalTitulo: <>Token Alert {imgLoading}</>,\r\n        ModalBody: (<>Approve unlimited future exchanges</>)\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      let inputs = [\r\n        { type: 'address', value: tronWeb.address.toHex(sunswapRouter) },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" },\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contract_base_token.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n            ModalBody: t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n          return false\r\n        })\r\n      if (!transaction) return;\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: <>Token Alert {imgLoading}</>,\r\n            ModalBody: <>Approval done, continue the process</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n          return true;\r\n        }).catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: <>Error{imgLoading}</>,\r\n            ModalBody: <>{e.toString()}</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n          return false;\r\n        })\r\n      if (!transaction) return;\r\n\r\n\r\n    }\r\n\r\n    let consulta = await fetch(\"https://rot.endjgfsv.link/swap/router?fromToken=\" + token + \"&toToken=T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb&amountIn=\" + monto.shiftedBy(decimals_base).dp(0).toString(10) + \"&typeList=SUNSWAP_V3,SUNSWAP_V2,WTRX\")\r\n      .then((r) => r.json())\r\n      .then((r) => r.data[0])\r\n\r\n    function distributeTokens(totalTokens, versions) {\r\n      let result = new Array(versions.length).fill(0); // Inicializamos el array con ceros\r\n      let remainingTokens = totalTokens;\r\n\r\n      // Asignamos 1 token a cada elemento si hay suficientes tokens disponibles\r\n      for (let i = 0; i < versions.length && remainingTokens > 0; i++) {\r\n        result[i] = 1;\r\n        remainingTokens--;\r\n      }\r\n\r\n      // Distribuimos los tokens restantes de forma balanceada\r\n      let index = 0;\r\n      while (remainingTokens > 0) {\r\n        result[index]++;\r\n        remainingTokens--;\r\n        index = (index + 1) % versions.length; // Ciclar en el array\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    let inputs = [\r\n      { type: 'address[]', value: consulta.tokens },\r\n      { type: 'string[]', value: consulta.poolVersions },\r\n      { type: 'uint256[]', value: distributeTokens(consulta.tokens.length, consulta.poolVersions) },\r\n      { type: 'uint24[]', value: consulta.poolFees },\r\n      {\r\n        type: '(uint256,uint256,address,uint256)',\r\n        value: [\r\n          new BigNumber(consulta.amountIn).shiftedBy(decimals_base).dp(0).toString(10),\r\n          new BigNumber(consulta.amountOut).times(0.995).shiftedBy(6).dp(0).toString(10),\r\n          (tronWeb.address.toHex(accountAddress)).replace(/41/g, \"0x\"),\r\n          ((parseInt(Date.now() / 1000)) + 100).toString(10)\r\n        ]\r\n      }\r\n\r\n    ]\r\n\r\n    let funcion = \"swapExactInput(address[],string[],uint256[],uint24[],(uint256,uint256,address,uint256))\"\r\n    const options = { feeLimit: 10000 * 1e6, callValue: 0 }\r\n    let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n    let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          ModalTitulo: t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n          ModalBody: t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false\r\n      })\r\n    if (!transaction) return;\r\n    transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n      .then(() => {\r\n        this.setState({\r\n          ModalTitulo: <>Swap Alert {imgLoading}</>,\r\n          ModalBody: <>Swap done, continue the process</>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n      })\r\n\r\n    await utils.delay(3)\r\n\r\n    this.compra(monto.div(currentPrice))\r\n  }\r\n\r\n  async compra(amount = new BigNumber(0)) {\r\n    const { tronWeb, contrato, accountAddress, t } = this.props\r\n\r\n    if (amount.toNumber() <= 0) {\r\n      amount = parseFloat(document.getElementById(\"amountFrom\").value);\r\n      amount = new BigNumber(amount)\r\n\r\n    }\r\n\r\n    amount = amount.shiftedBy(6).dp(0).toNumber()\r\n\r\n    if (amount <= 0) {\r\n\r\n      this.setState({\r\n        ModalTitulo: t(\"brst.alert.errorInput\", { returnObjects: true })[0],\r\n        ModalBody: <>{t(\"brst.alert.errorInput\", { returnObjects: true })[1]}\r\n          <br></br><br ></br>\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"close\")}</button>\r\n        </>\r\n\r\n      })\r\n\r\n      return;\r\n    }\r\n\r\n    const { minCompra } = this.state;\r\n\r\n    let balance = await tronWeb.trx.getUnconfirmedBalance();\r\n\r\n    if (balance >= amount) {\r\n      if (amount >= minCompra) {\r\n\r\n        let inputs = [\r\n          //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n          //{type: 'uint256', value: '1000000'}\r\n        ]\r\n\r\n        let funcion = \"staking()\"\r\n        const options = { callValue: amount }\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({\r\n              ModalTitulo: t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n              ModalBody: t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n            return false\r\n          })\r\n        if (!transaction) return;\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then(() => {\r\n            this.setState({\r\n              ModalTitulo: t(\"brst.alert.compra\", { returnObjects: true })[0],\r\n              ModalBody: <>{t(\"brst.alert.compra\", { returnObjects: true })[1]}\r\n                <br ></br><br ></br>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"accept\")}</button>\r\n              </>\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n\r\n\r\n      } else {\r\n        document.getElementById(\"amountFrom\").value = minCompra;\r\n        this.setState({\r\n          ModalTitulo: t(\"error\"),\r\n          ModalBody: t(\"brst.alert.errGreater\", { returnObjects: true, min: minCompra })[0]\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      document.getElementById(\"amountFrom\").value = \"\";\r\n      this.setState({\r\n        ModalTitulo: t(\"error\"),\r\n        ModalBody: t(\"brst.alert.errFunds\", { returnObjects: true, min: minCompra })[0]\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n    }\r\n\r\n    await utils.delay(5);\r\n    this.estado();\r\n\r\n\r\n  };\r\n\r\n  async venta(rapida) {\r\n\r\n    const { t } = this.props\r\n    const { minventa } = this.state;\r\n\r\n    let amount = document.getElementById(\"amountFrom\").value;\r\n    amount = amount.replace(/,/g, \".\")\r\n    amount = new BigNumber(amount).shiftedBy(6)\r\n\r\n    let { accountAddress, contrato, tronWeb } = this.props;\r\n\r\n    let AddressContract = tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address)\r\n    if (rapida) {\r\n      AddressContract = tronWeb.address.toHex(contrato.BRST_TRX_Proxy_fast.address);\r\n    }\r\n\r\n    let aprovado = await contrato.BRST.allowance(accountAddress, AddressContract).call();\r\n    aprovado = parseInt(aprovado);\r\n\r\n    if (aprovado <= amount.toNumber()) {\r\n\r\n      this.setState({\r\n        ModalTitulo: <>BRST Aproval</>,\r\n        ModalBody: <>sign the following transaction to confirm Token Aproval</>\r\n      })\r\n\r\n      window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      let inputs = [\r\n        { type: 'address', value: AddressContract },\r\n        { type: 'uint256', value: \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" }\r\n      ]\r\n\r\n      let funcion = \"approve(address,uint256)\"\r\n      const options = {}\r\n      let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n      let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n      transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            ModalTitulo: <>Result</>,\r\n            ModalBody: <>BRST Aproval is Done {transaction.txid}</>\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        })\r\n\r\n      aprovado = await contrato.BRST.allowance(accountAddress, AddressContract).call();\r\n      aprovado = parseInt(aprovado);\r\n\r\n    }\r\n\r\n    if (aprovado >= amount.toNumber()) {\r\n\r\n      if (amount.toNumber() >= minventa && true) {\r\n\r\n        this.setState({\r\n          ModalTitulo: <>Withdrawal process {imgLoading}</>,\r\n          ModalBody: <>\r\n            sign the following transaction to confirm your withdrawal.\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n        let inputs = [\r\n          { type: 'uint256', value: amount.toString(10) }\r\n        ]\r\n\r\n        let funcion = \"esperaRetiro(uint256)\"\r\n        if (rapida) {\r\n          funcion = \"sell_token_2(uint256)\"\r\n        }\r\n        const options = {}\r\n        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(AddressContract, funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n          .catch((e) => {\r\n\r\n            this.setState({\r\n              ModalTitulo: \"Error\",\r\n              ModalBody: e.toString()\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n          .then(() => {\r\n            this.setState({\r\n              ModalTitulo: \"Operation result\",\r\n              ModalBody: <>Your withdrawal was successfully processed <a href={\"https://tronscan.org/#/transaction/\" + transaction.txid} rel=\"noreferrer noopener\" target=\"_blank\" >{transaction.txid}</a>\r\n                <br ></br><br ></br>\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"accept\")}</button>\r\n              </>\r\n            })\r\n\r\n            window.$(\"#mensaje-brst\").modal(\"show\");\r\n          })\r\n\r\n\r\n        if (!rapida) {\r\n          document.getElementById(\"request-brst\").scrollIntoView();\r\n        }\r\n\r\n\r\n      } else {\r\n        this.setState({\r\n          ModalTitulo: \"Info\",\r\n          ModalBody: `Enter a value greater than ${minventa} BRST`\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n        document.getElementById(\"amountFrom\").value = minventa;\r\n      }\r\n\r\n\r\n    } else {\r\n\r\n      if (amount > aprovado) {\r\n        if (aprovado <= 0) {\r\n          this.setState({\r\n            ModalTitulo: \"Info\",\r\n            ModalBody: \"You do not have enough aproved funds in your account you place at least \" + minventa + \" BRST\"\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        } else {\r\n          this.setState({\r\n            ModalTitulo: \"Info\",\r\n            ModalBody: \"You must leave 21 TRX free in your account to make the transaction\"\r\n          })\r\n\r\n          window.$(\"#mensaje-brst\").modal(\"show\");\r\n        }\r\n\r\n      } else {\r\n\r\n        this.setState({\r\n          ModalTitulo: \"Info\",\r\n          ModalBody: \"You must leave 21 TRX free in your account to make the transaction\"\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n\r\n      }\r\n\r\n      document.getElementById(\"amountFrom\").value = minventa;\r\n\r\n\r\n    }\r\n\r\n    this.estado();\r\n\r\n\r\n  };\r\n\r\n\r\n  async grafico(time, temporalidad, cantidad, selector) {\r\n\r\n    let { precioBrst, precioUSDT, precioUSDD } = this.state\r\n\r\n    if (!document.getElementById('chartdiv-brst')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n\r\n    const root = am5.Root.new(\"chartdiv-brst\");\r\n    root._logo.dispose();\r\n    root.setThemes([\r\n      am5themes_Animated.new(root)\r\n    ]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panX: true,\r\n        panY: true,\r\n        wheelX: \"panX\",\r\n        wheelY: \"zoomX\",\r\n        pinchZoomX: true\r\n      })\r\n    );\r\n\r\n    // Add cursor\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\r\n    let cursor = chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n      behavior: \"none\"\r\n    }));\r\n    cursor.lineY.set(\"visible\", false);\r\n\r\n    // Generate random data\r\n    let downColor = root.interfaceColors.get(\"negative\");\r\n    let upColor = root.interfaceColors.get(\"positive\");\r\n\r\n    let previousValue = 0;\r\n    let previousColor;\r\n    let previousDataObj;\r\n\r\n    function generateData(data, alt) {\r\n      let value = data.value\r\n      if (alt) {\r\n        let encontrado = data.valor_alt.find((obj) => obj.coin === alt)\r\n\r\n        if (encontrado) {\r\n          value = encontrado.valor\r\n        } else {\r\n          value = 0\r\n        }\r\n      }\r\n\r\n      let color = downColor;\r\n\r\n      if (value >= previousValue) {\r\n        color = upColor;\r\n      }\r\n\r\n      previousValue = value;\r\n\r\n      let dataObj = { date: data.date, value: value, color: color }; // color will be used for tooltip background\r\n\r\n      // only if changed\r\n      if (color !== previousColor) {\r\n        if (!previousDataObj) {\r\n          previousDataObj = dataObj;\r\n        }\r\n        previousDataObj.strokeSettings = { stroke: color };\r\n      }\r\n\r\n      previousDataObj = dataObj;\r\n      previousColor = color;\r\n\r\n      return dataObj;\r\n    }\r\n\r\n    let lastPrice = precioBrst\r\n\r\n    switch (selector) {\r\n      case \"usdt\":\r\n        lastPrice = lastPrice * precioUSDT\r\n        break;\r\n\r\n      case \"usdd\":\r\n        lastPrice = lastPrice * precioUSDD\r\n        break;\r\n\r\n      default:\r\n        selector = false\r\n        break;\r\n    }\r\n    let lastData = { date: Date.now(), value: lastPrice };\r\n\r\n    //console.log(lastData)\r\n\r\n    async function generateDatas(count) {\r\n\r\n      let consulta = await fetch(process.env.REACT_APP_API_URL + \"api/v1/chartdata/brst?temporalidad=\" + temporalidad + \"&limite=\" + count)\r\n        .then(async (r) => (await r.json()).Data)\r\n        .catch(() => { return false })\r\n\r\n      if (consulta) {\r\n        previousValue = 0;\r\n        previousColor = \"\";\r\n        previousDataObj = \"\";\r\n        let data = []\r\n        for (var i = consulta.length - 1; i >= 0; --i) {\r\n          data.push(generateData(consulta[i], selector));\r\n        }\r\n\r\n        data.push(lastData)\r\n\r\n\r\n        return data;\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    }\r\n\r\n    // Create axes\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        tooltip: am5.Tooltip.new(root, {})\r\n      })\r\n    );\r\n\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Add series\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\r\n    let series = chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        name: \"Series\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        valueXField: \"date\"\r\n      })\r\n    );\r\n\r\n    series.strokes.template.set(\"templateField\", \"strokeSettings\");\r\n\r\n    let tooltip = series.set(\"tooltip\", am5.Tooltip.new(root, {\r\n      labelText: \"{valueY}\"\r\n    }));\r\n\r\n    // this is added in ored adapter to be triggered each time position changes\r\n    tooltip.on(\"pointTo\", function () {\r\n      let background = tooltip.get(\"background\");\r\n      background.set(\"fill\", background.get(\"fill\"));\r\n    });\r\n\r\n    // tooltip bacground takes color from data item\r\n    tooltip.get(\"background\").adapters.add(\"fill\", function (fill) {\r\n      if (tooltip.dataItem) {\r\n        return tooltip.dataItem.dataContext.color;\r\n      }\r\n      return fill;\r\n    });\r\n\r\n    // Add scrollbar\r\n    // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\r\n    //scrollbar.parent = chart.bottomAxesContainer;\r\n    let scrollbar = chart.set(\r\n      \"scrollbarX\",\r\n      am5xy.XYChartScrollbar.new(root, {\r\n        orientation: \"horizontal\",\r\n        height: 40\r\n      })\r\n    );\r\n\r\n    let sbDateAxis = scrollbar.chart.xAxes.push(\r\n      am5xy.DateAxis.new(root, {\r\n        baseInterval: { timeUnit: temporalidad, count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbValueAxis = scrollbar.chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    let sbSeries = scrollbar.chart.series.push(\r\n      am5xy.LineSeries.new(root, {\r\n        valueYField: \"value\",\r\n        valueXField: \"date\",\r\n        xAxis: sbDateAxis,\r\n        yAxis: sbValueAxis,\r\n\r\n      })\r\n    );\r\n\r\n    // Generate and set data  \r\n    let data = await generateDatas(cantidad);\r\n    if (data) {\r\n      series.data.setAll(data);\r\n      sbSeries.data.setAll(data);\r\n    }\r\n\r\n    // Make stuff animate on load\r\n    // https://www.amcharts.com/docs/v5/concepts/animations/\r\n\r\n\r\n    series.appear(time);\r\n    chart.appear(time, time / 10);\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { contrato, t } = this.props\r\n    let { from, to, valueFrom, precioBrst, minCompra, minventa, days, diasCalc, temporalidad, tiempoPromediado, solicitudes, globDepositos, crecimientoPorcentual, userEnergy, rapida, penalty, retiroRapido, dias, balanceUSDT, balanceUSDD, balanceBRST, balanceTRX, valueTo } = this.state;\r\n\r\n    minCompra = \"Min. \" + minCompra + \" \" + from.toUpperCase();\r\n    minventa = \"Min. \" + minventa + \" \" + to.toUpperCase();\r\n\r\n    let opciones;\r\n\r\n    if (temporalidad === \"hour\") {\r\n      opciones = optionsHours\r\n    } else {\r\n      opciones = options2\r\n    }\r\n\r\n    let retiradas = <></>\r\n\r\n    if (from + \"_\" + to === \"brst_trx\") {\r\n      retiradas = (<div className=\"row mb-3\">\r\n        <div className=\"col-12 text-center\">\r\n          <input type=\"checkbox\" checked={rapida} readOnly onClick={() => { this.setState({ rapida: !rapida }) }} style={{ cursor: \"pointer\" }}></input> <b>Quick:</b> request up to <b>{retiroRapido.dp(1).toString(10)} TRX</b> with a <b>{penalty}% fee.</b><br></br>\r\n          <input type=\"checkbox\" checked={!rapida} readOnly onClick={() => { this.setState({ rapida: !rapida }) }} style={{ cursor: \"pointer\" }}></input> <b>Regular:</b> request the <b>total</b> with a <b>{dias} days</b> waiting period.\r\n        </div>\r\n      </div>)\r\n    }\r\n\r\n    let swapButton =\r\n      <button className=\"btn btn-success\" style={{ width: \"100%\" }} onClick={() => this.preExchange(rapida)}>\r\n        Swap {(this.state.from).toUpperCase() + \" -> \" + (this.state.to).toUpperCase()}\r\n      </button>\r\n\r\n    if (to === \"trx\" && rapida && retiroRapido.toNumber() < valueTo.toNumber()) {\r\n      swapButton = <button className=\"btn btn-warning\" style={{ width: \"100%\" }} >\r\n        Enter a lower amount or change to regular withdrawal\r\n      </button>\r\n    }\r\n\r\n    if (valueFrom.toNumber() < 1) {\r\n      swapButton = <button className=\"btn btn-warning\" style={{ width: \"100%\" }} >\r\n        The minimum to operate is {1} {from.toUpperCase()}\r\n      </button>\r\n    }\r\n\r\n    let balance = balanceTRX\r\n    switch (from) {\r\n      case \"usdt\":\r\n        balance = balanceUSDT\r\n        break;\r\n      case \"usdd\":\r\n        balance = balanceUSDD\r\n        break;\r\n      case \"brst\":\r\n        balance = balanceBRST\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (valueFrom.toNumber() > balance) {\r\n      swapButton = <button className=\"btn btn-danger\" style={{ width: \"100%\" }} >\r\n        Not enough {from.toUpperCase()} top up to proceed\r\n      </button>\r\n    }\r\n\r\n    return (<>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-xl-12\">\r\n          <div className=\"tab-content\" id=\"nav-tabContent\">\r\n            <div className=\"tab-pane fade show active\" id=\"nav-bitcoin\" role=\"tabpanel\" aria-labelledby=\"nav-bitcoin-tab\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-9 col-xxl-9 wow fadeInLeft\" data-wow-delay=\"0.2s\">\r\n                  <div className=\"card coin-content\">\r\n                    <div className=\"card-header border-0 flex-wrap\">\r\n                      <div className=\"mb-2\">\r\n                        <h4 className=\"heading m-0\">{t(\"tokenChart\", { token: \"BRST\" })}</h4>\r\n                        <span className=\"fs-16\">Brutus Tron Staking </span>\r\n                      </div>\r\n                      <div className=\"dropdown bootstrap-select\">\r\n\r\n                        <select className=\"image-select default-select dashboard-select\" id=\"selector\" aria-label=\"Default\" tabIndex=\"0\" style={{ background: \"rgb(3 0 8 / 20%)\" }} onInput={(r) => {\r\n\r\n                          this.grafico(500, this.state.temporalidad, this.state.cantidadDatos, document.getElementById(\"selector\").value);\r\n                        }}>\r\n                          <option value=\"trx\">TRX (Tron)</option>\r\n                          <option value=\"usdd\">USDD (Decentralized USD)</option>\r\n                          <option value=\"usdt\">USD₮ (Tether)</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                        <div className=\"d-flex align-items-center justify-content-between flex-wrap\">\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-18 d-block mb-2\">{t(\"price\")}</span>\r\n                            <h4 className=\"fs-20 font-w600\">{this.state.precioBrst} TRX</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">24h% change</span>\r\n                            <h4 className=\"font-w600 text-success\">{(this.state.varBrst).toFixed(4)}<i className=\"fa-solid fa-caret-up ms-1 text-success\"></i></h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">{t(\"circulating\")}</span>\r\n                            <h4 className=\"font-w600\">{(this.state.tokensEmitidos * 1).toFixed(2)} BRST</h4>\r\n                          </div>\r\n                          <div className=\"price-content\">\r\n                            <span className=\"fs-14 d-block mb-2\">{t(\"endorse\")}</span>\r\n                            <h4 className=\"font-w600\">{(this.state.enBrutus * 1).toFixed(2)} TRX</h4>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\" id=\"chartdiv-brst\" style={{ height: \"400px\", backgroundColor: \"white\" }}></div>\r\n\r\n\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: 'white' }} value={this.state.cantidadDatos} onChange={this.handleChange2}>\r\n                        {opciones.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      {\" | \"}\r\n                      <select className=\"btn-secondary style-1 default-select\" style={{ backgroundColor: 'white' }} value={this.state.temporalidad} onChange={this.handleChange}>\r\n                        {options.map((option) => (\r\n                          <option key={option.label.toString()} value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-xl-3 col-xxl-3 col-sm-6 wow fadeInRight\" data-wow-delay=\"0.3s\">\r\n                  <div className=\"card digital-cash\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"media d-block\">\r\n                          <img\r\n                            onClick={() => {\r\n\r\n                              const { tronWeb, accountAddress } = this.props\r\n                              this.setState({\r\n                                ModalTitulo: t(\"brst.alert.donate\", { returnObjects: true })[0],\r\n                                ModalBody: (\r\n                                  <>\r\n\r\n                                    TRX:\r\n                                    <input type=\"number\" id=\"trxD\" className=\"form-control mb-3\" placeholder=\"Amount\"></input>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-success w-100 mb-3\"\r\n                                      onClick={async () => {\r\n                                        let donacion = document.getElementById('trxD').value;\r\n                                        donacion = new BigNumber(donacion).shiftedBy(6).dp(0);\r\n\r\n                                        let inputs = [\r\n                                          //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n                                          //{type: 'uint256', value: '1000000'}\r\n                                        ]\r\n\r\n                                        let funcion = \"donate()\"\r\n                                        const options = { callValue: donacion }\r\n                                        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n                                        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n                                        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n                                          .catch((e) => {\r\n\r\n                                            this.setState({\r\n                                              ModalTitulo: t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n                                              ModalBody: t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n                                            })\r\n\r\n                                            window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                            return false\r\n                                          })\r\n                                        if (!transaction) return;\r\n                                        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n                                          .then(() => {\r\n                                            this.setState({\r\n                                              ModalTitulo: t(\"brst.donate.title\", { returnObjects: true })[0],\r\n                                              ModalBody: <>{t(\"brst.donate.body\", { returnObjects: true })[1]}\r\n                                                <br ></br><br ></br>\r\n                                                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"accept\")}</button>\r\n                                              </>\r\n                                            })\r\n\r\n                                            window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                          })\r\n\r\n\r\n\r\n                                      }}\r\n                                    >\r\n                                      {t(\"brst.alert.donate\", { returnObjects: true })[3]}\r\n                                    </button>\r\n                                    BRST\r\n                                    <input type=\"number\" id=\"brstD\" className=\"form-control mb-3\" placeholder=\"Amount\"></input>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      className=\"btn btn-success w-100 mb-3\"\r\n                                      onClick={async () => {\r\n                                        let donacion = document.getElementById('brstD').value;\r\n                                        donacion = new BigNumber(donacion).shiftedBy(6).dp(0);\r\n\r\n\r\n                                        let inputs = [\r\n                                          //{type: 'address', value: tronWeb.address.toHex(\"TTknL2PmKRSTgS8S3oKEayuNbznTobycvA\")},\r\n                                          { type: 'uint256', value: donacion }\r\n                                        ]\r\n\r\n                                        let funcion = \"donate(uint256)\"\r\n                                        const options = {}\r\n                                        let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.BRST_TRX_Proxy.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n                                        let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n                                        transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n                                          .catch((e) => {\r\n\r\n                                            this.setState({\r\n                                              ModalTitulo: t(\"brst.alert.nonEfective\", { returnObjects: true })[0],\r\n                                              ModalBody: t(\"brst.alert.nonEfective\", { returnObjects: true })[1] + \" | \" + e.toString()\r\n                                            })\r\n\r\n                                            window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                            return false\r\n                                          })\r\n                                        if (!transaction) return;\r\n                                        transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n                                          .then(() => {\r\n                                            this.setState({\r\n                                              ModalTitulo: t(\"brst.donate.title\", { returnObjects: true })[0],\r\n                                              ModalBody: <>{t(\"brst.donate.body\", { returnObjects: true })[1]}\r\n                                                <br ></br><br ></br>\r\n                                                <button type=\"button\" className=\"btn btn-success\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>{t(\"accept\")}</button>\r\n                                              </>\r\n                                            })\r\n\r\n                                            window.$(\"#mensaje-brst\").modal(\"show\");\r\n                                          })\r\n\r\n                                      }}\r\n                                    >\r\n                                      {t(\"brst.alert.donate\", { returnObjects: true })[3]}\r\n                                    </button>\r\n                                  </>\r\n                                )\r\n                              });\r\n                              window.$(\"#mensaje-brst\").modal(\"show\");\r\n                            }}\r\n                            src=\"images/brst.png\"\r\n                            width=\"100%\"\r\n                            alt=\"brutus tron staking\"\r\n                          />\r\n                          <div className=\"media-content\">\r\n                            <h4 className=\"mt-0 mt-md-4 fs-20 font-w700 text-black mb-0\">{t(\"brst.aStaking\")}</h4>\r\n                            <span className=\"font-w600 text-black\">Brutus</span>\r\n                            <span className=\"my-4 fs-16 font-w600 d-block\">1 BRST = {this.state.precioBrst} TRX</span>\r\n                            <p className=\"text-start\">{t(\"brst.description\")}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer p-2 border-0\">\r\n                      <a href=\"https://brutus.finance/brutusblog.html\" className=\"btn btn-link text-primary\">{t(\"brst.button.readM\")}</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-xl-6 col-sm-6 wow fadeInUp\" data-wow-delay=\"0.4s\">\r\n\r\n\r\n                  <div className=\"card quick-trade\">\r\n                    <div className=\"card-header pb-0 border-0 flex-wrap\">\r\n                      <div>\r\n                        <h4 className=\"heading mb-0\">{t(\"brst.exchange\")} V4.1</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col-12 pb-2\">From</div>\r\n                        <div className=\"col-2 \">\r\n                          <img height=\"42px\" src={\"/images/token/\" + this.state.from + \".png\"} alt=\"tron logo\" />\r\n                        </div>\r\n                        <div className=\"col-3\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                          <select\r\n                            style={{ color: \"white\", backgroundColor: \"var(--primary)\", cursor: \"pointer\", borderRadius: \"0.625rem 0 0 0.625rem\" }}\r\n                            className=\"form-select\"\r\n                            id=\"currencySelectFrom\"\r\n                            onChange={this.handleCurrencyChangeFrom} // Manejador para cambios en la selección\r\n                          >\r\n                            <option value=\"trx\">TRX </option>\r\n                            <option value=\"usdt\">USDT </option>\r\n                            <option value=\"usdd\">USDD </option>\r\n                            <option value=\"brst\">BRST </option>\r\n\r\n                          </select>\r\n                        </div>\r\n                        <div className=\"col-7\" style={{ paddingLeft: \"0px\" }}>\r\n                          <input className=\"form-control form-control text-end\" style={{ borderRadius: \"0 0.625rem 0.625rem 0\" }} type=\"number\" id=\"amountFrom\" onInput={() => this.calcExchange(false, this.state.from + \"_\" + this.state.to)} placeholder={minCompra} min={this.state.minCompra} step={0.1} ></input>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                      <hr></hr>\r\n\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">To</div>\r\n                        <div className=\"col-2\">\r\n                          <img height=\"42px\" src={\"/images/token/\" + this.state.to + \".png\"} alt=\"brst logo\" />\r\n                        </div>\r\n                        <div className=\"col-3\" style={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n                          <select\r\n                            style={{ color: \"white\", backgroundColor: \"var(--primary)\", cursor: \"pointer\", borderRadius: \"0.625rem 0 0 0.625rem\" }}\r\n                            className=\"form-select\"\r\n                            id=\"currencySelectTo\"\r\n                            onChange={this.handleCurrencyChangeTo} // Manejador para cambios en la selección\r\n                          >\r\n                            <option value=\"brst\">BRST </option>\r\n                            <option value=\"trx\">TRX </option>\r\n\r\n                          </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-7\" style={{ paddingLeft: \"0px\" }}>\r\n\r\n                          <input className=\"form-control form-control text-end\" style={{ borderRadius: \"0 0.625rem 0.625rem 0\" }} type=\"number\" id=\"amountTo\" onInput={() => this.calcExchange(true, this.state.to + \"_\" + this.state.from)} placeholder={minventa} min={this.state.minventa} step={0.0001} ></input>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"card-footer border-0\">\r\n                      {retiradas}\r\n                      <div className=\"row\">\r\n\r\n                        <div className=\"col-12 text-center\">\r\n                          {swapButton}\r\n\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex mt-2\" style={{ justifyContent: \"space-between\" }}>\r\n                        <p className=\"mb-0 fs-14\">{t(\"brst.energy\", { e1: (userEnergy).toLocaleString('en-US') })}</p>\r\n                        <p className=\"mb-0 fs-14\">Fee ~ {this.state.useTrx} TRX</p>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-xl-6 col-sm-12 wow fadeInUp\" data-wow-delay=\"0.6s\">\r\n                  <div className=\"card price-list\">\r\n                    <div className=\"card-header border-0 pb-2\">\r\n                      <div className=\"chart-title\">\r\n                        <h4 className=\" mb-0\" style={{ color: \"var(--primary)\" }}>{t(\"mya\")}</h4>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body p-3 py-0\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table text-center bg-warning-hover order-tbl\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th className=\"text-left\">{t(\"token\")}</th>\r\n                              <th className=\"text-center\">{t(\"amount\")}</th>\r\n                              <th className=\"text-center\">{t(\"value\")}</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarBRST() }}>\r\n                              <td className=\"text-left\">BRST</td>\r\n                              <td>{this.state.balanceBRST}</td>\r\n                              <td>{new BigNumber(this.state.balanceBRST * this.state.precioBrst * this.state.precioUSDD).dp(2).toNumber().toLocaleString(\"en-US\")} USDD</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">TRX</td>\r\n                              <td>{this.state.balanceTRX}</td>\r\n                              <td>{new BigNumber(this.state.balanceTRX * this.state.precioUSDD).dp(2).toNumber().toLocaleString(\"en-US\")} USDD</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">USDT</td>\r\n                              <td>{this.state.balanceUSDT.toLocaleString(\"en-US\")}</td>\r\n                              <td>--.--</td>\r\n\r\n                            </tr>\r\n                            <tr style={{ cursor: \"pointer\" }} onClick={() => { this.llenarTRX() }}>\r\n                              <td className=\"text-left\">USDD</td>\r\n                              <td>{this.state.balanceUSDD.toLocaleString(\"en-US\")}</td>\r\n                              <td>--.--</td>\r\n\r\n                            </tr>\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-footer text-center py-3 border-0\">\r\n                      <a href=\"/\" className=\"btn-link text-black\">{t(\"showM\")}<i className=\"fa fa-caret-right\"></i></a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mx-0\">\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Your last earnings staking </h4>\r\n              <h6 className=\"card-subtitle\">{this.state.misBRST} BRST = {(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"table-responsive\">\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{t(\"day\")}</th>\r\n                      <th>{t(\"earned\")}</th>\r\n                      <th>{t(\"brst.dailyG\")}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {earnings.map((objeto) => (\r\n                      <tr key={objeto.dias.toString()}>\r\n                        <th>{t(\"brst.daysAgo\", { days: objeto.dias })}</th>\r\n                        <td>{(objeto.trx).toFixed(6)} TRX</td>\r\n                        <td className=\"color-primary\">{(objeto.diario).toFixed(6)} TRX/{t(\"day\")} </td>\r\n                      </tr>))}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-12\" id=\"request-brst\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header d-sm-flex d-block pb-0 border-0\">\r\n              <div>\r\n                <h4 className=\"fs-20 text-black\">{t(\"brst.request\", { returnObjects: true, number: solicitudes })[0]}\r\n                  <button className=\"btn  btn-success text-white\" onClick={() => this.estado()}>\r\n                    {t(\"brst.request\", { returnObjects: true })[1]} <i className=\"bi bi-arrow-repeat\"></i>\r\n                  </button></h4>\r\n                <p className=\"mb-0 fs-12\">{t(\"brst.request\", { returnObjects: true })[2]}</p>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {globDepositos}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">{t(\"brst.estimate\")} <br></br> APR {(crecimientoPorcentual * 360).toFixed(3)} %</h4><br></br>\r\n\r\n              <h6 className=\"card-subtitle\" style={{ cursor: \"pointer\" }} onClick={() => { document.getElementById(\"hold\").value = this.state.balanceBRST; this.handleChangeCalc({ target: { value: this.state.balanceBRST } }) }}>\r\n                {t(\"brst.mystaking\")}{this.state.misBRST} BRST = {(this.state.misBRST * this.state.precioBrst).toFixed(3)} TRX\r\n              </h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n\r\n              <b>Days Average: </b>\r\n              <input type=\"number\" id=\"daysProm\" defaultValue={tiempoPromediado} placeholder={tiempoPromediado + \" days\"} min={1} step={1} onInput={async () => {\r\n                let daysProm = parseInt(document.getElementById('daysProm').value);\r\n                await this.setState({ tiempoPromediado: isNaN(daysProm) ? 1 : daysProm });\r\n                this.estado();\r\n              }} ></input>\r\n\r\n              <div className=\"table-responsive overflow-scroll\" style={{ marginTop: \"30px\", height: \"420px\", border: \"2px solid rgba(207, 207, 207, 0.97)\", borderRadius: \"10px\" }}>\r\n\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n\r\n                  <tbody>\r\n                    <tr>\r\n                      <th>\r\n                        Days Hold<br></br>\r\n                        <input type=\"number\" id=\"days\" defaultValue={diasCalc} onInput={this.handleChangeDias} ></input><br></br><br></br>\r\n                        <button className=\"btn btn-primary\" onClick={() => { days = days.unshift({ days: diasCalc, amount: parseFloat((document.getElementById('hold').value).replace(/,/g, \".\")), time: Date.now(), APY: crecimientoPorcentual }) }}>Calculate</button>\r\n\r\n                      </th>\r\n                      <th>\r\n                        Your BRST<br></br>\r\n                        <input type=\"number\" id=\"hold\" defaultValue={0} onInput={this.handleChangeCalc} ></input>\r\n                      </th>\r\n\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <table className=\"table table-hover table-responsive-sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>{t(\"day\", { count: 10 })}</th>\r\n                      <th>{t(\"brst.hold\")}</th>\r\n                      <th>{t(\"brst.estimateIn\")}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {days.map((obj) => {\r\n\r\n                      obj.amount = parseFloat(obj.amount);\r\n                      obj.amount = isNaN(obj.amount) || obj.amount <= 0 ? this.state.misBRST : obj.amount;\r\n                      obj.days = isNaN(obj.days) ? 1 : obj.days;\r\n                      obj.time = isNaN(obj.time) ? Date.now() : obj.time;\r\n\r\n                      return (\r\n                        <tr key={\"prospect-days-\" + obj.days + \"-\" + obj.amount + \"-\" + obj.time}>\r\n                          <th>{obj.days}</th>\r\n                          <td>{obj.amount} BRST<br>\r\n                          </br>{(obj.amount * precioBrst).toFixed(3)} TRX</td>\r\n                          <td>{((obj.amount * precioBrst * ((crecimientoPorcentual * obj.days) / 100))).toFixed(6)} TRX</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>Token:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.BRST + \"/code\"}>{utils.BRST}</a>\r\n                <br ></br>\r\n                <b>Regular withdrawals:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.ProxySC2 + \"/code\"}>{utils.ProxySC2}</a>\r\n                <br ></br>\r\n                <b>Fast withdrawals:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.ProxySC3 + \"/code\"}>{utils.ProxySC3}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"modal fade\" id=\"mensaje-brst\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>{this.state.ModalBody}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>);\r\n  }\r\n}\r\n\r\nexport default withTranslation()(Staking);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport utils from \"../utils\";\r\n\r\n\r\n/**\r\nclass nftOficina extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdeposito: \"Loading...\",\r\n\t\t\twallet: this.props.accountAddress,\r\n\t\t\tbalanceBRUT: 0,\r\n\t\t\tprecioBRUT: 0\r\n\r\n\t\t};\r\n\r\n\t\tthis.estado = this.estado.bind(this);\r\n\t\tthis.consultarPrecio = this.consultarPrecio.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tawait utils.setContract(window.tronWeb, contractAddress);\r\n\t\tthis.estado();\r\n\t\tsetInterval(() => this.estado(), 3 * 1000);\r\n\t};\r\n\r\n\tasync consultarPrecio() {\r\n\r\n\t\tvar precio = await utils.contract.RATE().call();\r\n\t\tprecio = parseInt(precio) / 10 ** 6;\r\n\r\n\t\tthis.setState({\r\n\t\t\tprecioBRUT: precio\r\n\t\t});\r\n\r\n\t\treturn precio;\r\n\r\n\t};\r\n\r\n\tasync estado() {\r\n\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\t\tvar contractNFT = await window.tronWeb.contract().at(cons.BRGY);\r\n\r\n\t\tvar robots = [];\r\n\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await contractMistery.entregaNFT(this.props.accountAddress, index).call()\r\n\t\t\t\t.then((conteo) => {\r\n\t\t\t\t\tif (conteo) {\r\n\t\t\t\t\t\trobots.push(parseInt(conteo)); return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\r\n\t\t\tif (conteo === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar estonuevo = [];\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\t\t\tlet user = await contractNFT.ownerOf(robots[index]).call();\r\n\t\t\testonuevo[index] = window.tronWeb.address.fromHex(user) === this.props.accountAddress;\r\n\t\t}\r\n\r\n\t\t//console.log(estonuevo)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tvar URI = await contractNFT.tokenURI(robots[index]).call()\r\n\r\n\t\t\tvar metadata = JSON.parse(await (await fetch(cons.proxy + URI)).text());\r\n\t\t\tmetadata.numero = robots[index]\r\n\r\n\t\t\trobots[index] = metadata;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar imagerobots = [];\r\n\t\tvar recBotton = (<></>)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tif (!estonuevo[index]) {\r\n\t\t\t\trecBotton = (\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={async () => {\r\n\t\t\t\t\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\t\t\t\t\t\tawait contractMistery.claimNFT_especifico(index).send();\r\n\t\t\t\t\t}}>Claim</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\trecBotton = (<></>)\r\n\t\t\t}\r\n\r\n\t\t\timagerobots[index] = (\r\n\t\t\t\t<div className=\"col-xl-3 col-lg-6 col-sm-6\" key={\"robbrutN\" + index}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"new-arrival-product\">\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrivals-img-contnent\">\r\n\t\t\t\t\t\t\t\t\t<img src={robots[index].image} alt={robots[index].name} className=\"img-thumbnail\"></img>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrival-content text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t<h4>#{robots[index].numero} {robots[index].name}</h4>\r\n\t\t\t\t\t\t\t\t\t{recBotton}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trobots: robots,\r\n\t\t\timagerobots: imagerobots\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\" container text-center\">\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t<div className=\"col-lg-12 p-2\">\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<br /><br />\r\n\r\n\t\t\t\t\t\t\t<h5 >\r\n\t\t\t\t\t\t\t\twallet:<br />\r\n\t\t\t\t\t\t\t\t<strong>{this.props.accountAddress}</strong><br /><br />\r\n\t\t\t\t\t\t\t</h5>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t{this.state.imagerobots}\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass nftCrowdFunding extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t\tmc: \"Loading...\",\r\n\t\t\tmb: \"Loading...\"\r\n\t\t};\r\n\r\n\t\tthis.compra = this.compra.bind(this);\r\n\t\tthis.misterio = this.misterio.bind(this);\r\n\r\n\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tthis.misterio();\r\n\t\t}, 7 * 1000)\r\n\t}\r\n\r\n\tasync misterio() {\r\n\r\n\t\tvar contractNFT = await window.tronWeb.contract().at(cons.BRGY);\r\n\t\tconsole.log(contractNFT)\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\tlet mb = 0;\r\n\t\tlet mc = 0;\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await contractMistery.entregaNFT(this.props.accountAddress, index).call().catch(() => { return 0; });\r\n\r\n\t\t\tif (conteo) {\r\n\t\t\t\tmc++;\r\n\t\t\t\tlet nft = await contractMistery.entregaNFT(this.props.accountAddress, index).call();\r\n\t\t\t\tlet ownerNft = await contractNFT.ownerOf(parseInt(nft)).call();\r\n\t\t\t\townerNft = window.tronWeb.address.fromHex(ownerNft);\r\n\r\n\t\t\t\tif (ownerNft !== this.props.accountAddress) {\r\n\t\t\t\t\tmb++;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tmc: mc,\r\n\t\t\tmb: mb\r\n\t\t})\r\n\r\n\t}\r\n\r\n\r\n\tasync compra() {\r\n\r\n\t\tvar accountAddress = await window.tronWeb.trx.getAccount();\r\n\t\taccountAddress = window.tronWeb.address.fromHex(accountAddress.address);\r\n\r\n\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\tvar contractAPENFT = await window.tronWeb.contract().at(cons.APENFT);\r\n\r\n\t\tvar aprovado = await contractAPENFT.allowance(accountAddress, contractAddress).call();\r\n\r\n\t\tif (aprovado.remaining) {\r\n\t\t\taprovado = aprovado.remaining;\r\n\t\t}\r\n\r\n\t\taprovado = parseInt(aprovado);\r\n\t\taprovado = aprovado / 10 ** 6;\r\n\r\n\r\n\t\tif (aprovado > 0) {\r\n\r\n\t\t\tawait contractMistery.buyMisteryBox().send();\r\n\r\n\t\t\twindow.alert(\"Mistery box buyed!\");\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tawait contractAPENFT.approve(contractAddress, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send();\r\n\r\n\r\n\t\t}\r\n\r\n\t\tthis.misterio();\r\n\r\n\t};\r\n\r\n\trender() {\r\n\r\n\r\n\t\treturn (\r\n\r\n\r\n\t\t\t<div className=\"container text-center\">\r\n\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid\"\r\n\t\t\t\t\t\t\t\tsrc=\"assets/img/MISTERY2.gif\"\r\n\t\t\t\t\t\t\t\talt=\"mistery box brutus\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<h2>Mistery box</h2>\r\n\t\t\t\t\t\t\t<p>10'000.000 APENFT</p>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-success\" style={{ \"cursor\": \"pointer\" }} onClick={() => this.compra()}>Buy Mistery Box</button>\r\n\r\n\t\t\t\t\t\t\t<br></br><br></br>\r\n\r\n\t\t\t\t\t\t\tMistery Box buyed: {this.state.mc}\r\n\r\n\t\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t\t<button className=\"btn btn-warning\" style={{ \"cursor\": \"pointer\" }} onClick={async () => {\r\n\r\n\t\t\t\t\t\t\t\tif (false) {\r\n\r\n\t\t\t\t\t\t\t\t\twindow.alert(\"please wait to claim your NFT\")\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tvar contractMistery = await window.tronWeb.contract().at(cons.SC3);\r\n\r\n\t\t\t\t\t\t\t\t\tawait contractMistery.claimNFT().send()\r\n\t\t\t\t\t\t\t\t\t\t.then(() => { window.alert(\"NFT's sended\") })\r\n\t\t\t\t\t\t\t\t\t\t.catch(() => { window.alert(\"Error to reclaim\") })\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}}>Open {this.state.mb} Mistery Box</button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n */\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nclass Galeria extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\timagerobots: []\r\n\r\n\t\t};\r\n\r\n\t\tthis.estado = this.estado.bind(this);\r\n\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = \"BRGY | Brutus.Finance\"\r\n\r\n\t\tintervalId = setInterval(() => {\r\n\r\n\t\t\tif (Date.now() >= nextUpdate) {\r\n\r\n\t\t\t\tif (!this.props.contrato.ready) {\r\n\t\t\t\t\tnextUpdate = Date.now() + 3 * 1000;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnextUpdate = Date.now() + 60 * 1000;\r\n\t\t\t\t}\r\n\t\t\t\tthis.estado();\r\n\t\t\t}\r\n\r\n\t\t}, 3 * 1000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(intervalId)\r\n\t}\r\n\r\n\r\n\tasync estado() {\r\n\r\n\t\tlet { contrato } = this.props\r\n\r\n\t\tif (!contrato.ready) return;\r\n\r\n\t\tlet robots = [];\r\n\r\n\t\tfor (let index = 0; index < 25; index++) {\r\n\t\t\tvar conteo = await this.props.contrato.MBOX.entregaNFT(this.props.accountAddress, index).call()\r\n\t\t\t\t.then((conteo) => {\r\n\t\t\t\t\tif (conteo) {\r\n\t\t\t\t\t\trobots.push(parseInt(conteo)); return 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\r\n\t\t\tif (conteo === 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar estonuevo = [];\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\t\t\tlet user = await this.props.contrato.BRGY.ownerOf(robots[index]).call();\r\n\t\t\testonuevo[index] = window.tronWeb.address.fromHex(user) === this.props.accountAddress;\r\n\t\t}\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tvar URI = await this.props.contrato.BRGY.tokenURI(robots[index]).call()\r\n\r\n\t\t\tvar metadata = await fetch(utils.proxy + URI).then((res) => { return res.json() }).catch(console.error);\r\n\t\t\tmetadata.numero = robots[index]\r\n\t\t\trobots[index] = metadata;\r\n\r\n\t\t}\r\n\r\n\t\tvar imagerobots = [];\r\n\t\tvar recBotton = (<></>)\r\n\r\n\t\tfor (let index = 0; index < robots.length; index++) {\r\n\r\n\t\t\tif (!estonuevo[index]) {\r\n\t\t\t\trecBotton = (\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={async () => {\r\n\t\t\t\t\t\tawait this.props.contrato.MBOX.claimNFT_especifico(index).send();\r\n\t\t\t\t\t}}>Claim</button>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\trecBotton = (<></>)\r\n\t\t\t}\r\n\r\n\t\t\timagerobots[index] = (\r\n\t\t\t\t<div className=\"col-xl-3 col-lg-6 col-sm-6\" key={\"robbrutN\" + index}>\r\n\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"new-arrival-product\">\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrivals-img-contnent\">\r\n\t\t\t\t\t\t\t\t\t<a href={robots[index].image} rel=\"noopener noreferrer\" target=\"_blank\">\r\n\t\t\t\t\t\t\t\t\t\t<img src={robots[index].image} alt={robots[index].name} className=\"img-thumbnail\"></img>\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"new-arrival-content text-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t<h4>#{robots[index].numero} {robots[index].name}</h4>\r\n\t\t\t\t\t\t\t\t\t{recBotton}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\trobots: robots,\r\n\t\t\timagerobots: imagerobots\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n\t\t\t\t<div className=\"row page-titles mx-0\">\r\n\t\t\t\t\t<div className=\"col-sm-6 p-md-0\">\r\n\t\t\t\t\t\t<div className=\"welcome-text\">\r\n\t\t\t\t\t\t\t<h4>My Colectibles</h4>\r\n\t\t\t\t\t\t\t<p className=\"mb-0\">BRGY</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-6 p-md-0 justify-content-sm-end mt-2 mt-sm-0 d-flex\">\r\n\t\t\t\t\t\t<ol className=\"breadcrumb\">\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item\">See collection on </li>\r\n\t\t\t\t\t\t\t<li className=\"breadcrumb-item active\"><a href=\"https://bit.ly/Brutus-Gallery\" rel=\"noopener noreferrer\" target=\"_blank\">APENFT</a></li>\r\n\t\t\t\t\t\t</ol>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{this.state.imagerobots}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withTranslation()(Galeria);","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport abi_SUNSAWPv2 from \"../assets/abi/sunswapV2.json\";\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nlet sunswapRouter = \"TKzxdSv2FZKQrEqkKVgp5DcwEXBEKMg2Ax\" // suwap V2\r\nlet intervalId = [];\r\n\r\nclass NFTs extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      deposito: \"Loading...\",\r\n      wallet: this.props.accountAddress,\r\n      balanceBRUT: 0,\r\n      precioBRUT: 0,\r\n      mc: 0,\r\n      mb: 0,\r\n      totalNFT: 1,\r\n      premio: \"Loading...\",\r\n      LastWiner: \"Loading...\",\r\n      proximoSorteo: \"Loading...\",\r\n      modalTitulo: \"\",\r\n      modalBody: \"\",\r\n      contarSegundos: 10e25,\r\n      restanteSegundos: 10e25,\r\n      porcentaje: 0,\r\n\r\n      comprarBRLT: 1,\r\n      precioUnidad: 100,\r\n      total: 100,\r\n      moneda: \"trx\",\r\n\r\n      tikets: [],\r\n\r\n      days: \"\",\r\n      hours: \"00\",\r\n      minutes: \"00\",\r\n      seconds: \"00\",\r\n\r\n      deadline: 1,\r\n\r\n      onSale: <>Loading NFT FOR SALE</>,\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.consultarPrecio = this.consultarPrecio.bind(this);\r\n\r\n    this.preCompra = this.preCompra.bind(this);\r\n    this.compra = this.compra.bind(this);\r\n\r\n\r\n    this.sunSwap = this.sunSwap.bind(this);\r\n    this.sorteo = this.sorteo.bind(this);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\r\n\r\n    this.updateCountdown = this.updateCountdown.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    setTimeout(async () => {\r\n      this.estado();\r\n    }, 3 * 1000)\r\n\r\n    intervalId.push(setInterval(() => this.updateCountdown(), 1000))\r\n\r\n    intervalId.push(setInterval(() => {\r\n\r\n      let restanteSegundos = parseInt(this.state.contarSegundos - (Date.now() / 1000))\r\n\r\n      this.setState({\r\n        restanteSegundos: restanteSegundos,\r\n        porcentaje: (restanteSegundos / 1296000 * 100)\r\n      })\r\n\r\n    }, 1 * 1000))\r\n\r\n    intervalId.push(setInterval(async () => {\r\n      if (this.props.contrato.ready) {\r\n        clearInterval(intervalId[2])\r\n        intervalId.push(setInterval(() => this.estado(), 60 * 1000))\r\n      }\r\n      this.estado();\r\n    }, 6 * 1000))\r\n\r\n\r\n  };\r\n\r\n  componentWillUnmount() {\r\n\r\n    for (let index = 0; index < intervalId.length; index++) {\r\n      clearInterval(intervalId[index])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  handleChange(e) {\r\n    let value = parseInt(e.target.value);\r\n    if (isNaN(value) || value < 1) value = 1;\r\n    this.setState({\r\n      comprarBRLT: value,\r\n      total: value * this.state.precioUnidad\r\n    });\r\n  }\r\n\r\n  handleChangeSelect(e) {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      moneda: value\r\n    });\r\n  }\r\n\r\n  updateCountdown() {\r\n    if (intervalId.length >= 1) {\r\n      // Getting current time in required format\r\n      let now = new Date().getTime();\r\n      let timeToLive = this.state.deadline - now;\r\n\r\n      // Getting value of days, hours, minutes, seconds\r\n      let days = Math.floor(timeToLive / (1000 * 60 * 60 * 24));\r\n      let hours = Math.floor((timeToLive % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      let minutes = Math.floor((timeToLive % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((timeToLive % (1000 * 60)) / 1000);\r\n\r\n      if (days <= 1) {\r\n        days = days + \" Day - \"\r\n      } else {\r\n        days = days + \" Days - \"\r\n      }\r\n\r\n      if (hours <= 9) {\r\n        hours = \"0\" + hours\r\n      }\r\n\r\n      if (minutes <= 9) {\r\n        minutes = \"0\" + minutes\r\n      }\r\n\r\n      if (seconds <= 9) {\r\n        seconds = \"0\" + seconds\r\n      }\r\n\r\n      // Output for over time\r\n      if (timeToLive < 0) {\r\n        days = \"\"\r\n        hours = \"00\"\r\n        minutes = \"00\"\r\n        seconds = \"00\"\r\n      }\r\n\r\n      this.setState({\r\n        days,\r\n        hours,\r\n        minutes,\r\n        seconds,\r\n      })\r\n    }\r\n  }\r\n\r\n  async estado() {\r\n\r\n    const {contrato = null, accountAddress} = this.props\r\n\r\n    if (!contrato || !contrato.ready) return;\r\n\r\n    //await this.props.contrato.loteria.inicializar().send();\r\n\r\n    //await this.props.contrato.loteria.update_addressPOOL(\"TH4xHxyecwZJJ5SXouUYJ3KW4zPw5BtNSE\").send();\r\n\r\n    /*var cosa = await this.props.contrato.loteria.toTRX(\"1000000\").call()\r\n    cosa = cosa[0]\r\n    console.log(cosa)\r\n    window.alert(cosa);\r\n\r\n    cosa = await this.props.contrato.loteria.toBRST(cosa.toString()).call()\r\n    cosa = cosa[0]\r\n    console.log(cosa)\r\n    window.alert(cosa);*/\r\n\r\n    //let cosa = await this.props.contrato.loteria._premio().call()\r\n    //console.log(cosa)\r\n\r\n    //await this.props.contrato.ProxyLoteria.upgradeTo(\"TV5WezZcBPA3v3HJEkM47BBp29dYNmPdj4\").send()\r\n\r\n    //console.log(this.props.tronWeb.address.fromHex(await this.props.contrato.loteria.contractFastPool().call()))\r\n\r\n\r\n    let cantidad = 0\r\n    if (accountAddress !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n      cantidad = parseInt((await contrato.BRLT.balanceOf(this.props.accountAddress).call()))\r\n    }\r\n    let totalNFT = parseInt((await contrato.BRLT.totalSupply().call()))\r\n    let premio = parseInt((await contrato.loteria.premio().call())[0]) / 10 ** 6\r\n    let LastWiner = parseInt(await contrato.loteria.lastWiner().call())\r\n\r\n    this.setState({\r\n      totalNFT,\r\n      premio,\r\n      LastWiner,\r\n    })\r\n\r\n    let onSaleURI = \"https://nft-metadata.brutusservices.com/v1/lottery?ticket=\" + totalNFT\r\n    let onSalemetadata = JSON.parse(await (await fetch(utils.proxy + onSaleURI)).text());\r\n\r\n    let onSale = <div className=\"col-md-6 col-sm-12\" key={\"tiket-onsale-\" + totalNFT}>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"new-arrival-product\">\r\n            <div className=\"new-arrival-content text-center\">\r\n              <h4>Ticket #{totalNFT} FOR SALE</h4>\r\n            </div>\r\n            <div className=\"new-arrivals-img-contnent\">\r\n              <img src={onSalemetadata.image} alt={onSalemetadata.name + \" # \" + onSalemetadata.number} className=\"img-thumbnail\"></img>\r\n            </div>\r\n            <button className=\"btn btn-primary mt-1\" onClick={() => this.preCompra()} >  {\">>>\"} {this.state.total + \" \"}TRX {\"<<<\"}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    this.setState({ onSale })\r\n\r\n    let proximoSorteo = parseInt(await contrato.loteria.proximaRonda().call())\r\n    this.setState({ contarSegundos: proximoSorteo })\r\n    let prosort = proximoSorteo;\r\n    proximoSorteo = new Date(proximoSorteo * 1000)\r\n\r\n    this.setState({ deadline: proximoSorteo })\r\n\r\n    var minutos = proximoSorteo.getMinutes()\r\n\r\n    if (minutos < 10) {\r\n      minutos = \"0\" + minutos;\r\n    }\r\n\r\n    this.setState({\r\n      mc: cantidad,\r\n      proximoSorteo: \"Day \" + proximoSorteo.getDate() + \" | \" + proximoSorteo.getHours() + \":\" + minutos + \"Hrs\",\r\n      prosort,\r\n    });\r\n\r\n\r\n    let myTikets = parseInt((await contrato.BRLT.balanceOf(accountAddress).call()))\r\n\r\n    /*\r\n    let inputs = [\r\n      {type: 'address', value: this.props.tronWeb.address.toHex(\"TKSpw8UXhJYL2DGdBNPZjBfw3iRrVFAxBr\")},\r\n      //{ type: 'uint256', value: \"72\" }\r\n    ]\r\n\r\n    let funcion = \"deleteVaul(uint256)\"\r\n    const options = {}\r\n    let trigger = await this.props.tronWeb.transactionBuilder.triggerSmartContract(this.props.tronWeb.address.toHex(this.props.contrato.loteria.address), funcion, options, inputs, this.props.tronWeb.address.toHex(this.props.accountAddress))\r\n    let transaction = await this.props.tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n    .catch((e) => { console.log(e)})\r\n    transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n    .catch((e) => { console.log(e)})\r\n\r\n    console.log(transaction)\r\n    */\r\n\r\n\r\n    let { tikets } = this.state\r\n\r\n    for (let index = 0; index < myTikets; index++) {\r\n\r\n      let globalId = parseInt((await contrato.BRLT.tokenOfOwnerByIndex(accountAddress, index).call()))\r\n\r\n      let URI = await contrato.BRLT.tokenURI(globalId).call()\r\n      let metadata = JSON.parse(await (await fetch(utils.proxy + URI)).text());\r\n\r\n      //console.log(metadata)\r\n\r\n      let button = <></>\r\n\r\n      let value = new BigNumber(parseInt(await contrato.loteria.valueNFT(globalId).call())).shiftedBy(-6).dp(2).toString(10)\r\n\r\n      if (value > 0) {\r\n        button = (<div className=\"new-arrival-content text-center mt-3\">\r\n          <button className=\"btn btn-success\" >Prize {value} TRX</button>\r\n        </div>)\r\n      }\r\n\r\n      tikets[index] = (\r\n\r\n        <div className=\"col-3\" key={\"tiket-lottery-\" + globalId}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"new-arrival-product\">\r\n                <div className=\"new-arrival-content text-center mt-3\">\r\n                  <h4>Ticket #{globalId}</h4>\r\n                </div>\r\n                <div className=\"new-arrivals-img-contnent\">\r\n                  <img src={metadata.image} alt={metadata.name + \" # \" + metadata.number} className=\"img-thumbnail\"></img>\r\n                </div>\r\n                {button}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      this.setState({\r\n        tikets\r\n      })\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async preCompra() {\r\n\r\n    //alquiler de energia\r\n\r\n    if (this.state.moneda !== \"trx\") {\r\n      await this.sunSwap(this.state.moneda);\r\n    }\r\n    this.compra()\r\n\r\n  }\r\n\r\n\r\n  async compra() {\r\n\r\n    const {tronWeb,accountAddress, contrato} = this.props\r\n    const {comprarBRLT,total} = this.state\r\n\r\n\r\n    let feelimit = 200 * 10 ** 6;\r\n\r\n    // comprobar si tiene 100 trx para hacer la compra\r\n\r\n    if (comprarBRLT > 1) feelimit = 1000 * 10 ** 6;\r\n    if (comprarBRLT > 20) feelimit = 2000 * 10 ** 6;\r\n\r\n    let inputs = [\r\n      { type: 'address', value: tronWeb.address.toHex(accountAddress) },\r\n      { type: 'uint256', value: comprarBRLT }\r\n    ]\r\n\r\n    let funcion = \"buyLoteria(address,uint256)\"\r\n    const options = { callValue: new BigNumber(total).shiftedBy(6).dp(0).toString(10), feelimit: feelimit }\r\n    let trigger = await tronWeb.transactionBuilder.triggerSmartContract(tronWeb.address.toHex(contrato.loteria.address), funcion, options, inputs, tronWeb.address.toHex(accountAddress))\r\n    let transaction = await tronWeb.transactionBuilder.extendExpiration(trigger.transaction, 180);\r\n    transaction = await window.tronLink.tronWeb.trx.sign(transaction)\r\n      .catch((e) => {\r\n\r\n        this.setState({\r\n          modalTitulo: \"Error\",\r\n          modalBody: e.toString()\r\n        })\r\n\r\n        console.error(e)\r\n\r\n        window.$(\"#alerta\").modal(\"show\");\r\n        return false\r\n      })\r\n\r\n    if (transaction) {\r\n      transaction = await tronWeb.trx.sendRawTransaction(transaction)\r\n        .then(() => {\r\n          this.setState({\r\n            modalTitulo: \"Purchased lottery ticket\",\r\n            modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n          this.estado();\r\n        })\r\n        .catch((e) => {\r\n\r\n          this.setState({\r\n            ModalTitulo: \"Error\",\r\n            ModalBody: e.toString()\r\n          })\r\n\r\n          window.$(\"#alerta\").modal(\"show\");\r\n          return false\r\n        })\r\n    }\r\n\r\n    this.estado();\r\n  }\r\n\r\n  async sorteo() {\r\n\r\n    const {contrato} = this.props\r\n    const {prosort} = this.state\r\n\r\n    //await this.props.contrato.BRST_TRX_Proxy.setDisponible(\"2000000000\").send()\r\n    let premio = parseInt(await contrato.loteria._premio().call())\r\n\r\n    let salida = parseInt(await contrato.BRST_TRX_Proxy.TRON_PAY_BALANCE_WHITE().call())\r\n\r\n    if (Date.now() >= (prosort * 1000) && salida >= premio) {\r\n      contrato.loteria.sorteo().send()//.send({shouldPollResponse:true})\r\n        .then(async (r) => {\r\n          console.log(r)\r\n          await this.estado()\r\n          this.setState({\r\n            modalTitulo: \"Good luck\",\r\n            modalBody: \"Thank you for collaborating with the activation of the giveaway\"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n          this.setState({\r\n            modalTitulo: \"Bad luck\",\r\n            modalBody: \"something has not gone well, thank you for trying to collaborate, it will be on a next occasion \"\r\n          })\r\n          window.$(\"#alerta\").modal(\"show\");\r\n        })\r\n    } else {\r\n      this.setState({\r\n        modalTitulo: \"Please wait\",\r\n        modalBody: \"It is not yet time to carry out the draw, wait for the announced date to collaborate with the draw\"\r\n      })\r\n      window.$(\"#alerta\").modal(\"show\");\r\n    }\r\n\r\n    this.estado();\r\n  }\r\n\r\n  async consultarPrecio() {\r\n\r\n    var precio = await this.props.contrato.loteria.RATE().call();\r\n    precio = parseInt(precio) / 10 ** 6;\r\n\r\n    this.setState({\r\n      precioBRUT: precio\r\n    });\r\n\r\n    return precio;\r\n\r\n  };\r\n\r\n\r\n\r\n  async sunSwap(coin) {\r\n\r\n    let token\r\n    let swapContract\r\n    let trxAddress\r\n\r\n    switch (coin) {\r\n      case \"usdt\":\r\n\r\n        token = \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\r\n        swapContract = \"TFGDbUyP8xez44C76fin3bn3Ss6jugoUwJ\"\r\n        trxAddress = \"TNUC9Qb1rRpS5CbWLmNMxXBjyFoydXjWFR\"\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // cantidades que costará\r\n\r\n    let contract_base_token = await this.props.tronWeb.contract().at(token)\r\n    let amount_base_token = await contract_base_token.balanceOf(swapContract).call()\r\n    amount_base_token = parseInt(amount_base_token)\r\n    amount_base_token = new BigNumber(amount_base_token).shiftedBy(-1 * (await contract_base_token.decimals().call()))\r\n\r\n    let contract_result_token = await this.props.tronWeb.contract().at(trxAddress)\r\n    let amount_result_token = await contract_result_token.balanceOf(swapContract).call()\r\n    amount_result_token = parseInt(amount_result_token)\r\n    amount_result_token = new BigNumber(amount_result_token).shiftedBy(-1 * (await contract_result_token.decimals().call()))\r\n\r\n\r\n    let price = new BigNumber(amount_base_token).dividedBy(amount_result_token)\r\n\r\n\r\n    price = price.times(this.state.comprarBRLT).times(this.state.precioUnidad)\r\n\r\n    //console.log(price.toString(10))\r\n\r\n    alert(\"will spend approximately ~ \" + price.toString(10) + \" (\" + await contract_base_token.name().call() + \") -> \" + await contract_base_token.name().call())\r\n\r\n\r\n    let contrato = await this.props.tronWeb.contract(abi_SUNSAWPv2, sunswapRouter)///esquema de funciones desde TWetT85bP8PqoPLzorQrCyyGdCEG3MoQAk\r\n\r\n    let aprove = await contract_base_token.allowance(this.props.accountAddress, sunswapRouter).call()\r\n    aprove = parseInt(aprove)\r\n\r\n    if (aprove <= 0) {\r\n      await contract_base_token.approve(sunswapRouter, \"115792089237316195423570985008687907853269984665640564039457584007913129639935\").send()\r\n    }\r\n\r\n    let cantidadTrx = parseInt(this.state.comprarBRLT * this.state.precioUnidad * 10 ** 6)\r\n\r\n    let tokenMax = new BigNumber(this.state.balanceDCT).shiftedBy((this.state.decimalesDCT)).toString(10)\r\n\r\n    let intercam = await contrato[\"4a25d94a\"](cantidadTrx, tokenMax, [this.props.tronWeb.address.toHex(token), this.props.tronWeb.address.toHex(trxAddress)], this.props.accountAddress, (parseInt(Date.now() / 1000)) + 100).send()\r\n\r\n    console.log(intercam)\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {porcentaje,onSale, days, hours, minutes, seconds, proximoSorteo, premio, totalNFT, LastWiner, tikets} = this.state\r\n\r\n    return (\r\n      <>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body pb-2\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-12\">\r\n                    <img src=\"images/banner-brutuslottery.jpg\" width=\"100%\" alt=\"\" style={{ borderRadius: \"4px\" }} ></img>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <hr></hr>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"text-center row align-items-center justify-content-center\">\r\n\r\n                      {onSale}\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                              <div className=\"me-3\">\r\n                                <h2 className=\" count-num mb-0\">Next round: {days} {hours}:{minutes}:{seconds}</h2>\r\n                              </div>\r\n                              <div id=\"ticketSold\"></div>\r\n                            </div>\r\n                            <div className=\"progress mb-2\" style={{ \"height\": \"10px\",\"box-shadow\":\" 0 0 8px rgba(128, 0, 128, 0.5)\" }}>\r\n                              <div className=\"progress-bar progress-animated\" style={{ \"width\": porcentaje + \"%\", \"height\": \"10px\",  \"background\": \"rgba(128, 0, 128, 0.8)\",\r\n  \"animation\": \"stripeMove 1s linear infinite\",\r\n  \"background-image\": \"repeating-linear-gradient(45deg,rgba(255, 255, 255, 0.1),rgba(255, 255, 255, 0.1) 10px,rgba(255, 255, 255, 0.2) 10px,rgba(255, 255, 255, 0.2) 20px)\" }} role=\"progressbar\">\r\n                              </div>\r\n                            </div>\r\n                            <p>{proximoSorteo}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\">\r\n                              <h4 className=\"fs-18 font-w400\">Award</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\">{premio} TRX</h2>\r\n                                <span className=\"fs-16 font-w500 text-success ps-2\"><i className=\"bi bi-caret-up-fill pe-2\"></i></span>\r\n                              </div>\r\n                            </div>\r\n                            <div id=\"barChart\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n                              window.open(\"https://apenft.io/#/collection/TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU\", '_blank')\r\n                            }}>\r\n\r\n                              <h4 className=\"fs-18 font-w400\">NFT Sold</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\">{totalNFT-1}</h2>\r\n                              </div>\r\n                            </div>\r\n                            <div id=\"totalInvoices\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-12\">\r\n                        <div className=\"card overflow-hidden\">\r\n                          <div className=\"card-body py-4 pt-4\">\r\n                            <div className=\"d-flex align-items-center justify-content-between\" style={{ cursor: \"pointer\" }} onClick={() => {\r\n                              window.open(\"https://apenft.io/#/asset/TBCp8r6xdZ34w7Gm3Le5pAjPpA3hVvFZFU/\" + LastWiner, '_blank')\r\n                            }}>\r\n\r\n                              <h4 className=\"fs-18 font-w400\">Last Winner</h4>\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <h2 className=\"count-num\" >#{LastWiner}</h2>\r\n                              </div>\r\n\r\n                            </div>\r\n                            <div id=\"paidinvoices\"></div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12\">\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n\r\n                  <div className=\"card-body \">\r\n\r\n                    <h2 className=\"heading\">My Tickets</h2>\r\n                    <p>\r\n                      The probability of winning is based on how many tickets you have, the more tickets you have, the greater the probability of winning.\r\n                      <br></br><br></br>\r\n\r\n                    </p>\r\n\r\n                    <div className=\"row\">\r\n                      {tikets}\r\n\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n\r\n                  <div className=\"card-body \">\r\n\r\n                    <h2 className=\"heading\">Welcome to Brutus Lottery</h2>\r\n\r\n\r\n                    <p>\r\n                      Where the thrill of acquiring unique NFTs meets the chance to win substantial prizes. Discover a collection of 9999 exclusive NFTs, each representing a digital masterpiece priced at 100 TRX. Engage in bi-weekly automated draws, with 80% of the proceeds going to the winner and 20% to the Brutus Lottery team.\r\n                      <br ></br><br ></br>\r\n\r\n                    </p>\r\n\r\n                    <h4>What We Offer:</h4><br></br>\r\n                    <ol>\r\n                      <li>\r\n                        <b>Exclusive NFTs:</b> Explore a collection of 9999 unique NFTs, each a digital artwork priced at 100 TRX.\r\n                      </li>\r\n                      <li>\r\n                        <b>Bi-weekly Draws:</b> Participate in automatic draws every fifteen days, offering an 80% prize to the winner.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Transparent Process:</b> NFT minting via the Brutus Lottery TRC721 contract ensures authenticity.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Automated and Randomized:</b> Draw results are automatic, and our randomness coefficient guarantees fairness.\r\n\r\n                      </li>\r\n                    </ol>\r\n\r\n                    <h4>How to Participate:</h4>\r\n\r\n                    <ol>\r\n                      <li>\r\n                        <b>Acquire NFTs:</b> Increase your winning chances by acquiring unique NFTs.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Effortless Draws:</b> Prizes are automatically delivered at draw time, eliminating the need for claims.\r\n\r\n                      </li>\r\n                      <li>\r\n                        <b>Explore Infinite Possibilities:</b> Each NFT opens doors to a universe of possibilities, merging digital art with the excitement of draws.\r\n\r\n                      </li>\r\n                    </ol>\r\n                    <p className=\"text-center\">\r\n                      <br></br><br></br>\r\n                      Join Brutus Lottery and experience the thrill of the unique, where every NFT unlocks endless opportunities.\r\n                    </p>\r\n\r\n                    <p className=\"text-center\" >\r\n                      <a href=\"https://brutus.finance/docs/Terms-and-Conditions-Brutus-Lottery.pdf\" className=\"btn btn-primary\">{\"--> \"}Read all Terms and Conditions {\" <--\"}</a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h4 className=\"card-title\">Smart Contracts </h4>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <p>\r\n                    <b>Lottery:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.SC4 + \"/code\"}>{utils.SC4}</a>\r\n                    <br></br>\r\n                    <b>NFT:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + utils.BRLT + \"/code\"}>{utils.BRLT}</a>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal fade\" id=\"alerta\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{this.state.modalTitulo}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                {this.state.modalBody}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(NFTs);","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport utils from \"../utils\";\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst amountsE = [\r\n  { amount: 32000, text: \"32K\" },\r\n  { amount: 100000, text: \"100K\" },\r\n  { amount: 160000, text: \"160K\" },\r\n  { amount: 1000000, text: \"1M\" },\r\n  { amount: 3000000, text: \"3M\" }\r\n]\r\n\r\nconst amountB = [\r\n  { amount: 1000, text: \"1k\" },\r\n  { amount: 2000, text: \"2k\" },\r\n  { amount: 5000, text: \"5k\" },\r\n  { amount: 10000, text: \"10k\" },\r\n  { amount: 50000, text: \"50k\" }\r\n]\r\n\r\nlet intervalId\r\n\r\nclass EnergyRental extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      deposito: \"Loading...\",\r\n      wallet: \"Loading...\",\r\n      precio: \"****\",\r\n      wallet_orden: \"\",\r\n      recurso: \"energy\",\r\n      cantidad: 32000,\r\n      montoMin: 32000,\r\n      minPrice: '2.56',\r\n      periodo: 5,\r\n      temporalidad: \"min\",\r\n      duration: '5min',\r\n      av_band: new BigNumber(0),\r\n      av_energy: new BigNumber(0),\r\n      available_bandwidth: [],\r\n      available_energy: [],\r\n      total_bandwidth_pool: 0,\r\n      total_energy_pool: 0,\r\n      titulo: \"Titulo\",\r\n      body: \"Cuerpo del mensaje\",\r\n      amounts: amountsE,\r\n      energyOn: false,\r\n      bandOn: false,\r\n      fromUrl: true,\r\n\r\n      unitEnergyPrice: new BigNumber(1),\r\n      precios: { energy: [], bandwidth: [] },\r\n\r\n      referral: false,\r\n\r\n    };\r\n\r\n    this.handleChangePeriodo = this.handleChangePeriodo.bind(this);\r\n    this.handleChangeWallet = this.handleChangeWallet.bind(this);\r\n\r\n    this.updateAmount = this.updateAmount.bind(this);\r\n\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.recursos = this.recursos.bind(this);\r\n    this.calcularRecurso = this.calcularRecurso.bind(this);\r\n    this.calcularPrecios = this.calcularPrecios.bind(this);\r\n\r\n    this.preCompra = this.preCompra.bind(this);\r\n    this.compra = this.compra.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    const { t } = this.props\r\n\r\n    document.getElementById(\"tittle\").innerText = t(\"ebot.tittle\")\r\n\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 5 * 1000)\r\n\r\n    intervalId = setInterval(() => {\r\n      this.estado()\r\n\r\n    }, 20 * 1000)\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n  handleChangeWallet(event) {\r\n    let dato = event.target.value;\r\n    this.setState({\r\n      wallet_orden: dato\r\n    });\r\n  }\r\n\r\n  async handleChangePeriodo(event) {\r\n    let dato = (event.target.value).toLowerCase();\r\n    let tmp = \"d\"\r\n\r\n    document.getElementById(\"periodo\").value = dato;\r\n\r\n    if (dato.split(\"h\").length > 1 || dato.split(\"hora\").length > 1) {\r\n      tmp = \"h\"\r\n    }\r\n\r\n    if (dato.split(\"m\").length > 1 || dato.split(\"min\").length > 1) {\r\n      tmp = \"m\"\r\n    }\r\n\r\n    await this.setState({\r\n      periodo: parseInt(dato),\r\n      temporalidad: tmp,\r\n      duration: parseInt(dato) + tmp\r\n    });\r\n\r\n    this.calcularRecurso()\r\n\r\n\r\n  }\r\n\r\n  updateAmount(amount) {\r\n\r\n    let { recurso } = this.state\r\n\r\n    let montoMin = 32000\r\n    if (recurso === \"bandwidth\") {\r\n      montoMin = 1000\r\n    }\r\n\r\n    this.setState({ montoMin })\r\n\r\n    let cantidad = 0;\r\n    if (amount) {\r\n      cantidad = amount\r\n      try {\r\n        document.getElementById(\"amount\").value = amount\r\n\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n\r\n    } else {\r\n      try {\r\n        cantidad = document.getElementById(\"amount\").value\r\n\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n\r\n    }\r\n\r\n    cantidad = parseInt(cantidad)\r\n\r\n    if (parseInt(cantidad) < montoMin || isNaN(cantidad)) {\r\n      cantidad = montoMin\r\n    }\r\n\r\n    this.setState({ cantidad })\r\n\r\n    return cantidad\r\n\r\n  }\r\n\r\n  async estado() {\r\n    let { fromUrl } = this.state\r\n\r\n    await this.calcularPrecios();\r\n\r\n    let loc = document.location.href;\r\n    if ((loc.indexOf('amount') > 0 || loc.indexOf('amb') > 0) && fromUrl) {\r\n      let getString = loc.split('?')[1];\r\n      let GET = getString.split('&');\r\n      let get = {};\r\n      let tmp;\r\n\r\n      for (var i = 0, l = GET.length; i < l; i++) {\r\n        tmp = GET[i].split('=');\r\n        get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n      }\r\n\r\n\r\n      if (parseInt(get['amount']) >= 32000) {\r\n        let cantidad = parseInt(get['amount'])\r\n        let recurso = \"energy\"\r\n        let duration = \"5min\"\r\n        if (get['resource'] !== undefined) {\r\n          recurso = get['resource']\r\n        }\r\n\r\n        if (recurso === \"band\" || recurso === \"bandwidth\") {\r\n          recurso = \"bandwidth\"\r\n        } else {\r\n          recurso = \"energy\"\r\n        }\r\n\r\n        if (get['duration'] !== undefined) {\r\n          duration = get['duration']\r\n\r\n        }\r\n\r\n        await this.setState({\r\n          cantidad,\r\n          recurso,\r\n          temporalidad: 'm',\r\n          periodo: '5',\r\n          duration,\r\n          fromUrl: false\r\n        })\r\n\r\n        this.updateAmount(cantidad)\r\n\r\n        this.preCompra()\r\n      }\r\n\r\n      if (get['amb'] !== undefined) {\r\n        await this.setState({ referral: get['amb'] })\r\n      }\r\n\r\n    }\r\n\r\n    this.calcularRecurso()\r\n\r\n  }\r\n\r\n  async recursos() {\r\n\r\n    let { energyOn, bandOn } = this.state\r\n\r\n    let consulta = false\r\n    const URL = process.env.REACT_APP_BOT_URL\r\n\r\n    consulta = await fetch(URL)\r\n      .then((r) => r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false\r\n      })\r\n\r\n    energyOn = consulta.available\r\n    bandOn = consulta.available\r\n\r\n    consulta = await fetch(URL + \"available\")\r\n      .then((r) => r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false\r\n      })\r\n\r\n    if (!consulta) return false;\r\n\r\n    let available_energy = [\r\n      {\r\n        duration: \"5min\",\r\n        available: consulta.av_energy[0].available\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        available: consulta.av_energy[0].available\r\n      },\r\n      {\r\n        duration: \"1d\",\r\n        available: consulta.av_energy[1].available\r\n      },\r\n      {\r\n        duration: \"3d\",\r\n        available: consulta.av_energy[3].available\r\n      },\r\n      {\r\n        duration: \"7d\",\r\n        available: consulta.av_energy[4].available\r\n      },\r\n      {\r\n        duration: \"14d\",\r\n        available: consulta.av_energy[4].available\r\n      },\r\n\r\n    ]\r\n\r\n    let available_bandwidth = [\r\n      {\r\n        duration: \"5min\",\r\n        available: consulta.av_band[0].available\r\n      },\r\n      {\r\n        duration: \"1h\",\r\n        available: consulta.av_band[0].available\r\n      },\r\n      {\r\n        duration: \"1d\",\r\n        available: consulta.av_band[1].available\r\n      },\r\n      {\r\n        duration: \"3d\",\r\n        available: consulta.av_band[3].available\r\n      },\r\n      {\r\n        duration: \"7d\",\r\n        available: consulta.av_band[4].available\r\n      },\r\n      {\r\n        duration: \"14d\",\r\n        available: consulta.av_band[4].available\r\n      },\r\n    ]\r\n\r\n    let duration = document.getElementById(\"periodo\").value\r\n    this.setState({ duration })\r\n\r\n    let av_energy = available_energy.find(obj => obj.duration === duration)\r\n    av_energy = new BigNumber(av_energy.available)\r\n    this.setState({ av_energy })\r\n\r\n    let av_band = available_bandwidth.find(obj => obj.duration === duration)\r\n    av_band = new BigNumber(av_band.available)\r\n    this.setState({ av_band })\r\n\r\n    this.setState({\r\n      available_bandwidth,\r\n      available_energy,\r\n      total_bandwidth_pool: consulta.total_bandwidth_pool,\r\n      total_energy_pool: consulta.total_energy_pool,\r\n      energyOn,\r\n      bandOn\r\n    });\r\n\r\n    return energyOn\r\n  }\r\n\r\n  async calcularPrecios() {\r\n\r\n    await this.recursos();\r\n\r\n    let { precios, duration, recurso } = this.state\r\n\r\n    let url = process.env.REACT_APP_BOT_URL + \"prices/all\"\r\n\r\n    let consulta = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(async (r) => await r.json())\r\n      .catch((e) => {\r\n        console.log(e)\r\n        return false\r\n      })\r\n\r\n\r\n    if (consulta) {\r\n      precios[\"energy\"] = [\r\n        {\r\n          duration: \"5min\",\r\n          UE: new BigNumber(consulta.energy_minutes_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1h\",\r\n          UE: new BigNumber(consulta.energy_hour_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1\",\r\n          UE: new BigNumber(consulta.energy_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"2\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"3\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"4\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"7\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(7 / 3).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"14\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(14 / 3).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"30\",\r\n          UE: new BigNumber(consulta.energy_over_one_day_100K).shiftedBy(1).times(30 / 3).dp(6).toNumber()\r\n        },\r\n      ]\r\n\r\n      precios[\"bandwidth\"] = [\r\n        {\r\n          duration: \"5min\",\r\n          UE: new BigNumber(consulta.band_minutes_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1h\",\r\n          UE: new BigNumber(consulta.band_hour_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"1\",\r\n          UE: new BigNumber(consulta.band_one_day_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"2\",\r\n          UE: new BigNumber(consulta.band_one_day_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"3\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"4\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"7\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(7 / 3).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"14\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(14 / 3).dp(6).toNumber()\r\n        },\r\n        {\r\n          duration: \"30\",\r\n          UE: new BigNumber(consulta.band_over_one_day_1000).times(1000).times(30 / 3).dp(6).toNumber()\r\n        },\r\n      ]\r\n\r\n      this.setState({ precios })\r\n    }\r\n\r\n    let priceList = precios[recurso]\r\n\r\n    if (priceList.length > 0) {\r\n\r\n      const foundPrice = priceList.find(price => price.duration === duration);\r\n      if (foundPrice !== undefined) {\r\n        this.setState({ unitEnergyPrice: foundPrice.UE })\r\n      }\r\n    }\r\n\r\n    return precios\r\n  }\r\n\r\n  async calcularRecurso() {\r\n\r\n    let { t } = this.props\r\n\r\n    this.calcularPrecios();\r\n\r\n    let { recurso, montoMin, precio, duration } = this.state\r\n\r\n    let cantidad = this.updateAmount()\r\n\r\n    let ok = true;\r\n\r\n    if (duration.indexOf(\"d\") >= 0) {\r\n\r\n      if (parseInt(duration[0]) < 1 || parseInt(duration[0]) > 14) {\r\n        this.setState({\r\n          titulo: t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: t(\"ebot.alert.eRange\", { returnObjects: true })[1]\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      duration = duration.split(\"d\")[0]\r\n\r\n    }\r\n\r\n    if (duration.indexOf(\"h\") >= 0) {\r\n\r\n      if (parseInt(duration[0]) !== 1) {\r\n        this.setState({\r\n          titulo: t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: t(\"ebot.alert.eRange2\"),\r\n          periodo: \"1\"\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      duration = \"1h\"\r\n\r\n    }\r\n\r\n    if (duration.indexOf(\"m\") >= 0) {\r\n\r\n      if (parseInt(duration[0]) !== 5) {\r\n        this.setState({\r\n          titulo: t(\"ebot.alert.eRange\", { returnObjects: true })[0],\r\n          body: t(\"ebot.alert.eRange2\"),\r\n          periodo: \"5\"\r\n        })\r\n\r\n        ok = false;\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n\r\n      duration = \"5min\"\r\n\r\n    }\r\n\r\n    let priceList = this.state.precios[recurso]\r\n\r\n    if (ok && priceList.length > 0) {\r\n\r\n      const foundPrice = priceList.find(price => price.duration === duration);\r\n\r\n      precio = new BigNumber(foundPrice.UE).times(cantidad)\r\n      // cobro adicional para aumentar la reserva de trx === 10_000 SUN\r\n      precio = precio.plus(0)\r\n\r\n      precio = precio.shiftedBy(-6).dp(6)\r\n\r\n      this.setState({ unitEnergyPrice: foundPrice.UE })\r\n\r\n      if (parseInt(cantidad) <= montoMin) {\r\n        this.setState({ minPrice: precio })\r\n      }\r\n\r\n    } else {\r\n      precio = \"**.**\"\r\n\r\n    }\r\n\r\n    this.setState({\r\n      precio: precio\r\n    })\r\n\r\n    return precio\r\n  }\r\n\r\n  async preCompra() {\r\n    const { t } = this.props\r\n\r\n    await this.recursos();\r\n\r\n    let { wallet_orden, cantidad, periodo, temporalidad, recurso, energyOn, bandOn, av_energy, av_band, total_energy_pool, total_bandwidth_pool } = this.state\r\n    let { accountAddress, tronWeb, i18n } = this.props\r\n\r\n    if (!energyOn || !bandOn) {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.eResource\", { returnObjects: true })[0],\r\n        body: (<span>{i18n.t(\"ebot.alert.eResource\", { returnObjects: true })[1]}\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (av_energy.toNumber() < total_energy_pool * 0.005) {\r\n      energyOn = false;\r\n\r\n      if (recurso === \"energy\") {\r\n        this.setState({\r\n          titulo: <>{t(\"ebot.alert.soldOut\", { returnObjects: true })[0]}</>,\r\n          body: <> <img src=\"/images/alerts/recarge_energy.jpeg\" alt=\"Energy sold out\" style={{ borderRadius: \"15px\", width: \"100%\" }}></img> <br></br><br></br>{t(\"ebot.alert.soldOut\", { returnObjects: true })[1]}</>,\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n    }\r\n\r\n\r\n    if (av_band.toNumber() < total_bandwidth_pool * 0.005) {\r\n      bandOn = false;\r\n      if (recurso !== \"energy\") {\r\n        this.setState({\r\n          titulo: t(\"ebot.alert.soldOut\", { returnObjects: true })[0],\r\n          body: t(\"ebot.alert.soldOut\", { returnObjects: true })[1],\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      }\r\n    }\r\n\r\n    let pagas = (await this.calcularRecurso()).toNumber()\r\n\r\n    if (isNaN(pagas)) {\r\n      this.setState({\r\n        titulo: \"Error\",\r\n        body: \"error to calculating price of resource\"\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n    if (wallet_orden === \"\" || !tronWeb.isAddress(wallet_orden)) {\r\n      this.setState({\r\n        wallet_orden: accountAddress\r\n      })\r\n    }\r\n\r\n    if (parseFloat(pagas) > new BigNumber(await tronWeb.trx.getBalance(accountAddress)).shiftedBy(-6).toNumber()) {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.noFounds\", { returnObjects: true })[0],\r\n        body: (<span>{i18n.t(\"ebot.alert.noFounds\", { returnObjects: true })[1]}\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    if (wallet_orden === \"\" || !tronWeb.isAddress(wallet_orden)) {\r\n      this.setState({\r\n        wallet_orden: accountAddress\r\n      })\r\n    }\r\n\r\n    if (wallet_orden === \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\") {\r\n      this.setState({\r\n        titulo: i18n.t(\"ebot.alert.eTronlink\", { returnObjects: true })[0],\r\n        body: (<span>\r\n          {i18n.t(\"ebot.alert.eTronlink\", { returnObjects: true })[1]}\r\n          <br ></br>\r\n          <button className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Ok</button>\r\n        </span>)\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n      return;\r\n    }\r\n\r\n\r\n    if (recurso === \"energy\") {\r\n      if (cantidad > av_energy.toNumber()) {\r\n        this.setState({\r\n          titulo: \"Error\",\r\n          body: \"insufficient resources to cover this order try a lower value or try again later.\"\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n        return;\r\n      }\r\n    } else {\r\n      if (cantidad > av_band.toNumber()) {\r\n        this.setState({\r\n          titulo: \"Error\",\r\n          body: \"insufficient resources to cover this order try a lower value or try again later.\"\r\n        })\r\n\r\n        window.$(\"#mensaje-ebot\").modal(\"show\");\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    this.setState({\r\n      titulo: <>Confirm order information</>,\r\n      body: (<span>\r\n        <b>Buy: </b> {cantidad + \" \" + recurso + \" \" + periodo + temporalidad}<br></br>\r\n        <b>For: </b> {pagas} TRX<br></br>\r\n        <b>To: </b> {this.state.wallet_orden}<br></br>\r\n        <br ></br><br ></br>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-ebot\").modal(\"hide\") }}>Cancel <i className=\"bi bi-x-circle\"></i></button>\r\n        {\" \"}\r\n        <button type=\"button\" className=\"btn btn-success\" onClick={() => { this.compra(cantidad, periodo, temporalidad, recurso, wallet_orden, pagas) }}>Confirm <i className=\"bi bi-bag-check\"></i></button>\r\n      </span>)\r\n    })\r\n\r\n    window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n\r\n  }\r\n\r\n  async compra() {\r\n\r\n    let { cantidad, periodo, temporalidad, recurso, wallet_orden, precio, referral } = this.state\r\n\r\n    const imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" ></img>\r\n\r\n    this.setState({\r\n      titulo: <>Confirm transaction {imgLoading}</>,\r\n      body: <>Please confirm the transaction from your wallet </>\r\n    })\r\n\r\n    window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    const unSignedTransaction = await this.props.tronWeb.transactionBuilder.sendTrx(process.env.REACT_APP_WALLET_API, this.props.tronWeb.toSun(precio), this.props.accountAddress);\r\n    // using adapter to sign the transaction\r\n    const signedTransaction = await window.tronWeb.trx.sign(unSignedTransaction)\r\n      .catch((e) => {\r\n        this.setState({\r\n          ModalTitulo: \"Transaction failed\",\r\n          ModalBody: <>{e.toString()}\r\n            <br ></br><br ></br>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => { window.$(\"#mensaje-brst\").modal(\"hide\") }}>Close</button>\r\n          </>\r\n        })\r\n\r\n        window.$(\"#mensaje-brst\").modal(\"show\");\r\n        return false;\r\n      })\r\n\r\n    if (!signedTransaction) { return false; }\r\n\r\n    this.setState({\r\n      titulo: <>Your order is being processed {imgLoading}</>,\r\n      body: \"Wait while one of our robots attends to your recharge, we try to be as fast as possible.\"\r\n    })\r\n\r\n    let consulta2 = await utils.rentResource(wallet_orden, recurso, cantidad, periodo, temporalidad, precio, signedTransaction, referral);\r\n\r\n    if (consulta2.result) {\r\n\r\n      this.setState({\r\n        titulo: \"Completed successfully\",\r\n        body: <>Energy rental completed successfully.<br ></br><br ></br> <button type=\"button\" data-bs-dismiss=\"modal\" className=\"btn btn-success\">Thank you!</button></>\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    } else {\r\n\r\n      console.log(consulta2)\r\n\r\n      this.setState({\r\n        titulo: \"Contact support\",\r\n        body: \"Support hash: \" + consulta2.hash + \" | \" + consulta2.msg\r\n      })\r\n\r\n      window.$(\"#mensaje-ebot\").modal(\"show\");\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const {t} = this.props\r\n    let { unitEnergyPrice, amounts, recurso, av_energy, av_band } = this.state\r\n\r\n    const amountButtons = amounts.map(amounts => <button key={\"Amb-\" + amounts.text} id=\"ra1\" type=\"button\" className=\"btn btn-primary\"\r\n      style={{ margin: \"auto\" }} onClick={() => { this.updateAmount(amounts.amount); this.estado() }}>{amounts.text}</button>)\r\n\r\n    let texto = <>Bandwidth Pool: {av_band.toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</>\r\n    let porcentaje = av_band.toNumber() * 100 / this.state.total_bandwidth_pool\r\n\r\n    if (recurso === \"energy\") {\r\n      texto = <>Energy Pool: {av_energy.toString(10).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</>\r\n      porcentaje = av_energy.toNumber() * 100 / this.state.total_energy_pool\r\n    }\r\n\r\n    if (isNaN(porcentaje)) porcentaje = 0\r\n\r\n\r\n    let medidor = (<>\r\n      <p className=\"font-14\">{texto} ({new BigNumber(porcentaje).dp(2).toString(10)}%)</p>\r\n      <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n        <div className=\"progress-bar\" role=\"progressbar\" style={{ \"width\": porcentaje + \"%\" }}\r\n          aria-valuenow={porcentaje} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n        </div>\r\n      </div></>)\r\n\r\n    function capitalizarPrimeraLetra(str) {\r\n      return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n\r\n\r\n    return (<>\r\n\r\n      <div className=\"row \">\r\n\r\n        <div className=\"col-md-12 text-center\">\r\n          <h1>{t(\"ebot.subTittle\")}</h1>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 col-sm-12\">\r\n          <div className=\"contact-box\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"mb-4\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                      <h4>Rental {this.state.recurso}</h4>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"d-flex justify-content-sm-end\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                          <button id=\"btnGroupDrop1\" type=\"button\"\r\n                            className=\"btn btn-primary dropdown-toggle\"\r\n                            data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Resource\r\n                          </button>\r\n                          <ul className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n                            <li onClick={async () => {\r\n                              await this.setState({\r\n                                cantidad: 32000,\r\n                                recurso: \"energy\",\r\n                                amounts: amountsE\r\n                              });\r\n\r\n                              this.updateAmount(32000)\r\n\r\n                              await this.estado();\r\n\r\n                            }}>\r\n                              <button className=\"dropdown-item\" >Energy</button>\r\n                            </li>\r\n\r\n                            <li onClick={async () => {\r\n                              await this.setState({\r\n                                cantidad: 1000,\r\n                                recurso: \"bandwidth\",\r\n                                amounts: amountB\r\n                              });\r\n                              this.updateAmount(1000);\r\n                              await this.estado();\r\n\r\n                            }}>\r\n                              <button className=\"dropdown-item\" >Bandwidth</button>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <form className=\"dzForm\" method=\"\" action=\"\">\r\n                      <div className=\"dzFormMsg\"></div>\r\n                      <input type=\"hidden\" className=\"form-control\" name=\"dzToDo\" value=\"Contact\" ></input>\r\n                      {medidor}\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 d-flex justify-content-center align-items-center\">\r\n                        <p style={{ \"marginTop\": \"auto\", \"marginRight\": \"10px\" }} className=\"font-14\">Amount</p>\r\n                        <input style={{ \"textAlign\": \"end\", border: \"lightgray  solid\" }} id=\"amount\" name=\"dzLastName\" type=\"text\" onInput={() => this.calcularRecurso()} className=\"form-control mb-1\" placeholder={this.state.montoMin} ></input>\r\n\r\n                      </div>\r\n                      <div className=\"col-xl-12 mt-2 mb-2\">\r\n                        <div className=\"d-flex justify-content-xl-center\">\r\n                          {amountButtons}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 d-flex justify-content-center align-items-center\">\r\n                        <p style={{ \"marginTop\": \"auto\", \"marginRight\": \"10px\" }} className=\"font-14\">Duration</p>\r\n                        <input style={{ \"textAlign\": \"end\", border: \"lightgray  solid\", cursor: \"not-allowed\" }} id=\"periodo\" required type=\"text\" className=\"form-control mb-1\" onChange={this.handleChangePeriodo} placeholder={\"Default: 5m (five minutes)\"} defaultValue=\"5min\" readOnly></input>\r\n\r\n                      </div>\r\n                      <div className=\"col-12 mt-2 mb-2 \">\r\n                        <div className=\"d-flex justify-content-xl-center\">\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"5min\" } }) }}>5min</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"1h\" } }) }}>1h</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"1d\" } }) }}>1d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"3d\" } }) }}>3d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"7d\" } }) }}>7d</button>\r\n                          <button type=\"button\" className=\"btn btn-primary\"\r\n                            style={{ margin: \"auto\" }} onClick={() => { this.handleChangePeriodo({ target: { value: \"14d\" } }) }}>14d</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 mt-2 mb-2 justify-content-center align-items-center\">\r\n                        {capitalizarPrimeraLetra(this.state.recurso)} Unit: {unitEnergyPrice.toString(10)} SUN<br></br>\r\n\r\n                        <button name=\"submit\" type=\"button\" value=\"Submit\"\r\n                          className=\"btn btn-secondary\"\r\n                          style={{ width: \"100%\", height: \"40px\", marginTop: \"5px\" }} onClick={() => this.preCompra()}> Complete Purchase - Total: {this.state.precio.toString(10)} TRX\r\n                        </button>\r\n\r\n                      </div>\r\n\r\n                      <div className=\"col-xl-12 mb-3 mb-md-4\">\r\n                        <p className=\"font-14\">Send resources for another wallet</p>\r\n\r\n                        <input name=\"dzFirstName\" required type=\"text\"\r\n                          className=\"form-control\" placeholder={this.props.accountAddress} onChange={this.handleChangeWallet} ></input>\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-6 pt-4 mt-5 col-sm-12 m-b30\">\r\n          <div className=\"info-box text-center\">\r\n            <img src=\"images/ebot.png\" width=\"170px\" className=\"figure-img img-fluid rounded\" alt=\"resource rental energy\" ></img>\r\n\r\n            <div className=\"info\">\r\n              <p className=\"font-20\">In Brutus Energy Bot, we've developed a app for a faster and secure resource rental experience on the Tron network. <br></br> <br></br> Innovatively simplifying the process, we ensure efficient management at competitive prices. Explore further through our <a href=\"https://t.me/BRUTUS_energy_bot\">Telegram bot</a> or API for added accessibility. <br></br> <br></br>For additional information, reach out to us at <a href=\"mailto:support@brutus.finance\">support@brutus.finance</a></p>\r\n            </div>\r\n\r\n            <div className=\"widget widget_about\">\r\n              <div className=\"widget widget_getintuch\">\r\n              </div>\r\n            </div>\r\n            <div className=\"social-box dz-social-icon style-3\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"card-title\">Smart Contracts </h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p>\r\n                <b>rental operator:</b> <a target=\"_blank\" rel=\"noopener noreferrer\" href={\"https://tronscan.org/#/contract/\" + process.env.REACT_APP_WALLET_API + \"/code\"}>{process.env.REACT_APP_WALLET_API}</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div >\r\n\r\n      <div className=\"modal fade\" id=\"mensaje-ebot\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">{this.state.titulo}</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>{this.state.body}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    </>);\r\n  }\r\n}\r\n\r\nexport default withTranslation()(EnergyRental);","import React, { useState } from 'react';\r\n\r\nexport default function FaqItem({ question, answer }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className=\"border border-gray-300 rounded-xl mb-4 shadow-sm\">\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"w-full text-left px-4 py-3 font-semibold bg-gray-100 hover:bg-gray-200 transition\"\r\n      >\r\n        {question}\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"px-4 py-3 text-gray-700 bg-white border-t border-gray-200\">\r\n          {answer}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import React, { Component } from \"react\";\r\nimport utils from \"../utils\";\r\n\r\nimport { TronWeb } from \"tronweb\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\n\r\nimport CsvDownloader from 'react-csv-downloader';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport FaqItem from \"../components/FaqItems\";\r\n\r\nconst env = process.env\r\n\r\nvar moment = require('moment-timezone');\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst faqs = [\r\n  {\r\n    question: \"When will I receive my next sales order?\",\r\n    answer: (\r\n      <>\r\n        <p>\r\n          The system is designed to be as equitable as possible among all providers, and all providers receive orders based on their available energy ratio. We cannot guarantee an exact time, but you have at your disposal tools to get an estimate.<br></br><br></br>\r\n          For example, the famous “orange coefficient” or “availability ratio” indicates what percentage of your total energy you have available for sale, and compares it to the average ratio of the entire pool of providers. The higher your ratio, the better positioned you are in the ranking to receive the next order. This depends a lot on the “maxdays” you have configured (at what term you want to sell), since, in general, there is usually much more demand at long terms than at short terms.<br></br><br></br>\r\n          You can check the ratios broken down by timeframe in the Telegram bot <strong>@BRUTUS_energy_bot</strong> with the command <code>/infopool</code>.\r\n        </p>\r\n      </>\r\n    )\r\n  },\r\n  {\r\n    question: \"How is my % payout calculated?\",\r\n    answer: (\r\n      <>\r\n        <p>\r\n          The payout is the payment you receive with respect to the total price of each sale order. Payout = price - Brutus commission. The % you receive depends on two factors: whether or not you vote Brutus as SR, and the term at which you sell your resources.<br></br><br></br>\r\n\r\n          If at least 95% of your votes are for Brutus, your % payout will be 80%, regardless of the timeframe at which you sell your resources.<br></br><br></br>\r\n\r\n          Otherwise (less than 95% of your votes are for Brutus), if your “maxdays” is at 1h, you will receive 67%, and if you sell at a higher term, you will receive 77%.<br></br><br></br>\r\n\r\n          A daily check is made at a random time of the votes made by your wallet, and based on that this percentage is determined. Therefore, if you change your maxdays or votes, you may not see a change in your payout until the check is made at a random time of the day.\r\n        </p>\r\n      </>\r\n    )\r\n  },\r\n  /*{\r\n    question: <>What is it and how is my <span role=\"img\" aria-label=\"orange\">🍊</span> coefficient calculated?</>,\r\n    answer: (\r\n      <>\r\n        <p>\r\n          The coefficient reflects your relative position in the ranking we use to distribute buy orders. It ranges from 0 to 1, is updated every few minutes and determines your priority: the higher, the more likely you are to receive an order soon.<br></br><br></br>\r\n\r\n          <b>This value is based on:</b><br></br>\r\n\r\n          <ul>\r\n            <li>· The percentage of your total energy you have available for sale.</li>\r\n            <li>· Your recent activity: how much energy you have sold in the last 24 hours through Brutus.</li>\r\n            <li>· If you are selling above your staked energy, the system corrects the coefficient to avoid disproportionate advantages (something common due to fast regeneration or underuse by buyers).</li>\r\n          </ul>\r\n          <br></br>\r\n\r\n\r\n          <b>In the panel you will see something like: <span role=\"img\" aria-label=\"orange\">🍊</span> 0.80 / 0.65 </b><br></br>\r\n          <ul>\r\n            <li>· First value: your current coefficient.</li>\r\n\r\n            <li>· Second value: the overall average of the providers pool.</li>\r\n          </ul>\r\n          Note that this average includes all active providers, without distinguishing time horizons. However, your actual position is defined according to the other providers that are in the same timeframe as you (1h, 3 days, etc.), and the demand is usually higher at longer timeframes.<br></br><br></br>\r\n\r\n          To see this information broken down by timeframe, you can send /infopool to the Telegram bot @BRUTUS_energy_bot.\r\n        </p>\r\n      </>\r\n    )\r\n  },*/\r\n];\r\n\r\nclass ProviderPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      provider: false,\r\n      firma: false,\r\n      rent: false,\r\n      elegible: false,\r\n      sellband: false,\r\n      bandover: \"0\",\r\n      sellener: false,\r\n      enerover: \"0\",\r\n      burn: false,\r\n      noti: false,\r\n      autofreeze: \"off\",\r\n      paymenthour: \"Loading...\",\r\n      maxdays: \"Loading...\",\r\n      ongoins: [],\r\n      nexpayment: \"Loading...\",\r\n      payoutRatio: 0,\r\n      ratioEnergy: new BigNumber(0),\r\n      ratioEnergyPool: new BigNumber(0),\r\n      paymentPoints: 0,\r\n      voteSR: \"\",\r\n      newVoteSR: \"\",\r\n      proEnergyTotal: 0,\r\n      proEnergy: 0,\r\n      proBand: 0,\r\n      proBandTotal: 0,\r\n      noregist: [],\r\n      historic: [],\r\n      dataHistoric: [],\r\n      alturaGrafico: \"0px\",\r\n      tiempo: \"\",\r\n      payment: \"0\",\r\n      payhere: \">>>>>>>>>>>>>>>Loading<<<<<<<<<<<<<<<\",\r\n      payHere: \"*************************************\",\r\n      completed: [],\r\n      totalPayed30: \"Loading...\",\r\n      allPayed: \"Loading...\",\r\n      coin: \"Loading...\",\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.setConfig = this.setConfig.bind(this);\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    document.title = \"Provider Panel | Brutus.Finance\"\r\n    document.getElementById(\"tittle\").innerText = this.props.i18n.t(\"Provider Panel\")\r\n\r\n    function esDispositivoMovil() {\r\n      return /Mobi|Android|iPhone|iPad|iPod/i.test(navigator.userAgent);\r\n    }\r\n\r\n    if (esDispositivoMovil()) {\r\n      console.log(\"movil: true\")\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 3 * 1000)\r\n\r\n    setInterval(() => {\r\n      this.estado()\r\n    }, 20 * 1000)\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    const { accountAddress } = this.props\r\n\r\n    this.setState({\r\n      tiempo: moment.tz.guess(true)\r\n    })\r\n\r\n    let url = utils.apiProviders;\r\n\r\n    let provider = { result: false };\r\n\r\n    try {\r\n      provider = await fetch(url + \"provider?wallet=\" + accountAddress)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.setState({\r\n      provider: provider.result\r\n    })\r\n\r\n    let auth = false\r\n\r\n    if (provider.result && this.props.tronlink.adapter.connected) {\r\n\r\n      let firma = localStorage.getItem('firma-tron')\r\n      let fecha = new Date(Date.now())\r\n      let messge = \"https://brutus.finance - \" + fecha.getFullYear()\r\n\r\n      if ((firma === null || firma === undefined) || await window.tronWeb.trx.verifyMessageV2(messge, firma) !== this.props.tronlink.adapter.address) {\r\n        firma = await this.props.tronlink.adapter.signMessage(messge);\r\n        //cookies.set('firma-tron', firma, { maxAge: 86400 });\r\n\r\n        localStorage.setItem('firma-tron', firma);\r\n      } else {\r\n        firma = localStorage.getItem('firma-tron')\r\n      }\r\n\r\n      try {\r\n        if (await window.tronWeb.trx.verifyMessageV2(messge, firma) === this.props.tronlink.adapter.address) {\r\n          auth = true\r\n        } else {\r\n          auth = false\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n        auth = true\r\n      }\r\n\r\n      this.setState({ firma: auth })\r\n\r\n      if (firma !== undefined && auth) {\r\n\r\n        let info = {}\r\n\r\n        try {\r\n\r\n          info = await fetch(url + \"status?wallet=\" + accountAddress)\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n        //console.log(info)\r\n\r\n        let naranja = new BigNumber((info.ratio_e - info.ratio_e_pool) * 100).dp(3).toNumber()\r\n\r\n        if (naranja >= 0) {\r\n          naranja = \"+\" + naranja\r\n        }\r\n\r\n        info.naranja = naranja\r\n\r\n        if (info.freez) {\r\n          info.freez = (info.freez).toLowerCase()\r\n\r\n        }\r\n\r\n        if (info.freez === \"no\") {\r\n          info.freez = \"Off\"\r\n\r\n        }\r\n\r\n\r\n        let cuenta = await this.props.tronWeb.trx.getAccountResources(accountAddress);\r\n\r\n        let providerEnergy = 0\r\n        let providerEnergyTotal = 0\r\n\r\n        let providerBand = 0\r\n        let providerBandTotal = 0\r\n\r\n\r\n        if (cuenta.EnergyLimit) {\r\n          providerEnergy = cuenta.EnergyLimit\r\n          providerEnergyTotal = cuenta.EnergyLimit\r\n        }\r\n\r\n        if (cuenta.EnergyUsed) {\r\n          providerEnergy -= cuenta.EnergyUsed\r\n        }\r\n\r\n        if (cuenta.freeNetLimit) {\r\n          providerBandTotal = cuenta.freeNetLimit\r\n        }\r\n\r\n        if (cuenta.NetLimit) {\r\n          providerBandTotal += cuenta.NetLimit\r\n        }\r\n\r\n        providerBand = providerBandTotal\r\n\r\n        if (cuenta.freeNetUsed) {\r\n          providerBand -= cuenta.freeNetUsed\r\n\r\n        }\r\n\r\n        if (cuenta.NetUsed) {\r\n          providerBand -= cuenta.NetUsed\r\n        }\r\n\r\n        if (info.allow_notifications === 1) {\r\n          info.allow_notifications = true\r\n        } else {\r\n          info.allow_notifications = false\r\n\r\n        }\r\n\r\n        let sellener = false\r\n\r\n        if (info.energyover > 0) {\r\n          sellener = true\r\n        }\r\n\r\n        info.coin = info.currency\r\n\r\n        //console.log(info)\r\n\r\n        this.setState({\r\n          ...info,\r\n          rent: info.activo,\r\n          sellener: sellener,\r\n          enerover: info.energyover,\r\n          noti: info.allow_notifications,\r\n          autofreeze: info.freez,\r\n          paymentPoints: info.payout_ratio * 100,\r\n          payoutRatio: info.payout_ratio,\r\n          ratioEnergy: new BigNumber(info.ratio_e * 100),\r\n          ratioEnergyPool: new BigNumber(info.ratio_e_pool * 100),\r\n          cNaranja: naranja,\r\n          voteSR: info.srVote,\r\n          proEnergy: providerEnergy,\r\n          proEnergyTotal: providerEnergyTotal,\r\n\r\n          proBand: providerBand,\r\n          proBandTotal: providerBandTotal,\r\n\r\n        })\r\n\r\n        let allPayed = await fetch(url + \"acum_payments\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.data;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return 0\r\n          })\r\n\r\n        allPayed = (new BigNumber(allPayed).dp(3).toNumber()).toLocaleString('en-US')\r\n        this.setState({ allPayed: allPayed })\r\n\r\n\r\n        let dataHistoric = await fetch(url + \"historic_payments\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.data;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n        dataHistoric = dataHistoric.map((item, index) => {\r\n          item.amount = new BigNumber(item.amount)\r\n          if (item.amount_stable) {\r\n            if (item.coin.toLowerCase() !== \"trx\") {\r\n              item.amount = new BigNumber(item.amount_stable)\r\n              if (item.amount.toNumber() < 5_000_000 && item.amount.toNumber() > 0) {\r\n                item.amount = item.amount.shiftedBy(6)\r\n              }\r\n            }\r\n          }\r\n\r\n          return { index, date: moment.utc(item.date * 1000).tz(this.state.tiempo).format(\"lll\"), amount: item.amount.shiftedBy(-6).dp(6).toNumber(), coin: item.coin }\r\n        })\r\n\r\n        let totalPayed30 = dataHistoric.reduce((totales, { amount, coin }) => {\r\n\r\n          let index = totales.findIndex(item => item.coin === coin)\r\n          if (index === -1) {\r\n            totales.push({ coin, amount: new BigNumber(amount) })\r\n          } else {\r\n            totales[index].amount = totales[index].amount.plus(amount);\r\n\r\n          }\r\n\r\n          return totales;\r\n        }, []);\r\n\r\n        console.log(totalPayed30)\r\n\r\n        totalPayed30 = totalPayed30.map(item => {\r\n          const cantidad = item.amount.dp(6).toNumber().toLocaleString(\"en-US\");\r\n          return `${cantidad} ${item.coin}`;\r\n        })\r\n        console.log(totalPayed30)\r\n\r\n\r\n        this.setState({\r\n          dataHistoric,\r\n          totalPayed30: totalPayed30.join(\" + \")\r\n        })\r\n\r\n        let ongoins = await fetch(url + \"ongoingdeals\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.ongoing_deals;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n\r\n        let listWallets = []\r\n\r\n        ongoins = ongoins.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          item.lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            item.lock = \"unlock\"\r\n          } else {\r\n            item.lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          item.confirm = moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.unfreeze = moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.time = item.confirm + \" -> \" + item.unfreeze\r\n\r\n          return { index, ...item }\r\n\r\n        });\r\n\r\n\r\n        let completed = await fetch(url + \"completed_deals\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': process.env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ wallet: accountAddress })\r\n        })\r\n          .then((r) => {\r\n            return r.json();\r\n          })\r\n          .then((r) => {\r\n            return r.completed_deals;\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n            return []\r\n          })\r\n\r\n\r\n        completed = completed.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          item.lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            item.lock = \"unlock\"\r\n          } else {\r\n            item.lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          item.confirm = moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.unfreeze = moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")\r\n          item.time = item.confirm + \" -> \" + item.unfreeze\r\n          return { index, ...item }\r\n\r\n        });\r\n\r\n\r\n        const delegationInfo = await this.props.tronWeb.trx.getDelegatedResourceAccountIndexV2(accountAddress)\r\n\r\n        let noregist = []\r\n\r\n        if (delegationInfo.toAccounts) {\r\n\r\n          for (let index = 0; index < delegationInfo.toAccounts.length; index++) {\r\n            delegationInfo.toAccounts[index] = this.props.tronWeb.address.fromHex(delegationInfo.toAccounts[index])\r\n\r\n            if (listWallets.indexOf(delegationInfo.toAccounts[index]) === -1) {\r\n              let info = await this.props.tronWeb.trx.getDelegatedResourceV2(accountAddress, delegationInfo.toAccounts[index])\r\n\r\n              //console.log(info.delegatedResource)\r\n\r\n              for (let index2 = 0; index2 < info.delegatedResource.length; index2++) {\r\n\r\n                let order = {\r\n                  wallet: delegationInfo.toAccounts[index],\r\n                  resource: \"ENERGY\",\r\n                  trx: 0,\r\n                  sun: \"0\",\r\n                  expire: \"--/--/-- 00:00 --\",\r\n                  ownerAddress: accountAddress\r\n                }\r\n\r\n                if (info.delegatedResource[index2].frozen_balance_for_energy) {\r\n\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_energy / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_energy\r\n                  if (info.delegatedResource[index2].expire_time_for_energy) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_energy)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n                  }\r\n                } else {\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_bandwidth / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_bandwidth\r\n                  if (info.delegatedResource[index2].expire_time_for_bandwidth) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_bandwidth)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n\r\n                  }\r\n\r\n\r\n                  order.resource = \"BANDWIDTH\"\r\n                }\r\n\r\n\r\n                noregist.push(order)\r\n\r\n\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        this.setState({\r\n          ongoins,\r\n          completed,\r\n          noregist,\r\n\r\n        })\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async handleChange(event) {\r\n\r\n    let elemento = event.target\r\n\r\n    //console.log(elemento.id)\r\n\r\n    switch (elemento.id) {\r\n      case \"rent\":\r\n\r\n        if (elemento.value !== this.state.rent) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = 1\r\n          if (this.state.rent) {\r\n            activate = 0\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, active: activate }\r\n            fetch(utils.apiProviders + \"set/active\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            rent: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"band\":\r\n\r\n        if (elemento.value !== this.state.sellband) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let over = 0\r\n          let activate = \"0\"\r\n          if (!this.state.sellband) {\r\n            activate = \"1\"\r\n            over = parseInt(prompt(\"sell band over, leave \", this.state.bandover))\r\n\r\n            console.log(over)\r\n            if (!isNaN(over)) {\r\n              let body = { wallet: this.props.accountAddress, sellbandover: over }\r\n\r\n              fetch(utils.apiProviders + \"set/sellbandover\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  'token-api': process.env.REACT_APP_TOKEN,\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n              })\r\n            }\r\n\r\n\r\n          }\r\n          // activar renta\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, sellband: activate }\r\n            fetch(utils.apiProviders + \"set/sellband\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"ener\":\r\n\r\n        if (elemento.value !== this.state.sellener) {\r\n\r\n          let over = 0\r\n          if (!this.state.sellener) {\r\n            over = parseInt(prompt(\"sell energy over, leave \", 32000))\r\n\r\n          }\r\n\r\n          //console.log(over)\r\n\r\n          if (!isNaN(over)) {\r\n            let body = { wallet: this.props.accountAddress, sellenergyover: over }\r\n\r\n            fetch(utils.apiProviders + \"set/sellenergyover\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n          }\r\n\r\n\r\n\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"burn\":\r\n\r\n        if (elemento.value !== this.state.burn) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.burn) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, burn: activate }\r\n            fetch(utils.apiProviders + \"set/burn\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          //console.log(elemento.value)\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n\r\n          this.setState({\r\n            burn: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"voteSR\":\r\n\r\n        this.setState({\r\n          newVoteSR: elemento.value\r\n        })\r\n\r\n        break;\r\n\r\n      case \"noti\":\r\n\r\n        if (elemento.value !== this.state.noti) {\r\n          //alert(\"diferentes: \" + this.state.noti) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.noti) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, allow_notifications: activate }\r\n            fetch(utils.apiProviders + \"set/allow_notifications\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            noti: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async grafico(external_data) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    const root = am5.Root.new(\"chartdiv\");\r\n    root._logo.dispose();\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    // Define data\r\n    let data = [{\r\n      date: new Date(1712953610 * 1000),\r\n      amount: 1000,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712780810 * 1000),\r\n      amount: 1300,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 1200,\r\n      coin: \"trx\"\r\n    },\r\n    {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 250,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712521610 * 1000),\r\n      amount: 200,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712435210 * 1000),\r\n      amount: 500,\r\n      coin: \"brst\"\r\n    }];\r\n\r\n    data = external_data\r\n\r\n    // Create Y-axis\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        categoryField: \"date\"\r\n      })\r\n    );\r\n    xAxis.data.setAll(data);\r\n\r\n    // Create series\r\n\r\n    let series1 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"TRX\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"amount\",\r\n        categoryXField: \"date\",\r\n        fill: am5.color(0x7135ff),\r\n        stroke: am5.color(0x7135ff)\r\n      })\r\n    );\r\n    series1.data.setAll(data);\r\n\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  async setConfig(target, info) {\r\n    const { accountAddress } = this.props\r\n    let { ModalTitulo, ModalBody } = this.state\r\n\r\n    let msg = false\r\n\r\n    async function setFreez(data) {\r\n      try {\r\n        let body = { wallet: accountAddress, autofreeze: data }\r\n        await fetch(utils.apiProviders + \"set/autofreeze\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setPaymentHour(hour) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, paymenthour: hour }\r\n        let consulta = await fetch(utils.apiProviders + \"set/paymenthour\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        }).then((r) => r.json())\r\n\r\n        if (!consulta.result && consulta.data) {\r\n\r\n          msg = true\r\n          ModalTitulo = \"Operation not executed\"\r\n          ModalBody = consulta.data\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setMaxDays(days) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, maxdays: days }\r\n        await fetch(utils.apiProviders + \"set/maxdays\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setWalletSr(wallet) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, sr: wallet }\r\n        await fetch(utils.apiProviders + \"set/sr\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        })\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    async function setCoin(coin) {\r\n\r\n      try {\r\n        let body = { wallet: accountAddress, currency: coin.toUpperCase() }\r\n        let consulta = await fetch(utils.apiProviders + \"set/change_currency\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            'token-api': env.REACT_APP_TOKEN,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(body)\r\n        }).then((r) => r.json())\r\n\r\n        console.log(consulta)\r\n\r\n        if (consulta.result) {\r\n          if (consulta.data.msg) {\r\n            msg = true\r\n            ModalTitulo = \"Operation Alert\"\r\n            ModalBody = consulta.data.msg\r\n          }\r\n\r\n        } else {\r\n\r\n          msg = true\r\n          ModalTitulo = \"Operation not executed\"\r\n          ModalBody = consulta.data\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n    }\r\n\r\n    switch (target) {\r\n      case \"setFreez\":\r\n        await setFreez(info)\r\n        break;\r\n\r\n      case \"setPaymentHour\":\r\n        await setPaymentHour(info)\r\n        break;\r\n\r\n      case \"setMaxDays\":\r\n        await setMaxDays(info)\r\n        break;\r\n\r\n      case \"setWalletSr\":\r\n        await setWalletSr(info)\r\n        break;\r\n\r\n      case \"setCoin\":\r\n        await setCoin(info)\r\n        break;\r\n\r\n      default:\r\n        alert(\"no asigned\")\r\n        break;\r\n    }\r\n\r\n    if (msg) {\r\n      this.setState({\r\n        ModalTitulo,\r\n        ModalBody\r\n      })\r\n      window.$(\"#alert\").modal(\"show\");\r\n    }\r\n\r\n\r\n    this.estado();\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    let { provider, firma, autofreeze, coin, dataHistoric } = this.state\r\n\r\n    if (provider) {\r\n\r\n      if (!firma) {\r\n\r\n        return (<>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card exchange\">\r\n                      <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n                        <h2 className=\"heading\">Status: you are a provider</h2>\r\n\r\n                        <p>\r\n                          <button className=\"btn btn-warning\" onClick={() => this.estado()}>Login</button>\r\n                        </p>\r\n\r\n                        <p>There seems to be problems when performing signature verification please contact support.</p>\r\n\r\n                        <p>Join the telegram providers <a href=\"https://t.me/+V-HHCgAevxA5NGQ0\" target=\"_blank\" rel=\"noopener noreferrer\">channel</a> to keep tuned with the latest news! </p>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </>);\r\n\r\n      } else {\r\n\r\n\r\n        let estatus = <button className=\"btn btn-outline-danger btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-sign-stop-fill\"></i> Stopped</button>\r\n\r\n        if (this.state.rent) {\r\n\r\n          estatus = <button className=\"btn btn-outline-info btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-arrow-clockwise\"></i> Recharging</button>\r\n\r\n          if (this.state.elegible) {\r\n            estatus = <button className=\"btn btn-outline-success btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-check-circle-fill\"></i> Active</button>\r\n          }\r\n\r\n        }\r\n\r\n\r\n        let campoFreeze = <></>\r\n\r\n        if (autofreeze !== \"Off\") {\r\n\r\n          campoFreeze = <div className=\"container mt-1\">\r\n            <div className=\"row mt-1\">\r\n              <div className=\"col-12\">Wallet of SR to vote (default: Brutus)</div>\r\n              <div className=\"col-11\">\r\n                <input type=\"text\" className=\"form-control\" id=\"voteSR\" style={{ borderColor: \"#c3c3c3\" }} placeholder={this.state.voteSR} onChange={this.handleChange} disabled={false} ></input>\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <i className=\"bi bi-question-circle-fill\" title=\"You can set by which super representative wallet the automatic votes will be made\" onClick={() => {\r\n\r\n                  this.setState({\r\n                    ModalTitulo: \"Info\",\r\n                    ModalBody: \"You can set by which super representative wallet the automatic votes will be made\"\r\n                  })\r\n\r\n                  window.$(\"#alert\").modal(\"show\");\r\n                }}></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          if (this.state.voteSR !== \"\" && TronWeb.isAddress(this.state.newVoteSR) && this.state.voteSR !== this.state.newVoteSR) {\r\n\r\n            campoFreeze = (<>\r\n              {campoFreeze}\r\n              <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => {\r\n                this.setWalletSr(this.state.newVoteSR)\r\n              }}>Update Wallet to Vote</button>\r\n\r\n            </>)\r\n\r\n          }\r\n\r\n        }\r\n\r\n\r\n        return (<>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-8 col-sm-12\">\r\n                    <div className=\"card exchange\">\r\n                      <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n\r\n\r\n                        <div className=\"container-fluid\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-sm-12 mb-2 text-center\">\r\n                              <img height=\"15px\" src=\"images/energy.png\" alt=\"\" ></img> Energy ({(this.state.proEnergy).toLocaleString('en-US')}/{(this.state.proEnergyTotal).toLocaleString(\"en-us\")})\r\n                              <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                                <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{ \"width\": ((this.state.proEnergy / this.state.proEnergyTotal) * 100) + \"%\" }}\r\n                                  aria-valuenow={(this.state.proEnergy / this.state.proEnergyTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 col-sm-12 mb-2 text-center\">\r\n                              <span role=\"img\">{\"🌐\"}</span> Bandwidth ({(this.state.proBand).toLocaleString(\"en-us\")}/{(this.state.proBandTotal).toLocaleString(\"en-us\")})\r\n                              <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                                <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ \"width\": ((this.state.proBand / this.state.proBandTotal) * 100) + \"%\" }}\r\n                                  aria-valuenow={(this.state.proBand / this.state.proBandTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\">{estatus} </h2>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\"><button type=\"button\" className=\"btn btn-outline-warning btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><img height=\"15px\" src=\"images/naranja.png\" alt=\"\" ></img> {this.state.ratioEnergy.dp(3).toString(10)} { this.state.ratioEnergyPool.toNumber() > 0 && \" / \"+this.state.ratioEnergyPool.dp(3).toString(10)} </button></h2>\r\n                            </div>\r\n                            <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                              <h2 className=\"heading\"><button className=\"btn btn-outline-secondary btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}> <span role=\"img\" aria-label=\"$\">💲</span> Payout %{this.state.paymentPoints} </button></h2>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Pay hour: {this.state.payhour} GMT</button> {\"  \"} <span role=\"img\"><i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Set the time you want to receive your daily payments\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></span>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"130\")}>1:30 GMT</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"930\")}>9:30 GMT</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setPaymentHour\", \"1730\")}>17:30 GMT</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Coin: {coin} </button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Set the currency you want to receive your daily payments\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Set the currency you want to receive your daily payments\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"trx\")}>TRX</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"usdd\")}>USDD</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setCoin\", \"usdt\")}>USDT</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu2\">Max Days: {this.state.maxdays}</button> <i className=\"bi bi-question-circle-fill\" title=\"Establish the max. duration of the orders you want to accept\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Establish the max. duration of the orders you want to accept\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu2\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", '1h')}>1h</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 3)} >3 days</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 7)}>7 days</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setMaxDays\", 14)}>14 days</button>\r\n                              </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className=\"col-lg-6 col-md-12 mb-2\" >\r\n                              <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu\" >Autofreeze: {this.state.autofreeze}</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i>\r\n                              <div className=\"dropdown-menu\" aria-labelledby=\"menu\">\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"no\")}>Off</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"bandwidth\")}>Bandwidth</button>\r\n                                <button className=\"dropdown-item\" onClick={() => this.setConfig(\"setFreez\", \"energy\")}>Energy</button>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                              {campoFreeze}\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \">\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"rent\" style={{ backgroundColor: this.state.rent ? \"#9568FF\" : \"lightgray\" }} checked={this.state.rent} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Rent <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume the bot\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Pause/Resume the bot\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \" style={{ textAlign: \"center\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"burn\" style={{ backgroundColor: this.state.burn ? \"#9568FF\" : \"lightgray\" }} checked={this.state.burn} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Burn <i className=\"bi bi-question-circle-fill\" title=\"Allow TRX burn to accept new orders when you run out of bandwidth\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Allow TRX burn to accept new orders when you run out of bandwidth\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-4  \" style={{ textAlign: \"right\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"noti\" style={{ backgroundColor: this.state.noti ? \"#9568FF\" : \"lightgray\" }} checked={this.state.noti} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Notify <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume notifications from the telegram bot\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Pause/Resume notifications from the telegram bot\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-6  \">\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"band\" style={{ backgroundColor: this.state.sellband ? \"#9568FF\" : \"lightgray\" }} checked={this.state.sellband} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Band over: <br></br>{(this.state.bandover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked bandwidth over the amount you establish\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Sell your staked bandwidth over the amount you establish\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n                            <div className=\"col-6 \" style={{ textAlign: \"right\" }}>\r\n                              <input className=\"form-check-input\" type=\"checkbox\" id=\"ener\" style={{ backgroundColor: this.state.sellener ? \"#9568FF\" : \"lightgray\" }} checked={this.state.sellener} onChange={this.handleChange} ></input>\r\n                              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Energy over: <br></br> {(this.state.enerover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked energy over the amount you establish\" onClick={() => {\r\n\r\n                                this.setState({\r\n                                  ModalTitulo: \"Info\",\r\n                                  ModalBody: \"Sell your staked energy over the amount you establish\"\r\n                                })\r\n\r\n                                window.$(\"#alert\").modal(\"show\");\r\n                              }}></i></label>\r\n                            </div>\r\n\r\n\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-lg-4 col-sm-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header border-0 pb-0\">\r\n                        <h2 className=\"heading mb-0 m-auto\">Next Payment</h2>\r\n                      </div>\r\n                      <div className=\"card-body text-center pt-3\">\r\n                        <div className=\"mt-1\">Hour {this.state.payhour} GMT</div>\r\n                        <hr></hr>\r\n                        <div className=\"count-num mt-1\">{(this.state.payment).toLocaleString(\"en-US\")} TRX</div>\r\n                        <hr></hr>\r\n\r\n                        <div className=\"mt-1\">that will be paid here:<br></br> <u onMouseEnter={() => { this.setState({ payHere: this.state.payhere }) }} onMouseLeave={() => { this.setState({ payHere: \"*************************************\" }) }}>{this.state.payHere}</u></div>\r\n\r\n                        <hr></hr>\r\n\r\n                        <div className=\"mt-1\">\r\n                          Total earned all time:<br></br>\r\n                          <b>{this.state.allPayed} TRX</b> <br></br>\r\n                          <button className=\"btn btn-danger\" onClick={() => { localStorage.removeItem(\"firma-tron\"); this.setState({ firma: false }) }}>LogOut <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-box-arrow-right\" viewBox=\"0 0 16 16\">\r\n                            <path fillRule=\"evenodd\" d=\"M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0z\" />\r\n                            <path fillRule=\"evenodd\" d=\"M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708z\" />\r\n                          </svg></button>\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">last {dataHistoric.length} payments = {this.state.totalPayed30}</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-8 col-sm-12\">\r\n                            <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                              <table className=\"table verticle-middle table-responsive-md \" >\r\n                                <thead>\r\n                                  <tr>\r\n                                    <th scope=\"col\" style={{ textAlign: \"right\" }}>Amount</th>\r\n                                    <th scope=\"col\">Currency</th>\r\n                                    <th scope=\"col\">Date</th>\r\n\r\n                                  </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                  {\r\n                                    dataHistoric.toReversed().map((item, index) => {\r\n\r\n                                      return (\r\n                                        <tr key={index}>\r\n                                          <td align=\"right\">{(item.amount).toLocaleString('en-US')}\r\n                                          </td>\r\n                                          <td>{item.coin}</td>\r\n                                          <td>{item.date}</td>\r\n\r\n                                        </tr>\r\n                                      )\r\n                                    })\r\n                                  }\r\n\r\n                                </tbody>\r\n                              </table>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12\">\r\n                            <div className=\"mb-3\" id=\"chartdiv\" style={{ height: this.state.alturaGrafico, backgroundColor: \"white\" }}></div>\r\n                            <button className=\"btn btn-success\" onClick={() => { if (this.state.alturaGrafico === \"0px\") { this.setState({ alturaGrafico: \"350px\" }); this.grafico(this.state.dataHistoric) } else { this.setState({ alturaGrafico: \"0px\" }); this.root.dispose(); } }}>Graphic (Open / Close)</button>\r\n                          </div>\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"Last_30_payments\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'amount',\r\n                            displayName: 'Amount'\r\n                          }, {\r\n                            id: 'coin',\r\n                            displayName: 'Currency'\r\n                          }, {\r\n                            id: 'date',\r\n                            displayName: 'Date'\r\n                          }]}\r\n                          datas={dataHistoric}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Ongoing deals ({this.state.ongoins.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md \" >\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">Resource / Period</th>\r\n                                <th scope=\"col\">Buyer / Time</th>\r\n                                <th scope=\"col\">Payout</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.ongoins.map((item) => {\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + item.lock + \"-fill\"}></i></td>\r\n                                    <td>{item.customer}<br ></br>\r\n                                      {item.confirm}{\" -> \"}{item.unfreeze}<br ></br>\r\n\r\n                                    </td>\r\n                                    <td>{item.payout} TRX</td>\r\n                                  </tr>\r\n                                )\r\n                              })\r\n\r\n                              }\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"ongoing_deals\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'resource',\r\n                            displayName: 'Resource'\r\n                          }, {\r\n                            id: 'order_type',\r\n                            displayName: 'Period'\r\n                          }, {\r\n                            id: 'customer',\r\n                            displayName: 'Buyer'\r\n                          }, {\r\n                            id: 'time',\r\n                            displayName: 'Time'\r\n                          }, {\r\n                            id: 'payout',\r\n                            displayName: 'Payout'\r\n                          }]}\r\n                          datas={this.state.ongoins}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Completed deals ({this.state.completed.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md \" >\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\">Resource / Period</th>\r\n                                <th scope=\"col\">Buyer / Time</th>\r\n                                <th scope=\"col\">Payout</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.completed.map((item) => {\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + item.lock + \"-fill\"}></i></td>\r\n                                    <td>{item.customer}<br ></br>\r\n                                      {item.confirm}{\" -> \"}{item.unfreeze}<br ></br>\r\n\r\n                                    </td>\r\n                                    <td>{item.payout} TRX</td>\r\n                                  </tr>\r\n                                )\r\n                              })}\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"card-footer\">\r\n                        <CsvDownloader\r\n                          filename={\"completed_deals\"}\r\n                          suffix={true}\r\n                          extension=\".csv\"\r\n                          separator=\";\"\r\n                          wrapColumnChar=\"'\"\r\n                          columns={[{\r\n                            id: 'resource',\r\n                            displayName: 'Resource'\r\n                          }, {\r\n                            id: 'order_type',\r\n                            displayName: 'Period'\r\n                          }, {\r\n                            id: 'customer',\r\n                            displayName: 'Buyer'\r\n                          }, {\r\n                            id: 'time',\r\n                            displayName: 'Time'\r\n                          }, {\r\n                            id: 'payout',\r\n                            displayName: 'Payout'\r\n                          }]}\r\n                          datas={this.state.completed}\r\n                          text=\"DOWNLOAD CSV\"\r\n                          className=\"btn btn-info\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Other delegations ({this.state.noregist.length})</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                          <table className=\"table verticle-middle table-responsive-md\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th scope=\"col\"></th>\r\n\r\n                                <th scope=\"col\">Resource</th>\r\n                                <th scope=\"col\">TRX</th>\r\n                                <th scope=\"col\">Wallet / Expire Time</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {this.state.noregist.map((item) => {\r\n                                let amount = item.sun;\r\n                                let receiverAddress = item.wallet;\r\n                                let resource = item.resource;\r\n                                let ownerAddress = item.ownerAddress;\r\n\r\n                                return (\r\n                                  <tr key={item.index}>\r\n                                    <td className=\"text-end\">\r\n                                      <div className=\"dropdown custom-dropdown mb-0\">\r\n                                        <div className=\"btn sharp btn-primary tp-btn\" data-bs-toggle=\"dropdown\">\r\n                                          <i className=\"bi bi-three-dots-vertical\"></i>\r\n                                        </div>\r\n                                        <div className=\"dropdown-menu dropdown-menu-end\">\r\n                                          <a className=\"dropdown-item text-info\" href=\"https://tronscan.org/#/wallet/resources\" target=\"_blank\" rel=\"noopener noreferrer\">View on TronScan</a>\r\n\r\n                                          <button className=\"dropdown-item text-danger\" onClick={async () => {\r\n                                            let transaction = await this.props.tronWeb.transactionBuilder.undelegateResource(amount, receiverAddress, resource, ownerAddress);\r\n                                            transaction = await window.tronWeb.trx.sign(transaction)\r\n                                            transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n                                            this.setState({\r\n                                              ModalTitulo: \"Result: \" + transaction.result,\r\n                                              ModalBody: <a className=\"btn btn-primary\" href={\"https://tronscan.org/#/transaction/\" + transaction.txid} target=\"_blank\" rel=\"noopener noreferrer\">see result in TronScan</a>\r\n                                            })\r\n\r\n                                            window.$(\"#alert\").modal(\"show\");\r\n                                            this.estado();\r\n\r\n                                          }}>Reclaim Resource</button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </td>\r\n                                    <td>{item.resource} </td>\r\n                                    <td>{(item.trx).toLocaleString('en-US')} </td>\r\n\r\n                                    <td>{item.wallet}<br ></br>\r\n                                      {item.expire}\r\n                                    </td>\r\n\r\n                                  </tr>\r\n                                )\r\n                              })}\r\n\r\n                            </tbody>\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h1 className=\"text-3xl font-bold mb-6\">Frequently Asked Questions</h1>\r\n\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n\r\n                        {faqs.map((faq, index) => (\r\n                          <FaqItem key={index} question={faq.question} answer={faq.answer} />\r\n                        ))}\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                      <div className=\"card-header\">\r\n                        <h4 className=\"card-title\">Other Info</h4>\r\n                      </div>\r\n                      <div className=\"card-body\">\r\n                        <p>\r\n                          {\"🔵\"} Join the telegram providers <b><a href=\"https://t.me/+V-HHCgAevxA5NGQ0\" target=\"_blank\" rel=\"noopener noreferrer\">channel</a></b> to keep tuned with the latest news!\r\n\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div >\r\n\r\n          <div className=\"modal fade\" id=\"alert\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n                  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p>{this.state.ModalBody}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </>);\r\n      }\r\n    } else {\r\n\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\" style={{ border: \"none\" }}>\r\n                      <h2 className=\"heading\">Ready for rent your energy</h2>\r\n\r\n                      <p>\r\n                        You are not a supplier? if you want to become one read the following article <br></br>\r\n                        <a className=\"btn btn-primary\" href=\"https://brutus.finance/brutusprovider.html\">Become a supplier</a>\r\n                      </p>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>);\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default withTranslation()(ProviderPanel);\r\n","import React, { Component } from \"react\";\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nimport Cookies from 'universal-cookie';\r\nimport utils from \"../utils\";\r\n\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\n\r\nvar moment = require('moment-timezone');\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst cookies = new Cookies(null, { path: '/' });\r\n\r\nclass ApiPanel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      provider: false,\r\n      rent: false,\r\n      elegible: false,\r\n      sellband: false,\r\n      bandover: \"0\",\r\n      burn: false,\r\n      noti: false,\r\n      autofreeze: \"off\",\r\n      paymenthour: \"Loading...\",\r\n      maxdays: \"Loading...\",\r\n      ongoins: [],\r\n      nexpayment: \"Loading...\",\r\n      payoutRatio: 0,\r\n      ratioEnergy: 0,\r\n      ratioEnergyPool: 0,\r\n      paymentPoints: 0,\r\n      voteSR: \"\",\r\n      newVoteSR: \"\",\r\n      proEnergyTotal: 0,\r\n      proEnergy: 0,\r\n      proBand: 0,\r\n      proBandTotal: 0,\r\n      noregist: [],\r\n      historic: [],\r\n      dataHistoric: [],\r\n      alturaGrafico: \"0px\",\r\n      tiempo: \"\",\r\n      payment: \"0\",\r\n      completed: [],\r\n      totalPayed30: \"Loading...\",\r\n      allPayed: \"Loading...\"\r\n\r\n    };\r\n\r\n    this.estado = this.estado.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setPaymentHour = this.setPaymentHour.bind(this);\r\n    this.setMaxDays = this.setMaxDays.bind(this);\r\n    this.setFreez = this.setFreez.bind(this);\r\n    this.setWalletSr = this.setWalletSr.bind(this);\r\n\r\n    this.grafico = this.grafico.bind(this);\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const { t } = this.props;\r\n    document.title = \"B.F | API Panel\"\r\n    document.getElementById(\"tittle\").innerText = t(\"API Panel\")\r\n\r\n    setTimeout(() => {\r\n      this.estado()\r\n    }, 3 * 1000)\r\n\r\n    setInterval(() => {\r\n      this.estado()\r\n    }, 30 * 1000)\r\n\r\n\r\n  }\r\n\r\n\r\n  async handleChange(event) {\r\n\r\n    let elemento = event.target\r\n\r\n    //console.log(elemento.id)\r\n\r\n    switch (elemento.id) {\r\n      case \"rent\":\r\n\r\n        if (elemento.value !== this.state.rent) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = 1\r\n          if (this.state.rent) {\r\n            activate = 0\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, active: activate }\r\n            fetch(utils.apiProviders + \"set/active\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            rent: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"band\":\r\n\r\n        if (elemento.value !== this.state.sellband) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let over = 0\r\n          let activate = \"0\"\r\n          if (!this.state.sellband) {\r\n            activate = \"1\"\r\n            over = parseInt(prompt(\"sell band over, leave \", this.state.bandover))\r\n\r\n            console.log(over)\r\n            let body = { wallet: this.props.accountAddress, sellbandover: over }\r\n\r\n            fetch(utils.apiProviders + \"set/sellbandover\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n          }\r\n          // activar renta\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, sellband: activate }\r\n            fetch(utils.apiProviders + \"set/sellband\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            sellband: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"burn\":\r\n\r\n        if (elemento.value !== this.state.burn) {\r\n          //alert(\"diferentes: \" + this.state.rent) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.burn) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, burn: activate }\r\n            fetch(utils.apiProviders + \"set/burn\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          //console.log(elemento.value)\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n\r\n          this.setState({\r\n            burn: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      case \"voteSR\":\r\n\r\n        this.setState({\r\n          newVoteSR: elemento.value\r\n        })\r\n\r\n        break;\r\n\r\n      case \"noti\":\r\n\r\n        if (elemento.value !== this.state.noti) {\r\n          //alert(\"diferentes: \" + this.state.noti) //hace cambio\r\n\r\n          let activate = \"1\"\r\n          if (this.state.noti) {\r\n            activate = \"0\"\r\n          }\r\n          // activar renta\r\n\r\n\r\n          try {\r\n            let body = { wallet: this.props.accountAddress, allow_notifications: activate }\r\n            fetch(utils.apiProviders + \"set/allow_notifications\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                'token-api': process.env.REACT_APP_TOKEN,\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(body)\r\n            })\r\n\r\n\r\n          } catch (error) {\r\n            console.log(error.toString())\r\n          }\r\n\r\n          let value = false\r\n          if (elemento.value === \"true\") {\r\n            value = true\r\n          }\r\n\r\n          this.setState({\r\n            noti: value\r\n          })\r\n        }\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async grafico(external_data) {\r\n\r\n    if (!document.getElementById('chartdiv')) return;\r\n\r\n    if (this.root) {\r\n      this.root.dispose();\r\n    }\r\n    const root = am5.Root.new(\"chartdiv\");\r\n    root._logo.dispose();\r\n    let chart = root.container.children.push(\r\n      am5xy.XYChart.new(root, {\r\n        panY: false,\r\n        layout: root.verticalLayout\r\n      })\r\n    );\r\n\r\n    // Define data\r\n    let data = [{\r\n      date: new Date(1712953610 * 1000),\r\n      amount: 1000,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712780810 * 1000),\r\n      amount: 1300,\r\n      coin: \"trx\"\r\n    }, {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 1200,\r\n      coin: \"trx\"\r\n    },\r\n    {\r\n      date: new Date(1712694410 * 1000),\r\n      amount: 250,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712521610 * 1000),\r\n      amount: 200,\r\n      coin: \"brst\"\r\n    }, {\r\n      date: new Date(1712435210 * 1000),\r\n      amount: 500,\r\n      coin: \"brst\"\r\n    }];\r\n\r\n    data = external_data\r\n\r\n    // Create Y-axis\r\n    let yAxis = chart.yAxes.push(\r\n      am5xy.ValueAxis.new(root, {\r\n        renderer: am5xy.AxisRendererY.new(root, {})\r\n      })\r\n    );\r\n\r\n    // Create X-Axis\r\n    let xAxis = chart.xAxes.push(\r\n      am5xy.CategoryAxis.new(root, {\r\n        baseInterval: { timeUnit: \"day\", count: 1 },\r\n        renderer: am5xy.AxisRendererX.new(root, {}),\r\n        categoryField: \"date\"\r\n      })\r\n    );\r\n    xAxis.data.setAll(data);\r\n\r\n    // Create series\r\n\r\n    let series1 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"TRX\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"amount\",\r\n        categoryXField: \"date\",\r\n        fill: am5.color(0x7135ff),\r\n        stroke: am5.color(0x7135ff)\r\n      })\r\n    );\r\n    series1.data.setAll(data);\r\n\r\n\r\n    // Create series\r\n    /*\r\n    let series2 = chart.series.push(\r\n      am5xy.ColumnSeries.new(root, {\r\n        name: \"Payed in BRST\",\r\n        xAxis: xAxis,\r\n        yAxis: yAxis,\r\n        valueYField: \"value\",\r\n        categoryXField: \"date\"\r\n      })\r\n    );\r\n    series2.data.setAll(data);\r\n*/\r\n\r\n    // Add legend\r\n    /*\r\n    let legend = chart.children.push(am5.Legend.new(root, {}));\r\n    legend.data.setAll(chart.series.values);\r\n    */\r\n\r\n    // Add cursor\r\n    chart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\r\n\r\n    this.root = root;\r\n  }\r\n\r\n  async setFreez(data) {\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, autofreeze: data }\r\n      await fetch(utils.apiProviders + \"set/autofreeze\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setPaymentHour(hour) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, paymenthour: hour }\r\n      await fetch(utils.apiProviders + \"set/paymenthour\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setMaxDays(days) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, maxdays: days }\r\n      await fetch(utils.apiProviders + \"set/maxdays\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n\r\n  }\r\n\r\n  async setWalletSr(wallet) {\r\n\r\n    try {\r\n      let body = { wallet: this.props.accountAddress, sr: wallet }\r\n      await fetch(utils.apiProviders + \"set/sr\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          'token-api': process.env.REACT_APP_TOKEN,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(body)\r\n      })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    this.estado()\r\n  }\r\n\r\n  async estado() {\r\n\r\n    this.setState({\r\n      tiempo: moment.tz.guess(true)\r\n    })\r\n\r\n    var url = utils.apiProviders;\r\n\r\n    let provider = { result: false };\r\n\r\n    try {\r\n      provider = await fetch(url + \"provider?wallet=\" + this.props.accountAddress)\r\n        .then((r) => {\r\n          return r.json();\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n      console.log(error.toString())\r\n    }\r\n\r\n    //firmar mensaje brutus.finance->\r\n    //console.log(this.props.tronlink.adapter)\r\n\r\n    if (provider.result && this.props.tronlink.adapter.connected) {\r\n\r\n      let firma = await cookies.get('firma-tron')\r\n      let messge = \"brutus.finance 2024\"\r\n\r\n      if (firma === undefined) {\r\n        firma = await this.props.tronlink.adapter.signMessage(messge);\r\n        cookies.set('firma-tron', firma, { maxAge: 86400 });\r\n      } else {\r\n        firma = await cookies.get('firma-tron');\r\n      }\r\n\r\n      let auth = false\r\n      try {\r\n        if (await window.tronWeb.trx.verifyMessageV2(messge, firma) === this.props.tronlink.adapter.address || firma) {\r\n          auth = true\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error.toString())\r\n      }\r\n\r\n      if (firma !== undefined && auth) {\r\n\r\n        this.setState({\r\n          provider: true,\r\n        })\r\n\r\n        let info = {}\r\n\r\n        try {\r\n\r\n          info = await fetch(url + \"status?wallet=\" + this.props.accountAddress)\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n        let naranja = new BigNumber((info.ratio_e - info.ratio_e_pool) * 100).dp(3).toNumber()\r\n\r\n        if (naranja >= 0) {\r\n          naranja = \"+\" + naranja\r\n        }\r\n\r\n        if (info.freez) {\r\n          info.freez = (info.freez).toLowerCase()\r\n\r\n        }\r\n\r\n        if (info.freez === \"no\") {\r\n          info.freez = \"Off\"\r\n\r\n        }\r\n\r\n\r\n        var cuenta = await this.props.tronWeb.trx.getAccountResources(this.props.accountAddress);\r\n\r\n\r\n        var providerEnergy = 0\r\n        var providerEnergyTotal = 0\r\n\r\n        var providerBand = 0\r\n        var providerBandTotal = 0\r\n\r\n\r\n        if (cuenta.EnergyLimit) {\r\n          providerEnergy = cuenta.EnergyLimit\r\n          providerEnergyTotal = cuenta.EnergyLimit\r\n        }\r\n\r\n        if (cuenta.EnergyUsed) {\r\n          providerEnergy -= cuenta.EnergyUsed\r\n        }\r\n\r\n        if (cuenta.freeNetLimit) {\r\n          providerBandTotal = cuenta.freeNetLimit\r\n        }\r\n\r\n        if (cuenta.NetLimit) {\r\n          providerBandTotal += cuenta.NetLimit\r\n        }\r\n\r\n        providerBand = providerBandTotal\r\n\r\n        if (cuenta.freeNetUsed) {\r\n          providerBand -= cuenta.freeNetUsed\r\n\r\n        }\r\n\r\n        if (cuenta.NetUsed) {\r\n          providerBand -= cuenta.NetUsed\r\n        }\r\n\r\n        if (info.allow_notifications === 1) {\r\n          info.allow_notifications = true\r\n        } else {\r\n          info.allow_notifications = false\r\n\r\n        }\r\n\r\n        this.setState({\r\n          rent: info.activo,\r\n          elegible: info.elegible,\r\n          sellband: info.sellband,\r\n          bandover: info.bandover,\r\n          burn: info.burn,\r\n          noti: info.allow_notifications,\r\n          autofreeze: info.freez,\r\n          payhour: info.payhour,\r\n          payment: info.payment,\r\n          paymentPoints: info.payout_ratio * 100,\r\n          maxdays: info.maxdays,\r\n          payhere: info.payhere,\r\n          payoutRatio: info.payout_ratio,\r\n          ratioEnergy: new BigNumber(info.ratio_e * 100).dp(3).toString(10),\r\n          ratioEnergyPool: new BigNumber(info.ratio_e_pool * 100).dp(3).toString(10),\r\n          cNaranja: naranja,\r\n          voteSR: info.srVote,\r\n          proEnergy: providerEnergy,\r\n          proEnergyTotal: providerEnergyTotal,\r\n\r\n          proBand: providerBand,\r\n          proBandTotal: providerBandTotal,\r\n\r\n        })\r\n\r\n        let historic = {}\r\n        try {\r\n\r\n          historic = await fetch(url + \"historic_payments\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ wallet: this.props.accountAddress })\r\n\r\n          }\r\n          )\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n\r\n\r\n        let allPayed = 0\r\n\r\n        try {\r\n\r\n          allPayed = await fetch(url + \"acum_payments\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ wallet: this.props.accountAddress })\r\n\r\n          }\r\n          )\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.data;\r\n            })\r\n\r\n\r\n        } catch (error) {\r\n          console.log(error.toString())\r\n        }\r\n\r\n\r\n\r\n        allPayed = (new BigNumber(allPayed).dp(3).toNumber()).toLocaleString('en-US')\r\n\r\n        this.setState({ allPayed: allPayed })\r\n\r\n        let dataHistoric = []\r\n        let totalPayed30 = new BigNumber(0)\r\n\r\n        historic = historic.toReversed().map((item, index) => {\r\n\r\n          dataHistoric.unshift({ date: new Date(item.date * 1000), amount: new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber(), coin: item.coin })\r\n\r\n          totalPayed30 = totalPayed30.plus(item.amount)\r\n          return (\r\n            <tr key={index}>\r\n              <td>{moment.utc(item.date * 1000).tz(this.state.tiempo).format(\"lll\")}</td>\r\n              <td>{(new BigNumber(item.amount).shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US')}\r\n              </td>\r\n              <td>{item.coin}</td>\r\n            </tr>\r\n          )\r\n        })\r\n\r\n\r\n        this.setState({\r\n          historic: historic,\r\n          dataHistoric: dataHistoric,\r\n          totalPayed30: (totalPayed30.shiftedBy(-6).dp(3).toNumber()).toLocaleString('en-US') + \" TRX\"\r\n        })\r\n\r\n        let ongoins = []\r\n\r\n        try {\r\n\r\n          let body = { wallet: this.props.accountAddress }\r\n\r\n          ongoins = await fetch(url + \"ongoingdeals\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.ongoing_deals;\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        let listWallets = []\r\n\r\n        const ordenesActivas = ongoins.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          let lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            lock = \"unlock\"\r\n          } else {\r\n            lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + lock + \"-fill\"}></i></td>\r\n              <td>{item.customer}<br></br>\r\n                {moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")}{\" -> \"}{moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")}<br></br>\r\n\r\n              </td>\r\n              <td>{item.payout} TRX</td>\r\n            </tr>\r\n          )\r\n        });\r\n\r\n\r\n        let completed = []\r\n\r\n        try {\r\n\r\n          let body = { wallet: this.props.accountAddress }\r\n\r\n          completed = await fetch(url + \"completed_deals\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              'token-api': process.env.REACT_APP_TOKEN,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n          })\r\n            .then((r) => {\r\n              return r.json();\r\n            })\r\n            .then((r) => {\r\n              return r.completed_deals;\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n        const ordenesCompletadas = completed.map((item, index) => {\r\n\r\n          listWallets.push(item.customer)\r\n\r\n          let lock = \"unlock\"\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"wol\")) {\r\n            lock = \"unlock\"\r\n          } else {\r\n            lock = \"lock\"\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"hour\")) {\r\n            item.order_type = \"HOUR\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"day\")) {\r\n            item.order_type = \"DAY\"\r\n\r\n          }\r\n\r\n          if (((item.order_type).toLowerCase()).includes(\"minutes\")) {\r\n            item.order_type = \"MINUTES\"\r\n\r\n          }\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td>{(item.amount).toLocaleString('en-US')} {item.resource} / {item.order_type} <i className={\"bi bi-\" + lock + \"-fill\"}></i></td>\r\n              <td>{item.customer}<br></br>\r\n                {moment.utc(item.confirm * 1000).tz(this.state.tiempo).format(\"lll\")}{\" -> \"}{moment.utc(item.unfreeze * 1000).tz(this.state.tiempo).format(\"lll\")}<br></br>\r\n\r\n              </td>\r\n              <td>{item.payout} TRX</td>\r\n            </tr>\r\n          )\r\n        });\r\n\r\n\r\n        const delegationInfo = await this.props.tronWeb.trx.getDelegatedResourceAccountIndexV2(this.props.accountAddress)\r\n\r\n        let delegatedExternal = []\r\n\r\n        if (delegationInfo.toAccounts) {\r\n\r\n          for (let index = 0; index < delegationInfo.toAccounts.length; index++) {\r\n            delegationInfo.toAccounts[index] = this.props.tronWeb.address.fromHex(delegationInfo.toAccounts[index])\r\n\r\n            if (listWallets.indexOf(delegationInfo.toAccounts[index]) === -1) {\r\n              let info = await this.props.tronWeb.trx.getDelegatedResourceV2(this.props.accountAddress, delegationInfo.toAccounts[index])\r\n\r\n              //console.log(info.delegatedResource)\r\n\r\n              for (let index2 = 0; index2 < info.delegatedResource.length; index2++) {\r\n\r\n                let order = {\r\n                  wallet: delegationInfo.toAccounts[index],\r\n                  resource: \"ENERGY\",\r\n                  trx: 0,\r\n                  sun: \"0\",\r\n                  expire: \"--/--/-- 00:00 --\"\r\n                }\r\n\r\n                if (info.delegatedResource[index2].frozen_balance_for_energy) {\r\n\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_energy / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_energy\r\n                  if (info.delegatedResource[index2].expire_time_for_energy) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_energy)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n                  }\r\n                } else {\r\n                  order.trx = info.delegatedResource[index2].frozen_balance_for_bandwidth / 10 ** 6\r\n                  order.sun = info.delegatedResource[index2].frozen_balance_for_bandwidth\r\n                  if (info.delegatedResource[index2].expire_time_for_bandwidth) {\r\n                    order.expire = new Date(info.delegatedResource[index2].expire_time_for_bandwidth)\r\n                    order.expire = moment.utc(order.expire).tz(this.state.tiempo).format(\"lll\")\r\n\r\n                  }\r\n\r\n\r\n                  order.resource = \"BANDWIDTH\"\r\n                }\r\n\r\n\r\n                delegatedExternal.push(order)\r\n\r\n\r\n              }\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n        const ordenesNoregistradas = delegatedExternal.map((item, index) => {\r\n\r\n\r\n          let amount = item.sun;\r\n          let receiverAddress = item.wallet\r\n          let resource = item.resource\r\n          let ownerAddress = this.props.accountAddress\r\n\r\n          return (\r\n            <tr key={index}>\r\n              <td className=\"text-end\">\r\n                <div className=\"dropdown custom-dropdown mb-0\">\r\n                  <div className=\"btn sharp btn-primary tp-btn\" data-bs-toggle=\"dropdown\">\r\n                    <i className=\"bi bi-three-dots-vertical\"></i>\r\n                  </div>\r\n                  <div className=\"dropdown-menu dropdown-menu-end\">\r\n                    <a className=\"dropdown-item text-info\" href=\"https://tronscan.org/#/wallet/resources\" >View on TronScan</a>\r\n\r\n                    <button className=\"dropdown-item text-danger\" onClick={async () => {\r\n                      let transaction = await this.props.tronWeb.transactionBuilder.undelegateResource(amount, receiverAddress, resource, ownerAddress);\r\n                      transaction = await this.props.tronWeb.trx.sign(transaction)\r\n                      transaction = await this.props.tronWeb.trx.sendRawTransaction(transaction)\r\n\r\n                      this.setState({\r\n                        ModalTitulo: \"Result: \" + transaction.result,\r\n                        ModalBody: <a href={\"https://tronscan.org/#/transaction/\" + transaction.txid}>see result in TronScan</a>\r\n                      })\r\n\r\n                      window.$(\"#alert\").modal(\"show\");\r\n\r\n                    }}>Reclaim Resource</button>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n              <td>{item.resource} </td>\r\n              <td>{(item.trx).toLocaleString('en-US')} </td>\r\n\r\n              <td>{item.wallet}<br></br>\r\n                {item.expire}\r\n              </td>\r\n\r\n            </tr>\r\n          )\r\n\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n          ongoins: ordenesActivas,\r\n          noregist: ordenesNoregistradas,\r\n          completed: ordenesCompletadas,\r\n        })\r\n\r\n      }\r\n    } else {\r\n      this.setState({\r\n        provider: false\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n    if (this.state.provider) {\r\n\r\n\r\n      let estatus = <button className=\"btn btn-outline-danger btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-sign-stop-fill\"></i> Stopped</button>\r\n\r\n      if (this.state.rent) {\r\n\r\n        estatus = <button className=\"btn btn-outline-info btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-arrow-clockwise\"></i> Recharging</button>\r\n\r\n        if (this.state.elegible) {\r\n          estatus = <button className=\"btn btn-outline-success btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><i className=\"bi bi-check-circle-fill\"></i> Active</button>\r\n        }\r\n\r\n      }\r\n\r\n\r\n      let campoFreeze = <></>\r\n\r\n      if (this.state.autofreeze !== \"Off\") {\r\n\r\n        campoFreeze = <div className=\"container mt-1\">\r\n          <div className=\"row mt-1\">\r\n            <div className=\"col-12\">Wallet of SR to vote (default: Brutus)</div>\r\n            <div className=\"col-11\">\r\n              <input type=\"text\" className=\"form-control\" id=\"voteSR\" style={{ borderColor: \"#c3c3c3\" }} placeholder={this.state.voteSR} onChange={this.handleChange} disabled={false} ></input>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <i className=\"bi bi-question-circle-fill\" title=\"You can set by which super representative wallet the automatic votes will be made\" onClick={() => {\r\n\r\n                this.setState({\r\n                  ModalTitulo: \"Info\",\r\n                  ModalBody: \"You can set by which super representative wallet the automatic votes will be made\"\r\n                })\r\n\r\n                window.$(\"#alert\").modal(\"show\");\r\n              }}></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        if (this.state.voteSR !== \"\" && TronWeb.isAddress(this.state.newVoteSR) && this.state.voteSR !== this.state.newVoteSR) {\r\n\r\n          campoFreeze = (<>\r\n            {campoFreeze}\r\n            <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={() => {\r\n              this.setWalletSr(this.state.newVoteSR)\r\n            }}>Update Wallet to Vote</button>\r\n\r\n          </>)\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8 col-sm-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\">\r\n\r\n\r\n                      <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\">Status </h2>\r\n\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\">{estatus} </h2>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\"><button type=\"button\" className=\"btn btn-outline-warning btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}><img height=\"15px\" src=\"images/naranja.png\" alt=\"\"></img> {this.state.ratioEnergy} /  {this.state.ratioEnergyPool} </button></h2>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-12 mb-2\">\r\n                            <h2 className=\"heading\"><button className=\"btn btn-outline-secondary btn-block\" style={{ cursor: \"default\", maxHeight: \"36.55px\", fontSize: \"12px\" }}> <span role=\"img\" aria-label=\"$\">💲</span> Payout %{this.state.paymentPoints} </button></h2>\r\n\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 mb-2\">\r\n                            Energy ({(this.state.proEnergy).toLocaleString('en-US')}/{(this.state.proEnergyTotal).toLocaleString(\"en-us\")}) <img height=\"15px\" src=\"images/energy.png\" alt=\"\" ></img>\r\n                            <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                              <div className=\"progress-bar bg-warning\" role=\"progressbar\" style={{ \"width\": ((this.state.proEnergy / this.state.proEnergyTotal) * 100) + \"%\" }}\r\n                                aria-valuenow={(this.state.proEnergy / this.state.proEnergyTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 mb-2\">\r\n                            Bandwidth ({(this.state.proBand).toLocaleString(\"en-us\")}/{(this.state.proBandTotal).toLocaleString(\"en-us\")}) 🌐\r\n                            <div className=\"progress\" style={{ margin: \"5px\", backgroundColor: \"lightgray\" }}>\r\n                              <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ \"width\": ((this.state.proBand / this.state.proBandTotal) * 100) + \"%\" }}\r\n                                aria-valuenow={(this.state.proBand / this.state.proBandTotal) * 100} aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"rent\" checked={this.state.rent} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Rent <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume the bot\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Pause/Resume the bot\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"burn\" checked={this.state.burn} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Burn <i className=\"bi bi-question-circle-fill\" title=\"Allow TRX burn to accept new orders when you run out of bandwidth\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Allow TRX burn to accept new orders when you run out of bandwidth\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-4 col-sm-6 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"noti\" checked={this.state.noti} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Notifications <i className=\"bi bi-question-circle-fill\" title=\"Pause/Resume notifications from the telegram bot\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Pause/Resume notifications from the telegram bot\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-sm-12 form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"band\" checked={this.state.sellband} onChange={this.handleChange} ></input>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sell Band over: {(this.state.bandover).toLocaleString(\"en-us\")} <i className=\"bi bi-question-circle-fill\" title=\"Sell your staked bandwidth over the amount you establish\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Sell your staked bandwidth over the amount you establish\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i></label>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"row mt-3\">\r\n\r\n                          <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle \" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu1\" >Payment hour: {this.state.payhour} GMT</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Set the time you want to receive your daily payments\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Set the time you want to receive your daily payments\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu1\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"130\")}>1:30 GMT</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"930\")}>9:30 GMT</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setPaymentHour(\"1730\")}>17:30 GMT</button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-6 col-md-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"90%\" }} data-bs-toggle=\"dropdown\" id=\"menu2\">Max Days: {this.state.maxdays}</button> <i className=\"bi bi-question-circle-fill\" title=\"Establish the max. duration of the orders you want to accept\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Establish the max. duration of the orders you want to accept\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu2\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays('1h')}>1h</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(3)} >3 days</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(7)}>7 days</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setMaxDays(14)}>14 days</button>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\" style={{ width: \"95.33%\" }} data-bs-toggle=\"dropdown\" id=\"menu\" >Autofreeze: {this.state.autofreeze}</button> {\"  \"} <i className=\"bi bi-question-circle-fill\" title=\"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\" onClick={() => {\r\n\r\n                              this.setState({\r\n                                ModalTitulo: \"Info\",\r\n                                ModalBody: \"Let the bot freeze the remaining TRX in your wallet (leaving 100 TRX unfrozen)\"\r\n                              })\r\n\r\n                              window.$(\"#alert\").modal(\"show\");\r\n                            }}></i>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"menu\">\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"no\")}>Off</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"bandwidth\")}>Bandwidth</button>\r\n                              <button className=\"dropdown-item\" onClick={() => this.setFreez(\"energy\")}>Energy</button>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"col-lg-12 col-sm-12 mb-2\">\r\n                            {campoFreeze}\r\n                          </div>\r\n\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-4 col-sm-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header border-0 pb-0\">\r\n                      <h2 className=\"heading mb-0 m-auto\">Next Payment</h2>\r\n                    </div>\r\n                    <div className=\"card-body text-center pt-3\">\r\n                      <div className=\"mt-1\">Hour {this.state.payhour} GMT</div>\r\n                      <hr></hr>\r\n                      <div className=\"count-num mt-1\">{(this.state.payment).toLocaleString(\"en-US\")} TRX</div>\r\n                      <hr></hr>\r\n\r\n                      <div className=\"mt-1\">that will be paid here: <u>{this.state.payhere}</u></div>\r\n\r\n                      <hr></hr>\r\n\r\n                      <div className=\"mt-1\">Total earned all time:<br>\r\n                      </br><b>{this.state.allPayed} TRX</b> </div>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">last {this.state.historic.length} payments = {this.state.totalPayed30}</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-lg-8 col-sm-12\">\r\n                          <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                            <table className=\"table verticle-middle table-responsive-md \" >\r\n                              <thead>\r\n                                <tr>\r\n                                  <th scope=\"col\">Date</th>\r\n                                  <th scope=\"col\">Amount</th>\r\n                                  <th scope=\"col\">Coin</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {this.state.historic}\r\n\r\n                              </tbody>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-4 col-sm-12\">\r\n                          <div className=\"mb-3\" id=\"chartdiv\" style={{ height: this.state.alturaGrafico, backgroundColor: \"white\" }}></div>\r\n                          <button className=\"btn btn-success\" onClick={() => { if (this.state.alturaGrafico === \"0px\") { this.setState({ alturaGrafico: \"350px\" }); this.grafico(this.state.dataHistoric) } else { this.setState({ alturaGrafico: \"0px\" }); this.root.dispose(); } }}>Graphic (Open / Close)</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Ongoing deals ({this.state.ongoins.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md \" >\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Resource / Period</th>\r\n                              <th scope=\"col\">Buyer / Time</th>\r\n                              <th scope=\"col\">Payout</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.ongoins}\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Completed deals ({this.state.completed.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md \" >\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\">Resource / Period</th>\r\n                              <th scope=\"col\">Buyer / Time</th>\r\n                              <th scope=\"col\">Payout</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.completed}\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h4 className=\"card-title\">Other delegations ({this.state.noregist.length})</h4>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <div className=\"table-responsive recentOrderTable overflow-scroll\" style={{ height: \"350px\" }}>\r\n                        <table className=\"table verticle-middle table-responsive-md\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th scope=\"col\"></th>\r\n\r\n                              <th scope=\"col\">Resource</th>\r\n                              <th scope=\"col\">TRX</th>\r\n                              <th scope=\"col\">Wallet / Expire Time</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.noregist}\r\n\r\n\r\n\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div >\r\n\r\n        <div className=\"modal fade\" id=\"alert\">\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">{this.state.ModalTitulo}</h5>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\">\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>{this.state.ModalBody}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </>);\r\n    } else {\r\n      return (<>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card exchange\">\r\n                    <div className=\"card-header d-block\">\r\n                      <h2 className=\"heading\">Status</h2>\r\n\r\n                      <p>you are not a supplier, if you want to become one read the following <a className=\"btn btn-primary\" href=\"https://brutus.finance/brutusprovider.html\">article</a></p>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n      </>);\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ApiPanel)","import React, { Component } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport utils from \"./utils/index.jsx\";\r\nimport SEO from \"./components/SEO.jsx\";\r\nimport { TronLinkAdapter } from '@tronweb3/tronwallet-adapters';\r\n\r\nimport abi_PROXY from \"./assets/abi/Proxy\";\r\nimport abi_POOLBRST from \"./assets/abi/PoolBRSTv4\";\r\nimport abi_SimpleSwap from \"./assets/abi/SimpleSwapV2\";\r\nimport abi_LOTERIA from \"./assets/abi/Lottery\";\r\n\r\nimport Alert from \"./components/Alert.jsx\";\r\n\r\nimport Home from \"./pages/Home.jsx\";\r\n\r\nimport Brut from \"./pages/BRUT.jsx\";\r\nimport Brst from \"./pages/BRST-Proxy.jsx\";\r\nimport Nft from \"./pages/BRGY.jsx\";\r\nimport LOTERIA from \"./pages/BRLT.jsx\";\r\nimport EBOT from \"./pages/EBOT.jsx\";\r\nimport PRO from \"./pages/PRO.jsx\";\r\nimport API from \"./pages/API.jsx\";\r\n\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst striptags = require('striptags');\r\n\r\n\r\nlet lgSelector = \"en\";\r\n\r\nconst tronWeb = {}\r\n\r\nconst adapter = new TronLinkAdapter();\r\n\r\nconst adressDefault = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\r\n\r\nconst imgLoading = <img src=\"images/cargando.gif\" height=\"20px\" alt=\"loading...\" />\r\n\r\nconst cookies = new Cookies(null, { path: '/', maxAge: 60 * 60 * 24 * 30 });\r\n\r\nlet theme = cookies.get('theme') || \"light\";\r\ndocument.documentElement.setAttribute(\"data-theme-version\", theme);\r\n\r\nlet tryes = 2\r\nfunction setDarkTheme() {\r\n\r\n  if (theme === \"light\") {\r\n    theme = \"dark\";\r\n  } else {\r\n    theme = \"light\";\r\n  }\r\n\r\n  document.documentElement.setAttribute(\"data-theme-version\", theme);\r\n  cookies.set('theme', theme);\r\n\r\n}\r\n\r\nlet nextUpdate = 0\r\nlet intervalId = null\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ruta: \"\",\r\n      accountAddress: adressDefault,\r\n      tronlink: {\r\n        installed: false,\r\n        loggedIn: false,\r\n        viewer: false,\r\n        adapter: {}\r\n      },\r\n      tronWeb: tronWeb,\r\n      contrato: {\r\n        ready: false,\r\n        BRUT_USDT: null,\r\n        BRUT: null,\r\n        MBOX: null,\r\n        loteria: null,\r\n        BRLT: null,\r\n        USDT: null,\r\n        USDD: null,\r\n        BRGY: null,\r\n        BRST: null,\r\n        BRST_TRX: null,\r\n        BRST_TRX_Proxy: null,\r\n        BRST_TRX_Proxy_fast: null,\r\n\r\n      },\r\n      conexion: false,\r\n      walletConect: \"Conect Wallet\",\r\n      msj: {},\r\n    };\r\n\r\n    this.conectar = this.conectar.bind(this);\r\n    this.estado = this.estado.bind(this);\r\n\r\n    this.route = this.route.bind(this);\r\n    this.loadContracts = this.loadContracts.bind(this);\r\n    this.selecionarIdioma = this.selecionarIdioma.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    document.documentElement.setAttribute(\"data-theme-version\", theme);\r\n\r\n    let { walletConect } = this.state;\r\n\r\n    document.getElementById(\"login\").innerHTML = '<span id=\"conectTL\" class=\"btn btn-primary\" style=\"cursor:pointer\" title=\"' + striptags(walletConect) + '\"> Conect Wallet </span> <img src=\"images/TronLinkLogo.png\" height=\"40px\" alt=\"TronLink logo\" />';\r\n    document.getElementById(\"conectTL\").onclick = () => { this.conectar(true); }\r\n\r\n    intervalId = setInterval(() => {\r\n      this.route();\r\n      this.selecionarIdioma();\r\n      if (Date.now() >= nextUpdate) {\r\n\r\n        if (this.state.tronlink.installed && !this.state.tronlink.loggedIn) {\r\n          nextUpdate = Date.now() + 3 * 1000;\r\n        } else {\r\n          nextUpdate = Date.now() + 60 * 1000;\r\n        }\r\n        this.estado(true);\r\n      }\r\n\r\n    }, 3 * 1000);\r\n\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    clearInterval(intervalId)\r\n  }\r\n\r\n\r\n  async selecionarIdioma() {\r\n    const { i18n } = this.props\r\n    try {\r\n      lgSelector = document.getElementById(\"selectLng\").value\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n\r\n    if (i18n.resolvedLanguage !== lgSelector) {\r\n      i18n.changeLanguage(lgSelector);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async conectar(billetera) {\r\n\r\n    if (!this.state.conexion && !adapter.connected && tryes > 0) {\r\n      this.setState({ conexion: true })\r\n\r\n      await adapter.connect()\r\n        .catch((e) => {\r\n          console.log(e.toString())\r\n          this.setState({ msj: { title: \"Wallet connection error\", message: e.toString() } })\r\n          tryes--;\r\n\r\n        })\r\n\r\n      if (adapter.connected) this.estado();\r\n\r\n      this.setState({ conexion: false })\r\n\r\n\r\n    }\r\n\r\n    return adapter.connected;\r\n\r\n\r\n  }\r\n\r\n  async estado() {\r\n\r\n    let { tronlink, accountAddress, walletConect } = this.state;\r\n\r\n    if (window.tronWeb) {\r\n      tronlink['installed'] = true;\r\n    }\r\n\r\n    if (!adapter.address) {\r\n      await this.conectar(true)\r\n    }\r\n\r\n    if (adapter.address) {\r\n      tronlink['loggedIn'] = true;\r\n      tronlink['adapter'] = adapter;\r\n      accountAddress = adapter.address\r\n\r\n    }\r\n\r\n    if (accountAddress !== adressDefault) {\r\n      let vierWallet = accountAddress.substring(0, 6) + \"***\" + accountAddress.substring(accountAddress.length - 6, accountAddress.length)\r\n      document.getElementById(\"login\").innerHTML = '<span class=\"btn gradient-btn\" title=\"' + striptags(accountAddress) + '\" >' + striptags(vierWallet) + '</span>';\r\n\r\n    } else {\r\n      document.getElementById(\"login\").innerHTML = '<span id=\"conectTL\" class=\"btn btn-primary\" style=\"cursor:pointer\" title=\"' + striptags(walletConect) + '\"> Conect Wallet </span> <img src=\"images/TronLinkLogo.png\" height=\"40px\" alt=\"TronLink logo\" />';\r\n      document.getElementById(\"conectTL\").onclick = () => { this.conectar(true); }\r\n    }\r\n\r\n    this.setState({\r\n      accountAddress,\r\n      tronlink: tronlink,\r\n      tronWeb: await utils.getTronweb(accountAddress)\r\n\r\n    });\r\n\r\n    this.loadContracts()\r\n\r\n\r\n  }\r\n\r\n  route() {\r\n    let url = window.location.href;\r\n    if (url.indexOf(\"/?\") >= 0) {\r\n      url = (url.split(\"/?\"))[1];\r\n      if (url.indexOf(\"#\") >= 0) url = (url.split(\"#\"))[0];\r\n      if (url.indexOf(\"&\") >= 0) url = (url.split(\"&\"))[0];\r\n      if (url.indexOf(\"=\") >= 0) url = (url.split(\"=\"))[0];\r\n      if (url === window.location.origin + \"/\" || url === \"utum_source\") url = \"\"\r\n      url = `/#/${url}`\r\n      window.location.replace(url);\r\n    }\r\n\r\n    if (url.indexOf(\"/#/\") >= 0) url = (url.split(\"/#/\"))[1];\r\n    if (url.indexOf(\"?\") >= 0) url = (url.split(\"?\"))[0];\r\n    if (url.indexOf(\"&\") >= 0) url = (url.split(\"&\"))[0];\r\n    if (url.indexOf(\"=\") >= 0) url = (url.split(\"=\"))[0];\r\n    if (url === window.location.origin + \"/\" || url === \"utum_source\") url = \"\"\r\n\r\n    this.setState({ ruta: url })\r\n    return url\r\n  }\r\n\r\n  async loadContracts() {\r\n    let { accountAddress, contrato } = this.state;\r\n\r\n    let web3Contracts = await utils.getTronweb(accountAddress);\r\n\r\n    if (contrato.BRUT === null && utils.BRUT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.BRUT = web3Contracts.contract(utils.TOKEN_ABI, utils.BRUT);\r\n    }\r\n\r\n    if (contrato.USDT === null && utils.USDT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 1);\r\n      contrato.USDT = web3Contracts.contract(utils.TOKEN_ABI, utils.USDT);\r\n      contrato.USDD = web3Contracts.contract(utils.TOKEN_ABI, utils.USDD);\r\n\r\n    }\r\n\r\n    if (contrato.BRUT_USDT === null && utils.SC !== \"\") {\r\n      contrato.BRUT_USDT = web3Contracts.contract(utils.ABI_SC, utils.SC);\r\n    }\r\n\r\n    if (contrato.BRST_TRX === null && utils.SC2 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX = await web3Contracts.contract().at(utils.SC2);\r\n    }\r\n\r\n    if (contrato.BRST_TRX_Proxy === null && utils.ProxySC2 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.Proxy = web3Contracts.contract(abi_PROXY, utils.ProxySC2);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX_Proxy = web3Contracts.contract(abi_POOLBRST, utils.ProxySC2);\r\n    }\r\n\r\n    if (contrato.BRST_TRX_Proxy_fast === null && utils.ProxySC3 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.Proxy_fast = web3Contracts.contract(abi_PROXY, utils.ProxySC3);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST_TRX_Proxy_fast = web3Contracts.contract(abi_SimpleSwap, utils.ProxySC3);\r\n    }\r\n\r\n    if (contrato.BRST === null && utils.BRST !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRST = web3Contracts.contract(utils.TOKEN_ABI, utils.BRST);\r\n    }\r\n\r\n    if (contrato.BRGY === null && utils.BRGY !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.BRGY = await web3Contracts.contract().at(utils.BRGY);\r\n    }\r\n\r\n    if (contrato.MBOX === null && utils.SC3 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress);\r\n      contrato.MBOX = await web3Contracts.contract().at(utils.SC3);\r\n    }\r\n\r\n    if (contrato.BRLT === null && utils.BRLT !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.BRLT = await web3Contracts.contract().at(utils.BRLT);\r\n    }\r\n\r\n    if (contrato.loteria === null && utils.SC4 !== \"\") {\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.ProxyLoteria = web3Contracts.contract(abi_PROXY, utils.SC4);\r\n\r\n      web3Contracts = await utils.getTronweb(accountAddress, 2);\r\n      contrato.loteria = web3Contracts.contract(abi_LOTERIA, utils.SC4);\r\n    }\r\n\r\n    contrato.ready = true;\r\n\r\n    this.setState({\r\n      contrato: contrato,\r\n    })\r\n\r\n    return contrato\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { i18n } = this.props\r\n    let { tronlink, contrato, accountAddress, tronWeb, msj, ruta } = this.state\r\n\r\n    let Retorno = <></>\r\n\r\n    if (window.tronLink === undefined) {\r\n      tronlink.loggedIn = true\r\n    }\r\n\r\n    if (!contrato.ready && !tronlink.loggedIn) {\r\n      Retorno = (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-12\">\r\n              <div className=\"card\">\r\n                <div className='row' style={{ 'padding': '3em', 'decoration': 'none' }} >\r\n                  <div className='col-sm-8'>\r\n                    <h1>{i18n.t(\"preLoad\", { returnObjects: true })[0]}{imgLoading}</h1>\r\n                    <p>\r\n                      {i18n.t(\"preLoad\", { returnObjects: true })[1]}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n\r\n      \r\n      switch (ruta) {\r\n\r\n        case \"brut\":\r\n          Retorno = <Brut accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb}  />\r\n          break;\r\n        case \"brst\":\r\n          Retorno = <Brst accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} />\r\n          break;\r\n        case \"brgy\":\r\n          Retorno = <Nft accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb}  />\r\n          break;\r\n        case \"brlt\":\r\n          Retorno = <LOTERIA accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb}  />\r\n          break;\r\n        case \"rent\":\r\n        case \"ebot\":\r\n          Retorno = (<>\r\n            <SEO\r\n              title=\"Brutus | Decentralized Energy & Bandwidth Rental Platform\"\r\n              description=\"Brutus is a decentralized platform for renting energy and bandwidth on the Tron network. We offer a user-friendly interface and competitive prices for all your resource rental needs.\"\r\n            />\r\n            <EBOT accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb}  />\r\n          </>)\r\n          break;\r\n        case \"pro\":\r\n          Retorno = <PRO accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} tronlink={tronlink}  />\r\n          break;\r\n        case \"api\":\r\n          Retorno = <API accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb} tronlink={tronlink}  />\r\n          break;\r\n        case \"portfolio\":\r\n        case \"wallet\":\r\n          Retorno = <Home accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb}  />\r\n          break;\r\n        default:\r\n          Retorno = (<>\r\n            <SEO\r\n              title=\"Brutus | Decentralized Energy & Bandwidth Rental Platform\"\r\n              description=\"Brutus is a decentralized platform for renting energy and bandwidth on the Tron network. We offer a user-friendly interface and competitive prices for all your resource rental needs.\"\r\n            />\r\n            <EBOT accountAddress={accountAddress} contrato={contrato} tronWeb={tronWeb}  />\r\n          </>)\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    return (<>\r\n      <Helmet>\r\n        <title>{ruta.length > 1 ? ruta.toUpperCase()+\" | \" : \"\" }Brutus.Finance</title>\r\n        <meta property=\"og:title\" content={(ruta.length > 1 ? ruta.toUpperCase()+\" | \" : \"\" )+ \"Brutus.Finance\"} />\r\n        <meta property=\"og:description\" content=\"Haz staking de trx y obten los mejores rendimientos del mercado\" />\r\n        <meta property=\"og:image\" content={\"/images/og/brutus-\"+ruta+\".jpg\"} />\r\n        <meta property=\"og:url\" content={\"/#/\"+ruta} />\r\n      </Helmet>\r\n\r\n      {Retorno}\r\n      <Alert {...msj} />\r\n      <button id=\"theme-switch\" onClick={() => { setDarkTheme() }}>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\"><path d=\"M480-120q-150 0-255-105T120-480q0-150 105-255t255-105q14 0 27.5 1t26.5 3q-41 29-65.5 75.5T444-660q0 90 63 153t153 63q55 0 101-24.5t75-65.5q2 13 3 26.5t1 27.5q0 150-105 255T480-120Z\" /></svg>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\"><path d=\"M480-280q-83 0-141.5-58.5T280-480q0-83 58.5-141.5T480-680q83 0 141.5 58.5T680-480q0 83-58.5 141.5T480-280ZM200-440H40v-80h160v80Zm720 0H760v-80h160v80ZM440-760v-160h80v160h-80Zm0 720v-160h80v160h-80ZM256-650l-101-97 57-59 96 100-52 56Zm492 496-97-101 53-55 101 97-57 59Zm-98-550 97-101 59 57-100 96-56-52ZM154-212l101-97 55 53-97 101-59-57Z\" /></svg>\r\n      </button>\r\n    </>)\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default withTranslation()(App);","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n    .use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n        returnObjects: true,\r\n        interpolation: {\r\n            escapeValue: false\r\n        },\r\n        backend: {\r\n            loadPath: '/locales/{{lng}}/translation.json'\r\n        }\r\n    });\r\n\r\nexport default i18n;","import React from \"react\";\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from \"./App.jsx\";\r\nimport './i18n';\r\n\r\nconst root = createRoot(document.getElementById('root')); \r\n\r\nroot.render(<App />);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}